{"version":3,"sources":["/src/index.ts","/src/hmr.ts","/src/app.ts","/src/cytoscapeHelper.ts","/src/dummydata.ts"],"names":[],"mappings":"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","file":"app","sourcesContent":["import \"./hmr\";\r\nimport \"./index.css\";\r\nimport \"./app\";\r\n","import {\r\n    applyPolyfill,\r\n    ReflowStrategy,\r\n    rerenderInnerHTML\r\n} from 'custom-elements-hmr-polyfill';\r\nimport { clearInstance } from '@simple-html/core';\r\n\r\n// resetting all so we get a fresh start\r\nclearInstance(null);\r\n\r\nrerenderInnerHTML();\r\n\r\napplyPolyfill(ReflowStrategy.NONE, 0, (elementName: string) => {\r\n    // rerenderInnerHTML();\r\n    console.log('updated', elementName);\r\n});","import { customElement, inject, property } from \"@simple-html/core\";\r\nimport { CytoscapeHelper } from \"./cytoscapeHelper\";\r\nimport { html } from \"lit-html\";\r\nimport { dummydata } from \"./dummydata\";\r\n\r\n@inject(CytoscapeHelper)\r\n@customElement(\"app-root\")\r\nexport class App extends HTMLElement {\r\n  // references to this $element and parent\r\n  public copyright = \"Copyright (c) 2018 Vegar Ringdal <vegar.ringdal@gmail.com>\";\r\n  public textArea = \"\";\r\n  @property() public showTools = \"\";\r\n  public verticalDraw = true;\r\n\r\n  public cytoscape: any;\r\n\r\n  // for testing purposes so it generates something without data\r\n  public testCables: any = dummydata;\r\n\r\n  constructor(cytoscape: any) {\r\n    super();\r\n    this.cytoscape = cytoscape;\r\n  }\r\n\r\n  public showConfig() {\r\n    this.showTools = \"\";\r\n  }\r\n\r\n  public hideConfig() {\r\n    this.showTools = \"none\";\r\n  }\r\n\r\n  public setImage() {\r\n    this.cytoscape.setImage();\r\n  }\r\n\r\n  public generateImage() {\r\n    const jpg64 = this.cytoscape.cy.png({ full: true, scale: 3 });\r\n    const image = new Image();\r\n    image.src = jpg64;\r\n    const w = window.open(\"\");\r\n    w.document.write(image.outerHTML);\r\n  }\r\n\r\n  public generate() {\r\n    this.hideConfig();\r\n    let cables: any = [];\r\n    if (this.textArea !== \"\") {\r\n      let lines = this.textArea.split(\"\\n\");\r\n      lines.forEach((line, index) => {\r\n        let columns = line.split(\"\\t\");\r\n        if (columns.length === 1) {\r\n          columns = line.split(\";\");\r\n          if (columns.length === 1) {\r\n            columns = line.split(\"    \");\r\n          }\r\n        }\r\n        if (columns[0]) {\r\n          cables.push({\r\n            tag: columns[0] || \"NA\",\r\n            tagFrom: columns[1] || \"NAfrom\" + index,\r\n            tagTo: columns[2] || \"NAto\" + index,\r\n            type: columns[3] || \"NA\",\r\n            areaFrom: columns[4] || \"NA\",\r\n            areaTo: columns[5] || \"NA\"\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    let cablesOption = cables.length ? cables : this.testCables;\r\n    this.cytoscape.generate(cablesOption, this.verticalDraw);\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <header class=\"flex flex-col flex-shrink-0 border-b\">\r\n        <h1 class=\"flex-1 p-2 text-3xl\">Block Generator</h1>\r\n        <h5 class=\" p-2 text\" >${this.copyright}</h5>\r\n      </header>\r\n\r\n      <div class=\"flex flex-row flex-grow\">\r\n        <div class=\"flex-col p-2  border-r\">\r\n          <button\r\n            class=\"bg-indigo-500 white p-2 m-2 rounded\"\r\n            @click=${this.generate}\r\n          >\r\n            Generate block\r\n          </button>\r\n          <div>\r\n            <label class=\"p-2\"\r\n              ><input\r\n                type=\"checkbox\"\r\n                .checked=${this.verticalDraw}\r\n                @click=${(e:any) => {\r\n                  this.verticalDraw = e.target.checked;\r\n                }}\r\n              />\r\n              vertical block\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <p class=\"ml-2\">\r\n              Paste in tab delimited data with these columns\r\n              <br />\r\n              (copy from excel..)\r\n            </p>\r\n            <ul class=\"ml-2 p-5 list-disc\">\r\n              <li>Tag</li>\r\n              <li>TagFrom</li>\r\n              <li>TagTo</li>\r\n              <li>CableType</li>\r\n              <li>AreaFrom</li>\r\n              <li>AreaTo</li>\r\n            </ul>\r\n          </div>\r\n          <textarea placeholder=\"Generator will use dummy data if nothing is added.\" class=\"m-2 w-56 h-56\"></textarea>\r\n        </div>\r\n\r\n        <div class=\"p-1 side\"><div id=\"cy\"></div></div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n","const cytoscape = require('cytoscape');\r\nconst cytoscapeDagre = require('cytoscape-dagre');\r\ncytoscape.use(cytoscapeDagre);\r\n\r\nexport class CytoscapeHelper {\r\n\r\n    public cy: any;\r\n\r\n\r\n    /********************************************\r\n     *  1 extra layout not in cytoscape by default\r\n     * ******************************************/\r\n    public dagreLayout: any = {\r\n        name: 'dagre',\r\n        // dagre algo options, uses default value on undefined\r\n        nodeSep: 50, // undefined, // the separation between adjacent nodes in the same rank\r\n        edgeSep: 10, // undefined, // the separation between adjacent edges in the same rank\r\n        rankSep: 50, // undefined, // the separation between adjacent nodes in the same rank\r\n        rankDir: 'TB', // undefined, // 'TB' for top to bottom flow, 'LR' for left to right\r\n        minLen: function (/*edge*/) {\r\n            return 0.5;\r\n        }, // number of ranks to keep between the source and target of the edge\r\n        edgeWeight: function (/*edge*/) {\r\n            return 1;\r\n        }, // higher weight edges are generally made shorter and straighter than lower weight edges\r\n\r\n        // general layout options\r\n        fit: true, // whether to fit to viewport\r\n        padding: 20, // fit padding\r\n        animate: false, // whether to transition the node positions\r\n        animationDuration: 500, // duration of animation in ms if enabled\r\n        animationEasing: undefined, // easing of animation if enabled\r\n        boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\r\n        ready: function () {\r\n            // na\r\n        }, // on layoutready\r\n        stop: function () {\r\n            // na\r\n        } // on layoutstop\r\n    };\r\n\r\n\r\n\r\n    /********************************************\r\n     *  call to generate\r\n     * ******************************************/\r\n    public generate(cables: any, toToBottom: any) {\r\n\r\n        this.dagreLayout.rankDir = toToBottom ? 'TB' : 'LR';\r\n\r\n        this.createCY();\r\n        this.addStyle();\r\n        this.createData(cables);\r\n        this.setLayout();\r\n    }\r\n\r\n\r\n    /********************************************\r\n     *  creates the cy element\r\n     * ******************************************/\r\n    public createCY() {\r\n\r\n\r\n        this.cy = cytoscape({\r\n            container: document.getElementById('cy'),\r\n            wheelSensitivity: 0.1\r\n        });\r\n    }\r\n\r\n\r\n    /********************************************\r\n     *  creates the data nodes/edges\r\n     * ******************************************/\r\n    public createData(cables: any[]) {\r\n\r\n        // this is not very good atm, but works..\r\n\r\n        let addedEq = new Set();\r\n        let nodes: any = [];\r\n        let edges: any = [];\r\n\r\n\r\n        // loop the cable tags\r\n        cables.forEach((cable: any, i: number) => {\r\n\r\n            // variables\r\n            let tag = cable.tag;\r\n            let cableType = cable.type;\r\n            let areaFrom = cable.areaFrom;\r\n            let areaTo = cable.areaTo;\r\n            let tagFrom = cable.tagFrom;\r\n            let tagTo = cable.tagTo;\r\n\r\n\r\n            //\r\n            // check if equipment in tag from is added as node\r\n            //\r\n            if (!addedEq.has(tagFrom)) {\r\n                addedEq.add(tagFrom);\r\n\r\n\r\n                // add area from node *\r\n                if (!addedEq.has(areaFrom)) {\r\n                    addedEq.add(areaFrom);\r\n                    nodes.push({\r\n                        data: {\r\n                            id: areaFrom\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                // add from-tag node *\r\n                nodes.push({\r\n                    data: {\r\n                        id: tagFrom,\r\n                        parent: areaFrom\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n            //\r\n            // check if equipment is added as node\r\n            //\r\n            if (!addedEq.has(tagTo)) {\r\n                addedEq.add(tagTo);\r\n\r\n\r\n\r\n                // add areato node *\r\n                if (!addedEq.has(areaTo)) {\r\n                    addedEq.add(areaTo);\r\n                    nodes.push({\r\n                        data: {\r\n                            id: areaTo\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                // add to-tag node *\r\n                nodes.push({\r\n                    data: {\r\n                        id: tagTo,\r\n                        parent: areaTo\r\n                    }\r\n                });\r\n            }\r\n\r\n            //\r\n            // add cable node *\r\n            //\r\n            let cableID = tag + '\\n' + cableType + ' ';\r\n            nodes.push({\r\n                data: {\r\n                    id: cableID,\r\n                    parent: areaTo,\r\n                    type: 'cableTag'\r\n                }\r\n            });\r\n\r\n\r\n            //\r\n            // add x node *\r\n            //\r\n            let X = i + 'pointX' + i;\r\n            nodes.push({\r\n                data: {\r\n                    id: X,\r\n                    parent: areaTo,\r\n                    type: 'bendPoint'\r\n                }\r\n            });\r\n\r\n\r\n            // create edges\r\n            // fromtag --->  X ---> cableID ---> toTag\r\n\r\n            // fromtag --->  X\r\n            let edgeID01 = tagFrom + X + i;\r\n            edges.push({\r\n                data: {\r\n                    id: edgeID01,\r\n                    source: tagFrom,\r\n                    target: X,\r\n                    type: 'bendPoint'\r\n\r\n                }\r\n            });\r\n\r\n\r\n            // X ---> cableID\r\n            let edgeID02 = X + cableID + i;\r\n            edges.push({\r\n                data: {\r\n                    id: edgeID02,\r\n                    source: X,\r\n                    target: cableID,\r\n                    type: 'bendPoint'\r\n                }\r\n            });\r\n\r\n\r\n            // cableID ---> toTag\r\n            let edgeID03 = cableID + tagTo + i;\r\n            edges.push({\r\n                data: {\r\n                    id: edgeID03,\r\n                    source: cableID,\r\n                    target: tagTo,\r\n                    customType: 'line'\r\n                }\r\n            });\r\n\r\n\r\n        });\r\n\r\n        // set edges and nodes to cytoscape\r\n        this.cy.add({\r\n            nodes: nodes,\r\n            edges: edges\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    /********************************************\r\n     *  adds the style\r\n     * ******************************************/\r\n    public addStyle() {\r\n        this.cy.style()\r\n            .resetToDefault()\r\n            .selector('node')\r\n            .css({\r\n                'content': 'data(id)',\r\n                'text-valign': 'center',\r\n                'text-halign': 'center',\r\n                'shape': 'rectangle',\r\n                'background-color': 'white',\r\n                'border-width': '1',\r\n                'border-color': '#ccc',\r\n                'width': '150',\r\n                'height': '18',\r\n                'font-size': 11\r\n            })\r\n            .selector('node[type = \"bendPoint\"]')\r\n            .css({\r\n                'width': '1px',\r\n                'height': '1px',\r\n                'label': 'data(none)'\r\n            })\r\n\r\n            // .selector()\r\n            .selector('$node > node')\r\n            .css({\r\n                'padding-top': '10px',\r\n                'padding-left': '10px',\r\n                'margin-left': '40px',\r\n                'padding-bottom': '10px',\r\n                'padding-right': '10px',\r\n                'text-valign': 'top',\r\n                'text-halign': 'left',\r\n                'background-color': 'white'\r\n            })\r\n            .selector('edge')\r\n            .css({\r\n                'target-arrow-shape': 'triangle',\r\n                'curve-style': 'bezier'\r\n            })\r\n            .selector('edge')\r\n            .css({\r\n                'width': 1,\r\n                'line-color': '#ccc',\r\n                'text-wrap': 'wrap',\r\n                'font-size': 10\r\n            })\r\n            .selector('edge[type = \"bendPoint\" ]')\r\n            .css({\r\n                'width': 1,\r\n                'target-arrow-shape': 'none',\r\n                'opacity': 1,\r\n                'label': 'data(none)'\r\n            })\r\n            .selector('node[type = \"cableTag\" ]')\r\n            .css({\r\n                'width': 100,\r\n                'target-arrow-shape': 'none',\r\n                'opacity': 1,\r\n                'border-width': '0',\r\n                'background-color': 'white',\r\n                'text-wrap': 'wrap',\r\n                'font-size': 10,\r\n                'label': 'data(id)'\r\n            });\r\n    }\r\n\r\n\r\n    /********************************************\r\n     *  sets the layout\r\n     * ******************************************/\r\n    public setLayout() {\r\n        this.cy.layout(this.dagreLayout).run();\r\n    }\r\n\r\n\r\n}\r\n","export const dummydata = [\r\n  {\r\n    tag: \"R-82-7895_01\",\r\n    tagFrom: \"Dist_board\",\r\n    tagTo: \"JUNCTION_BOX_1\",\r\n    type: \"BFOU-2x4mm2\",\r\n    areaFrom: \"LV Room\",\r\n    areaTo: \"Hall\"\r\n  },\r\n  {\r\n    tag: \"R-82-7895_02\",\r\n    tagFrom: \"JUNCTION_BOX_1\",\r\n    tagTo: \"LIGHT_02\",\r\n    type: \"BFOU-2x2.5mm2\",\r\n    areaFrom: \"Hall\",\r\n    areaTo: \"Hall\"\r\n  },\r\n  {\r\n    tag: \"R-82-7895_04\",\r\n    tagFrom: \"JUNCTION_BOX_1\",\r\n    tagTo: \"LIGHT_04\",\r\n    type: \"BFOU-2x2.5mm2\",\r\n    areaFrom: \"Hall\",\r\n    areaTo: \"Office_1\"\r\n  },\r\n  {\r\n    tag: \"R-82-7895_07\",\r\n    tagFrom: \"JUNCTION_BOX_1\",\r\n    tagTo: \"LIGHT_07\",\r\n    type: \"BFOU-2x2.5mm2\",\r\n    areaFrom: \"Hall\",\r\n    areaTo: \"Office_2\"\r\n  },\r\n  {\r\n    tag: \"R-82-7895_12\",\r\n    tagFrom: \"JUNCTION_BOX_1\",\r\n    tagTo: \"LIGHT_12\",\r\n    type: \"BFOU-2x2.5mm2\",\r\n    areaFrom: \"Hall\",\r\n    areaTo: \"Office_3\"\r\n  },\r\n  {\r\n    tag: \"R-82-7895_03\",\r\n    tagFrom: \"LIGHT_02\",\r\n    tagTo: \"LIGHT_03\",\r\n    type: \"BFOU-2x2.5mm2\",\r\n    areaFrom: \"Hall\",\r\n    areaTo: \"Hall\"\r\n  },\r\n  {\r\n    tag: \"R-82-7895_05\",\r\n    tagFrom: \"LIGHT_04\",\r\n    tagTo: \"LIGHT_05\",\r\n    type: \"BFOU-2x2.5mm2\",\r\n    areaFrom: \"Office_1\",\r\n    areaTo: \"Office_1\"\r\n  },\r\n  {\r\n    tag: \"R-82-7895_06\",\r\n    tagFrom: \"LIGHT_05\",\r\n    tagTo: \"LIGHT_06\",\r\n    type: \"BFOU-2x2.5mm2\",\r\n    areaFrom: \"Office_1\",\r\n    areaTo: \"Office_1\"\r\n  },\r\n  {\r\n    tag: \"R-82-7895_08\",\r\n    tagFrom: \"LIGHT_07\",\r\n    tagTo: \"LIGHT_08\",\r\n    type: \"BFOU-2x2.5mm2\",\r\n    areaFrom: \"Office_2\",\r\n    areaTo: \"Office_2\"\r\n  },\r\n  {\r\n    tag: \"R-82-7895_09\",\r\n    tagFrom: \"LIGHT_08\",\r\n    tagTo: \"LIGHT_09\",\r\n    type: \"BFOU-2x2.5mm2\",\r\n    areaFrom: \"Office_2\",\r\n    areaTo: \"Office_2\"\r\n  },\r\n  {\r\n    tag: \"R-82-7895_10\",\r\n    tagFrom: \"LIGHT_08\",\r\n    tagTo: \"LIGHT_10\",\r\n    type: \"BFOU-2x2.5mm2\",\r\n    areaFrom: \"Office_2\",\r\n    areaTo: \"Office_2\"\r\n  },\r\n  {\r\n    tag: \"R-82-7895_11\",\r\n    tagFrom: \"LIGHT_10\",\r\n    tagTo: \"LIGHT_11\",\r\n    type: \"BFOU-2x2.5mm2\",\r\n    areaFrom: \"Office_2\",\r\n    areaTo: \"Office_2\"\r\n  },\r\n  {\r\n    tag: \"R-82-7895_13\",\r\n    tagFrom: \"LIGHT_12\",\r\n    tagTo: \"LIGHT_13\",\r\n    type: \"BFOU-2x2.5mm2\",\r\n    areaFrom: \"Office_3\",\r\n    areaTo: \"Office_3\"\r\n  }\r\n];\r\n"]}