{"version":3,"sources":["/src/main.ts","/src/app.ts","/src/cytoscapeHelper.ts","packages/fusebox-hot-reload@0.0.0","packages/fusebox-websocket@0.0.0","packages/events@0.0.0","packages/fuse-box-css@0.0.1","/node_modules/mframejs/src/mframejs/index.ts","/node_modules/mframejs/src/mframejs/utils/index.ts","/node_modules/mframejs/src/mframejs/utils/domEventHandler.ts","/node_modules/mframejs/src/mframejs/utils/eventAggregator.ts","/node_modules/mframejs/src/mframejs/utils/queue.ts","/node_modules/mframejs/src/mframejs/utils/router.ts","/node_modules/mframejs/src/mframejs/utils/configure.ts","/node_modules/mframejs/src/mframejs/container/index.ts","/node_modules/mframejs/src/mframejs/container/containerClasses.ts","/node_modules/mframejs/src/mframejs/container/containerAttributes.ts","/node_modules/mframejs/src/mframejs/container/containerElements.ts","/node_modules/mframejs/src/mframejs/container/containerValueConverters.ts","/node_modules/mframejs/src/mframejs/container/containerBehavior.ts","/node_modules/mframejs/src/mframejs/utils/mf.ts","/node_modules/mframejs/src/mframejs/view/index.ts","/node_modules/mframejs/src/mframejs/view/attributeController.ts","/node_modules/mframejs/src/mframejs/view/viewController.ts","/node_modules/mframejs/src/mframejs/binding/index.ts","/node_modules/mframejs/src/mframejs/binding/bindingEngine.ts","/node_modules/mframejs/src/mframejs/binding/traverseAst.ts","/node_modules/mframejs/src/mframejs/binding/tokenize.ts","/node_modules/mframejs/src/mframejs/binding/tokenizer.ts","/node_modules/mframejs/src/mframejs/binding/charcode.ts","/node_modules/mframejs/src/mframejs/binding/generateAst.ts","/node_modules/mframejs/src/mframejs/binding/ast.ts","/node_modules/mframejs/src/mframejs/binding/symbolTemplate.ts","/node_modules/mframejs/src/mframejs/binding/symbolContainer.ts","/node_modules/mframejs/src/mframejs/binding/addSymbols.ts","/node_modules/mframejs/src/mframejs/binding/createBindingExpression.ts","/node_modules/mframejs/src/mframejs/binding/classPropertyObserverCreator.ts","/node_modules/mframejs/src/mframejs/binding/classPropertyObserver.ts","/node_modules/mframejs/src/mframejs/interface/index.ts","/node_modules/mframejs/src/mframejs/interface/i_Element.ts","/node_modules/mframejs/src/mframejs/interface/i_Attribute.ts","/node_modules/mframejs/src/mframejs/interface/i_ControllerArray.ts","/node_modules/mframejs/src/mframejs/interface/i_ControllerObject.ts","/node_modules/mframejs/src/mframejs/interface/i_RepeatCache.ts","/node_modules/mframejs/src/mframejs/interface/contants.ts","/node_modules/mframejs/src/mframejs/interface/i_Listener.ts","/node_modules/mframejs/src/mframejs/interface/i_Tokens.ts","/node_modules/mframejs/src/mframejs/interface/i_Node.ts","/node_modules/mframejs/src/mframejs/binding/setValue.ts","/node_modules/mframejs/src/mframejs/binding/subscribeClassProperty.ts","/node_modules/mframejs/src/mframejs/binding/propertyObserverHandler.ts","/node_modules/mframejs/src/mframejs/binding/unSubscribeClassProperty.ts","/node_modules/mframejs/src/mframejs/binding/evaluateExpression.ts","/node_modules/mframejs/src/mframejs/binding/subscribeClassArray.ts","/node_modules/mframejs/src/mframejs/binding/arrayObserverHandler.ts","/node_modules/mframejs/src/mframejs/binding/classArrayObserverCreator.ts","/node_modules/mframejs/src/mframejs/binding/classArrayObserver.ts","/node_modules/mframejs/src/mframejs/binding/unSubscribeClassArray.ts","/node_modules/mframejs/src/mframejs/binding/unSubscribeClassMetaBinding.ts","/node_modules/mframejs/src/mframejs/binding/subscribeClassMetaBinding.ts","/node_modules/mframejs/src/mframejs/view/elementController.ts","/node_modules/mframejs/src/mframejs/view/viewParse.ts","/node_modules/mframejs/src/mframejs/view/interpolateController.ts","/node_modules/mframejs/src/mframejs/decorator/index.ts","/node_modules/mframejs/src/mframejs/decorator/inject.ts","/node_modules/mframejs/src/mframejs/decorator/transient.ts","/node_modules/mframejs/src/mframejs/decorator/customAttribute.ts","/node_modules/mframejs/src/mframejs/decorator/customElement.ts","/node_modules/mframejs/src/mframejs/decorator/bindable.ts","/node_modules/mframejs/src/mframejs/decorator/observable.ts","/node_modules/mframejs/src/mframejs/decorator/computedFrom.ts","/node_modules/mframejs/src/mframejs/decorator/valueConverter.ts","/node_modules/mframejs/src/mframejs/decorator/behavior.ts","/node_modules/mframejs/src/mframejs/behavior/index.ts","/node_modules/mframejs/src/mframejs/behavior/signal.ts","/node_modules/mframejs/src/mframejs/behavior/throttle.ts","/node_modules/mframejs/src/mframejs/behavior/debounce.ts","/node_modules/mframejs/src/mframejs/behavior/trigger.ts","/node_modules/mframejs/src/mframejs/element/index.ts","/node_modules/mframejs/src/mframejs/element/mf-router.ts","/node_modules/mframejs/src/mframejs/attribute/index.ts","/node_modules/mframejs/src/mframejs/attribute/ifAttribute.ts","/node_modules/mframejs/src/mframejs/attribute/valueAttribute.ts","/node_modules/mframejs/src/mframejs/attribute/delgateEventsAttribute.ts","/node_modules/mframejs/src/mframejs/attribute/triggerEventsAttribute.ts","/node_modules/mframejs/src/mframejs/attribute/repeatAttribute.ts","/node_modules/mframejs/src/mframejs/attribute/repeatAttributeSubscriberHelpers.ts","/node_modules/mframejs/src/mframejs/attribute/miscAttribute.ts","/node_modules/mframejs/src/mframejs/attribute/cssAttribute.ts","/node_modules/mframejs/src/mframejs/attribute/modelAttribute.ts","/node_modules/mframejs/src/mframejs/utils/cache.ts","/node_modules/mframejs/src/mframejs/utils/logger.ts"],"names":[],"mappings":"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AAC;YACD,OAAO,EAAE,GAAG;YACZ,oBAAoB,EAAE,MAAM;YAC5B,SAAS,EAAE,CAAC;YACZ,kBAAkB,EAAE,OAAO;YAC3B,WAAW,EAAE,MAAM;YACnB,WAAW,EAAE,EAAE;YACf,OAAO,EAAE,UAAU;SACtB,CAAC,CAAC;IACX,CAAC;IAMM,mCAAS,GAAhB;QACI,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC;IAGL,sBAAC;AAAD,CAjTA,AAiTC,IAAA;AAjTY,0CAAerJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"","sourcesContent":["// import our styles\r\nimport './index.css';\r\n\r\n// import mini framework and its configure function\r\nimport { configure, MF } from 'mframejs';\r\n\r\n\r\n// get our app class, every app needs to start somewhere\r\nimport { App } from './app';\r\n\r\n\r\n// wait for DOM to be loaded\r\n\r\n// configure it by setting where and our main class\r\nconfigure(App).then((mf: MF) => {\r\n\r\n    // register our elements/attributes\r\n    // mf.register(component, attribute);\r\n\r\n    // start it\r\n    mf.start(document.body);\r\n});\r\n\r\n\r\n\r\n","import { IElement, inject } from 'mframejs';\r\nimport { CytoscapeHelper } from './cytoscapeHelper';\r\n\r\n\r\n\r\n@inject(CytoscapeHelper)\r\nexport class App implements IElement {\r\n    // references to this $element and parent\r\n    public $element: IElement;\r\n    public $parent: IElement;\r\n    public title = 'My Empty Project';\r\n    public textArea = '';\r\n    public showTools = true;\r\n    public toToBottom = true;\r\n    public cytoscape: any;\r\n\r\n    // for testing purposes so it generates something without data\r\n    public testCables: any = [\r\n        { tag: 'cable1', tagFrom: 'light_01', tagTo: 'light_02', type: 'BFOU-2x4mm2', areaFrom: 'LV Room', areaTo: 'Office_1' },\r\n        { tag: 'cable2', tagFrom: 'light_02', tagTo: 'light_03', type: 'BFOU-2x2.5mm2', areaFrom: 'Office_1', areaTo: 'Office_1' },\r\n        { tag: 'cable3', tagFrom: 'light_03', tagTo: 'light_04', type: 'BFOU-2x2.5mm2', areaFrom: 'Office_1', areaTo: 'Office_2' },\r\n        { tag: 'cable4', tagFrom: 'light_04', tagTo: 'light_05', type: 'BFOU-2x2.5mm2', areaFrom: 'Office_2', areaTo: 'Office_2' },\r\n        { tag: 'cable5', tagFrom: 'light_05', tagTo: 'light_06', type: 'BFOU-2x2.5mm2', areaFrom: 'Office_2', areaTo: 'Office_3' },\r\n        { tag: 'cable6', tagFrom: 'light_06', tagTo: 'light_07', type: 'BFOU-2x2.5mm2', areaFrom: 'Office_3', areaTo: 'Office_3' },\r\n        { tag: 'cable7', tagFrom: 'light_07', tagTo: 'light_08', type: 'BFOU-2x2.5mm2', areaFrom: 'Office_3', areaTo: 'Office_3' },\r\n        { tag: 'cable9', tagFrom: 'light_07', tagTo: 'light_010', type: 'BFOU-2x2.5mm2', areaFrom: 'Office_3', areaTo: 'Office_4' },\r\n        { tag: 'cable8', tagFrom: 'light_08', tagTo: 'light_09', type: 'BFOU-2x2.5mm2', areaFrom: 'Office_4', areaTo: 'Office_4' }\r\n    ];\r\n\r\n\r\n    constructor(cytoscape: any) {\r\n        this.cytoscape = cytoscape;\r\n    }\r\n\r\n\r\n    // mandatory\r\n    public loadTemplate() {\r\n        // you could just return string here like this:\r\n        // '<template><p>${title}</p></template>'\r\n        return require('./app.html');\r\n    }\r\n\r\n\r\n    public showConfig() {\r\n        this.showTools = true;\r\n    }\r\n\r\n\r\n    public setImage() {\r\n        this.cytoscape.setImage();\r\n    }\r\n\r\n    public generateImage() {\r\n        let jpg64 = this.cytoscape.cy.png({ full: true, scale: 3 });\r\n        let x: any = document.getElementById('image');\r\n        x.src = jpg64;\r\n        window.open(x.src, '_blank');\r\n        x.src = '';\r\n    }\r\n\r\n\r\n    public generate() {\r\n\r\n\r\n        let cables: any = [];\r\n        if (this.textArea !== '') {\r\n\r\n            let lines = this.textArea.split('\\n');\r\n            lines.forEach((line) => {\r\n                let columns = line.split('\\t');\r\n                if (columns.length === 1) {\r\n                    columns = line.split(';'); // maybe we are using semi column\r\n                    if (columns.length === 1) {\r\n                        columns = line.split('    '); // for broken tab\r\n                    }\r\n                }\r\n                switch (columns.length) {\r\n                    case 3:\r\n                        cables.push({ tag: columns[0], tagFrom: columns[1], tagTo: columns[2], type: 'NA', areaFrom: 'NA', areaTo: 'NA' });\r\n                        break;\r\n                    case 4:\r\n                        cables.push({ tag: columns[0], tagFrom: columns[1], tagTo: columns[2], type: columns[3], areaFrom: 'NA', areaTo: 'NA' });\r\n                        break;\r\n                    case 5:\r\n                        cables.push({ tag: columns[0], tagFrom: columns[1], tagTo: columns[2], type: columns[3], areaFrom: columns[4], areaTo: 'NA' });\r\n                        break;\r\n                    case 6:\r\n                        cables.push({ tag: columns[0], tagFrom: columns[1], tagTo: columns[2], type: columns[3], areaFrom: columns[4], areaTo: columns[5] });\r\n                        break;\r\n                    default:\r\n                }\r\n            });\r\n        }\r\n\r\n        this.showTools = false;\r\n        let cablesOption = cables.length ? cables : this.testCables;\r\n        this.cytoscape.generate(cablesOption, this.toToBottom);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","\r\n\r\nexport class CytoscapeHelper {\r\n\r\n    public cy: any;\r\n\r\n\r\n    /********************************************\r\n     *  1 extra layout not in cytoscape by default\r\n     * ******************************************/\r\n    public dagreLayout: any = {\r\n        name: 'dagre',\r\n        // dagre algo options, uses default value on undefined\r\n        nodeSep: 50, // undefined, // the separation between adjacent nodes in the same rank\r\n        edgeSep: 10, // undefined, // the separation between adjacent edges in the same rank\r\n        rankSep: 50, // undefined, // the separation between adjacent nodes in the same rank\r\n        rankDir: 'TB', // undefined, // 'TB' for top to bottom flow, 'LR' for left to right\r\n        minLen: function (/*edge*/) {\r\n            return 1;\r\n        }, // number of ranks to keep between the source and target of the edge\r\n        edgeWeight: function (/*edge*/) {\r\n            return 1;\r\n        }, // higher weight edges are generally made shorter and straighter than lower weight edges\r\n\r\n        // general layout options\r\n        fit: true, // whether to fit to viewport\r\n        padding: 20, // fit padding\r\n        animate: false, // whether to transition the node positions\r\n        animationDuration: 500, // duration of animation in ms if enabled\r\n        animationEasing: undefined, // easing of animation if enabled\r\n        boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\r\n        ready: function () {\r\n            // na\r\n        }, // on layoutready\r\n        stop: function () {\r\n            // na\r\n        } // on layoutstop\r\n    };\r\n\r\n\r\n    /********************************************\r\n     *  1 extra layout not in cytoscape by default\r\n     * ******************************************/\r\n    public cosebilkentLayout: any = {\r\n        name: 'cose-bilkent',\r\n        // Called on `layoutready`\r\n        ready: function () {\r\n            // na\r\n        },\r\n        // Called on `layoutstop`\r\n        stop: function () {\r\n            // na\r\n        },\r\n        // Whether to fit the network view after when done\r\n        fit: true,\r\n        // Padding on fit\r\n        padding: 10,\r\n        // Whether to enable incremental mode\r\n        randomize: true,\r\n        // Node repulsion (non overlapping) multiplier\r\n        nodeRepulsion: 4500,\r\n        // Ideal edge (non nested) length\r\n        idealEdgeLength: 200,\r\n        // Divisor to compute edge forces\r\n        edgeElasticity: 0.45, // 0.45,\r\n        // Nesting factor (multiplier) to compute ideal edge length for nested edges\r\n        nestingFactor: 0.1,\r\n        // Gravity force (constant)\r\n        gravity: 0.9,\r\n        // Maximum number of iterations to perform\r\n        numIter: 2500,\r\n        // For enabling tiling\r\n        tile: true,\r\n        // Type of layout animation. The option set is {'during', 'end', false}\r\n        animate: 'end',\r\n        // Represents the amount of the vertical space to put between the zero degree members during the tiling operation(can also be a function)\r\n        tilingPaddingVertical: 100,\r\n        // Represents the amount of the horizontal space to put between the zero degree members during the tiling operation(can also be a function)\r\n        tilingPaddingHorizontal: 100,\r\n        // Gravity range (constant) for compounds\r\n        gravityRangeCompound: 1.5,\r\n        // Gravity force (constant) for compounds\r\n        gravityCompound: 1.0,\r\n        // Gravity range (constant)\r\n        gravityRange: 3.8\r\n    };\r\n\r\n\r\n\r\n\r\n    /********************************************\r\n     *  call to generate\r\n     * ******************************************/\r\n    public generate(cables: any, toToBottom: any) {\r\n\r\n        this.dagreLayout.rankDir = toToBottom ? 'TB' : 'LR';\r\n\r\n        this.createCY();\r\n        this.addStyle();\r\n        this.createData(cables);\r\n        this.setLayout();\r\n    }\r\n\r\n\r\n    /********************************************\r\n     *  creates the cy element\r\n     * ******************************************/\r\n    public createCY() {\r\n        debugger;\r\n        this.cy = cytoscape({\r\n            container: document.getElementById('cy'),\r\n            wheelSensitivity: 0.1\r\n        });\r\n    }\r\n\r\n\r\n    /********************************************\r\n     *  creates the data nodes/edges\r\n     * ******************************************/\r\n    public createData(cables: any[]) {\r\n\r\n        // this is not very good atm, but works..\r\n\r\n        let addedEq = new Set();\r\n        let nodes: any = [];\r\n        let edges: any = [];\r\n        // let tags: any = [];\r\n        let parent = 'NA';\r\n\r\n        // loop the cable tags\r\n        cables.forEach((cable: any, i: number) => {\r\n\r\n            // check if equipment in tag from is added as node\r\n            if (!addedEq.has(cable.tagFrom)) {\r\n                addedEq.add(cable.tagFrom);\r\n\r\n                // find out if we have parent \"room number\"\r\n                parent = cable.areaFrom || 'NA';\r\n\r\n                // if we havent added that from before then lets add it\r\n                if (!addedEq.has(parent)) {\r\n                    nodes.push({\r\n                        data: {\r\n                            id: parent\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // create main node with parent\r\n                nodes.push({\r\n                    data: {\r\n                        id: cable.tagFrom,\r\n                        parent: parent\r\n                    }\r\n                });\r\n            }\r\n\r\n            // check if equipment is added as node\r\n            if (!addedEq.has(cable.tagTo)) {\r\n                addedEq.add(cable.tagTo);\r\n\r\n                // find out if we have parent \"room number\"\r\n                parent = parent = cable.areaTo || 'NA';\r\n\r\n                // if we havent added that from before then lets add it\r\n                if (!addedEq.has(parent)) {\r\n                    nodes.push({\r\n                        data: {\r\n                            id: parent\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // create main node with parent\r\n                nodes.push({\r\n                    data: {\r\n                        id: cable.tagTo,\r\n                        parent: parent\r\n                    }\r\n                });\r\n            }\r\n\r\n            parent = parent = cable.areaTo || 'NA';\r\n            nodes.push({\r\n                data: {\r\n                    id: cable.tag + '\\n' + cable.type + ' ',\r\n                    parent: parent,\r\n                    type: 'test'\r\n                }\r\n            });\r\n\r\n\r\n            // create edge\r\n            edges.push({\r\n                data: {\r\n                    id: cable.tag + 'x' + cable.tagTo + i,\r\n                    source: cable.tagFrom,\r\n                    target: cable.tag + '\\n' + cable.type + ' ',\r\n                    type: 'bendPoint'\r\n                }\r\n            });\r\n\r\n            edges.push({\r\n                data: {\r\n                    id: cable.tag + '\\n' + cable.type,\r\n                    source: cable.tag + '\\n' + cable.type + ' ',\r\n                    target: cable.tagTo\r\n                }\r\n            });\r\n\r\n\r\n        });\r\n\r\n        // set edges and nodes to cytoscape\r\n        this.cy.add({\r\n            nodes: nodes,\r\n            edges: edges\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    /********************************************\r\n     *  adds the style\r\n     * ******************************************/\r\n    public addStyle() {\r\n        this.cy.style()\r\n            .resetToDefault()\r\n            .selector('node')\r\n            .css({\r\n                'content': 'data(id)',\r\n                'text-valign': 'center',\r\n                'text-halign': 'center',\r\n                'shape': 'rectangle',\r\n                'width': '150',\r\n                'height': '18',\r\n                'font-size': 11\r\n            })\r\n            .selector('node[type = \"bendPoint\"]')\r\n            .css({\r\n                'width': '8.00001px',\r\n                'height': '8.00001px',\r\n                'label': 'data(none)'\r\n            })\r\n\r\n            // .selector()\r\n            .selector('$node > node')\r\n            .css({\r\n                'padding-top': '10px',\r\n                'padding-left': '10px',\r\n                'margin-left': '40px',\r\n                'padding-bottom': '10px',\r\n                'padding-right': '10px',\r\n                'text-valign': 'top',\r\n                'text-halign': 'left',\r\n                'background-color': 'white'\r\n            })\r\n            .selector('edge')\r\n            .css({\r\n                'target-arrow-shape': 'triangle',\r\n                'curve-style': 'bezier'\r\n            })\r\n            .selector('edge')\r\n            .css({\r\n                // 'label': 'data(id)',\r\n                'width': 1,\r\n                'line-color': '#ccc',\r\n                // 'edge-text-rotation': 'autorotate',\r\n                'text-wrap': 'wrap',\r\n                'font-size': 10\r\n            })\r\n            /*.selector('selected')\r\n             .css({\r\n             'background-color': 'black',\r\n             'line-color': 'black',\r\n             'target-arrow-color': 'black',\r\n             'source-arrow-color': 'black'\r\n             })*/\r\n            .selector('edge[type = \"bendPoint\" ]')\r\n            .css({\r\n                'width': 1,\r\n                'target-arrow-shape': 'none',\r\n                'opacity': 1,\r\n                'label': 'data(none)'\r\n            })\r\n            .selector('node[type = \"test\" ]')\r\n            .css({\r\n                'width': 100,\r\n                'target-arrow-shape': 'none',\r\n                'opacity': 1,\r\n                'background-color': 'white',\r\n                'text-wrap': 'wrap',\r\n                'font-size': 10,\r\n                'label': 'data(id)'\r\n            });\r\n    }\r\n\r\n\r\n    /********************************************\r\n     *  sets the layout\r\n     * ******************************************/\r\n    public setLayout() {\r\n        this.cy.layout(this.dagreLayout);\r\n    }\r\n\r\n\r\n}\r\n",null,null,null,null,"\r\n\r\nexport {\r\n    MF,\r\n    configure,\r\n    Router,\r\n    EventAggregator,\r\n    Logger\r\n} from './utils';\r\n\r\n\r\n\r\nexport {\r\n    ContainerClasses,\r\n    ContainerAttributes,\r\n    ContainerElements,\r\n    ContainerValueConverters\r\n} from './container';\r\n\r\n\r\n\r\nexport {\r\n    inject,\r\n    transient,\r\n    customAttribute,\r\n    customElement,\r\n    bindable,\r\n    computedFrom,\r\n    valueConverter,\r\n    behavior,\r\n    observable\r\n} from './decorator';\r\n\r\n\r\n\r\nexport {\r\n    BindingEngine\r\n} from './binding';\r\n\r\n\r\n\r\nexport {\r\n    IElement,\r\n    IAttribute,\r\n    IControllerArray,\r\n    IControllerObject,\r\n    IRepeatCache,\r\n    CONSTANTS\r\n} from './interface';\r\n","export { DomEventHandler } from './domEventHandler';\r\nexport { EventAggregator } from './eventAggregator';\r\nexport { Queue } from './queue';\r\nexport { Router } from './router';\r\nexport { configure } from './configure';\r\nexport { MF } from './mf';\r\nexport { Cache } from './cache';\r\nexport { Logger } from './logger';\r\n","\r\n/**\r\n* will be event handler, just need to rethink and redo it all\r\n* main pointis to delegate the events, so we have 1 event listener for many elements and let event bubble\r\n*\r\n*/\r\nexport class DomEventHandler {\r\n    /*\r\n        private eventHandlerBinded: any;\r\n        private count = 0;\r\n        private id: any[] = [];\r\n        private events: any[] = [];\r\n        private target: any[] = [];\r\n        private call: any[] = [];\r\n\r\n        constructor() {\r\n            this.eventHandlerBinded = this.eventHandler.bind(this);\r\n        }\r\n\r\n\r\n        public listenFor(event: string, target: any, call: any): number {\r\n            this.count++;\r\n\r\n            if (this.events.indexOf(event) === -1) {\r\n                this.addEventListener(event);\r\n            }\r\n\r\n            this.id.push(this.count);\r\n            this.events.push(event);\r\n            this.target.push(target);\r\n            this.call.push(call);\r\n\r\n            return this.count;\r\n\r\n        }\r\n\r\n\r\n\r\n        public removeListener(id: number): void {\r\n            this.id.splice(id, 1);\r\n            let event = this.events.splice(id, 1);\r\n            this.target.splice(id, 1);\r\n            this.call.splice(id, 1);\r\n            if (this.events.indexOf(event) === -1) {\r\n                this.removeEventListener(event);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        private addEventListener(event: any): void {\r\n            (document.body as any).addEventListener(event, (this.eventHandlerBinded as EventListenerOrEventListenerObject), false);\r\n        }\r\n\r\n\r\n\r\n        private removeEventListener(event: any): void {\r\n            (document.body as any).removeEventListener(event, (this.eventHandlerBinded as EventListenerOrEventListenerObject), false);\r\n        }\r\n\r\n\r\n\r\n        private eventHandler(event: any): void {\r\n\r\n            let eventID = this.events.indexOf(event.type);\r\n            let targetID = this.target.indexOf(event.target);\r\n\r\n            if (eventID !== -1 && targetID !== -1) {\r\n                if (eventID === targetID) {\r\n                    this.call[targetID](event);\r\n                } else {\r\n                    this.target.forEach((target, i) => {\r\n                        if (target === event.target && this.events[i] === event.type) {\r\n                            this.call[targetID](event);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n         */\r\n\r\n}\r\n\r\n","\r\n\r\n/**\r\n * simple event aggregator for sending messages between components/attributes etc\r\n *\r\n */\r\nexport class EventAggregator {\r\n\r\n    private channels: any;\r\n\r\n    constructor() {\r\n        this.channels = {};\r\n    }\r\n\r\n\r\n    // todo, do we want a async option ?\r\n    // todo, do we want to upper/lower case all channels? less chance for typos..\r\n\r\n    /**\r\n     * publish to channel\r\n     *\r\n     */\r\n    public publish(channel: string, ...args: any[]): void {\r\n        if (Array.isArray(this.channels[channel])) {\r\n            for (let i = 0, len = this.channels[channel].length; i < len; i++) {\r\n                this.channels[channel][i].apply(this, args);\r\n            }\r\n        } else {\r\n            // if no one is listening then do we really need to do anything ?\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * unsubscribes to channel\r\n     *\r\n     */\r\n    public unsubscribe(channel: string, func: Function): void {\r\n        if (Array.isArray(this.channels[channel])) {\r\n            for (let i = 0, len = this.channels[channel].length; i < len; i++) {\r\n                if (this.channels[channel][i] === func) {\r\n                    this.channels[channel].splice(i, 1);\r\n                }\r\n            }\r\n        } else {\r\n            // channel does not exist, great!\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * subscribes to channel\r\n     *\r\n     */\r\n    public subscribe(channel: string, func: Function): void {\r\n        if (!Array.isArray(this.channels[channel])) {\r\n            this.channels[channel] = [];\r\n        }\r\n        this.channels[channel].push(func);\r\n    }\r\n}\r\n","\r\n\r\n/**\r\n * queue used internally so some parts get time to breath\r\n *\r\n */\r\nexport class Queue {\r\n    public count = 0;\r\n    public tasks: any[] = [];\r\n    public topQueue: any[] = [];\r\n    public started = false;\r\n    private index = -1;\r\n\r\n\r\n\r\n    /**\r\n     * returns true/false depending if it s finished\r\n     *\r\n     */\r\n    public finsished(): boolean {\r\n        return this.count === 0;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * add task\r\n     * todo: create interface\r\n     *\r\n     */\r\n    public add(task: any): void {\r\n        this.count++;\r\n        this.tasks.push(task);\r\n        if (!this.started) {\r\n            this.started = true;\r\n            setTimeout(() => {\r\n                // requestAnimationFrame(() => {\r\n                this.flush();\r\n                //  });\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * flushes the queue\r\n     *\r\n     */\r\n    private flush(): void {\r\n        if (this.index < 0) {\r\n            if (this.tasks.length < 600) {\r\n                this.topQueue = this.tasks.slice(0, this.tasks.length);\r\n                this.tasks = [];\r\n            } else {\r\n                this.topQueue = this.tasks.slice(0, 600);\r\n                const newAr = this.tasks.slice(600, this.tasks.length);\r\n                this.tasks = newAr;\r\n            }\r\n            this.index = this.topQueue.length - 1;\r\n            // this.topQueue.reverse();\r\n        }\r\n        if (this.topQueue.length === 0) {\r\n            this.started = false;\r\n        }\r\n\r\n        this.runTasks();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * reflushes the queue (usually if there is more)\r\n     *\r\n     */\r\n    private reFlush(): void {\r\n        setTimeout(() => {\r\n            //  requestAnimationFrame(() => {\r\n            this.flush();\r\n            // });\r\n        }, 0);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * run the tasks\r\n     *\r\n     */\r\n    private runTasks(): void {\r\n        const curTask = this.topQueue[this.index];\r\n        this.index--;\r\n        let done: Function;\r\n        done = () => {\r\n            const nextTask = this.topQueue[this.index];\r\n            this.index--;\r\n            if (nextTask) {\r\n                nextTask.call(done);\r\n                this.count--;\r\n            } else {\r\n                if (this.index < 0) {\r\n                    this.reFlush();\r\n                } else {\r\n                    this.started = false;\r\n                }\r\n            }\r\n        };\r\n        if (curTask) {\r\n            curTask.call(done);\r\n        }\r\n\r\n        this.count--;\r\n    }\r\n\r\n}\r\n\r\n","// this is very simple atm\r\n// need authStep, child router, on route not found fail back\r\n\r\n\r\n\r\nexport class Router {\r\n\r\n    public config: any;\r\n    public routes: any[];\r\n    public hash: any;\r\n    public mainRouter: any;\r\n    public curRoute = 0;\r\n    public started = true;\r\n    public isNavigating = true;\r\n    public title: string;\r\n    public routersElements: any[] = [];\r\n\r\n    constructor() {\r\n        this.started = false;\r\n        this.hash = window.location.hash;\r\n        this.config = {\r\n            root: '#/',\r\n            title: null,\r\n            map: (routes: any[]) => {\r\n                this.routes = routes;\r\n            },\r\n            loader: null\r\n        };\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * triggers when hash changes\r\n     *\r\n     */\r\n    public hashChange() {\r\n        this.isNavigating = true;\r\n        setTimeout(() => {\r\n\r\n            this.hash = window.location.hash.slice(1).split('/');\r\n\r\n            if (window.location.hash !== '#/' && window.location.hash !== '') {\r\n                const hash = window.location.hash.slice(1).split('/');\r\n                let success = false;\r\n\r\n                this.routes.forEach((route, i) => {\r\n                    if (hash[1] === route.route) {\r\n                        this.curRoute = i;\r\n                        success = true;\r\n                    }\r\n                });\r\n\r\n                if (this.mainRouter && success) {\r\n                    this.mainRouter.update();\r\n                }\r\n\r\n            }\r\n            if (window.location.hash === '') {\r\n                this.curRoute = 0;\r\n                this.mainRouter.update();\r\n            }\r\n\r\n        }, 60);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * register router element (need fro child routers)\r\n     *\r\n     */\r\n    public registerElement(el: any) {\r\n        if (!this.mainRouter) {\r\n            this.mainRouter = el;\r\n        } else {\r\n            this.routersElements.push(el);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * unregister router element (need fro child routers)\r\n     *\r\n     */\r\n    public unregisterElement(el: any) {\r\n        if (this.mainRouter === el) {\r\n            this.mainRouter = null;\r\n        } else {\r\n            if (this.routersElements.indexOf(el) !== -1) {\r\n                this.routersElements.splice(this.routersElements.indexOf(el), 1);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * called when it starts\r\n     *\r\n     */\r\n    public addConfig(config: any) {\r\n        if (!this.started) {\r\n            this.config = config;\r\n            this.routes = config.routes;\r\n            this.init();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * called when it starts\r\n     *\r\n     */\r\n    public init() {\r\n        this.started = true;\r\n        this.hash = this.config.root;\r\n        this.title = this.config.title;\r\n        window.addEventListener('hashchange', this.hashChange.bind(this));\r\n        this.routes.forEach((route) => {\r\n            // todo: need to have option for push state\r\n            route.href = '#/' + route.route;\r\n        });\r\n\r\n        if (window.location.hash !== '#/' && window.location.hash !== '' && this.hash !== window.location.hash) {\r\n            this.hash = window.location.hash.slice(1).split('/');\r\n            let success = false;\r\n\r\n            this.routes.forEach((route, i) => {\r\n                if (this.hash[1] === route.route) {\r\n                    this.curRoute = i;\r\n                    success = true;\r\n                }\r\n            });\r\n\r\n            if (this.mainRouter && success) {\r\n                this.mainRouter.update();\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * returns current module path from router config\r\n     *\r\n     */\r\n    public getCurrentModule(): string {\r\n        return this.routes[this.curRoute].modulePath;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * returns current module class(name) from router config\r\n     *\r\n     */\r\n    public getCurrentClass(): string {\r\n        return this.routes[this.curRoute].moduleClass;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * returns the content of router config load function (promise)\r\n     *\r\n     */\r\n    public async loadCurrentModule(): Promise<string> {\r\n        // this need to be async..\r\n        return await this.routes[this.curRoute].load();\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { ContainerClasses } from '../container/index';\r\nimport { MF } from './mf';\r\nimport { IElement } from '../interface/index';\r\n\r\n\r\n\r\n/**\r\n * configure function, used to start the framework\r\n * You pass in node you want it to attach to and app instance\r\n *\r\n */\r\nexport async function configure(app: any): Promise<any> {\r\n\r\n    // register our framework\r\n    const miniFramework: MF = ContainerClasses.get(MF);\r\n\r\n    // register instance of the main APP instance\r\n    const rootApp: IElement = ContainerClasses.get(app);\r\n\r\n    if (document.body === null) {\r\n        return new Promise((resolve: any) => {\r\n            document.addEventListener('DOMContentLoaded', function () {\r\n                // set root and return framework\r\n                resolve((miniFramework as MF).setRootApp(rootApp));\r\n            });\r\n        });\r\n    } else {\r\n        // set root and return framework\r\n        return await (miniFramework as MF).setRootApp(rootApp);\r\n    }\r\n\r\n\r\n}\r\n","export { ContainerClasses } from './containerClasses';\r\nexport { ContainerAttributes } from './containerAttributes';\r\nexport { ContainerElements } from './containerElements';\r\nexport { ContainerValueConverters } from './containerValueConverters';\r\nexport { ContainerBehavior } from './containerBehavior';\r\n","\r\n// dependencies for a class\r\nconst dep = new Map();\r\n\r\n// sigelton classes\r\nconst singelton = new Map();\r\n\r\n// transient classes\r\nconst transient = new Map();\r\n\r\n\r\n/**\r\n * keeps track of our classes and dependencies\r\n *\r\n */\r\nexport class ContainerClasses {\r\n\r\n\r\n\r\n    /**\r\n     * returns a instance of a class, pass in the class type/prototype to get it\r\n     *\r\n     */\r\n    public static get(_class: any): any {\r\n\r\n        const instance = this.getInstance(_class);\r\n\r\n        return instance;\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * returns dependencies only (I dont use this atm)\r\n     *\r\n     */\r\n /*     public static getDepOnly<T>(_class: T): T {\r\n\r\n        return dep.get(_class);\r\n\r\n    }\r\n */\r\n\r\n\r\n    /**\r\n     * get instance of class and create if it is not created before\r\n     *\r\n     */\r\n    private static getInstance<T>(_class: T): T {\r\n\r\n        if (transient.has(_class)) {\r\n            return this.create(_class);\r\n        } else {\r\n\r\n            if (!singelton.get(_class)) {\r\n                singelton.set(_class, this.create(_class));\r\n            }\r\n\r\n            return singelton.get(_class);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * ...todo\r\n     *\r\n     */\r\n    private static create(_class: any): any {\r\n\r\n        let deps = dep.get(_class) || [];\r\n        deps = deps.map((classX: any) => {\r\n            try {\r\n                return this.get(classX);\r\n            } catch (e) {\r\n                return classX;\r\n            }\r\n        });\r\n        // @ts-ignore: Unreachable code error\r\n\r\n        return new _class(...deps);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * set dependencies for a class\r\n     *\r\n     */\r\n    public static setDep(_class: any, deps: any) {\r\n        dep.set(_class, deps);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * registers a class as transient\r\n     *\r\n     */\r\n    public static regTransient(_class: any) {\r\n        if (!transient.has(_class)) {\r\n            transient.set(_class, null);\r\n        }\r\n    }\r\n}\r\n","\r\n// holds the attibutes classes\r\nconst attribute = new Map();\r\n\r\n\r\n/**\r\n * keeps track of the attributes, so I know when parsing the html\r\n *\r\n */\r\nexport class ContainerAttributes {\r\n\r\n\r\n    /**\r\n     * register new attribute\r\n     *\r\n     */\r\n    public static regAttribute(_class: any, name: string): void {\r\n\r\n        if (!attribute.has(name)) {\r\n            attribute.set(name, _class);\r\n        }\r\n\r\n        if (!attribute.has(name)) {\r\n            attribute.set(name, _class);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * returns attibute if found\r\n     *\r\n     */\r\n    public static findAttribute(name: string): any | null {\r\n\r\n        if (attribute.has(name)) {\r\n            return attribute.get(name);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","const element = new Map();\r\n\r\n\r\n/**\r\n * keeps track of custom elements, so I know when parsing the html\r\n *\r\n */\r\nexport class ContainerElements {\r\n\r\n\r\n\r\n    /**\r\n     * registers new custom element\r\n     *\r\n     */\r\n    public static regElement(_class: any, name: string) {\r\n        if (!element.has(name)) {\r\n            element.set(name, _class);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * returns a class if found\r\n     *\r\n     */\r\n    public static findElement(name: string): any | null {\r\n        if (element.has(name)) {\r\n            return element.get(name);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","// holds the value converters\r\nconst valueConverter = new Map();\r\n\r\n\r\n\r\n/**\r\n * keeps track of the attributes, so I know when using the AST\r\n *\r\n */\r\nexport class ContainerValueConverters {\r\n\r\n\r\n\r\n    /**\r\n     * register new valueCOnverter\r\n     *\r\n     */\r\n    public static regConverter(_class: any, name: string) {\r\n        if (!valueConverter.has(name)) {\r\n            valueConverter.set(name, _class);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * returns converter function if found\r\n     *\r\n     */\r\n    public static findConverter(name: string): any {\r\n        if (valueConverter.has(name)) {\r\n            return valueConverter.get(name);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","// holds the value converters\r\nconst behavior = new Map();\r\n\r\n\r\n\r\n/**\r\n * keeps track of the attributes, so I know when using the AST\r\n *\r\n */\r\nexport class ContainerBehavior {\r\n\r\n\r\n\r\n    /**\r\n     * register new valueCOnverter\r\n     *\r\n     */\r\n    public static regBehavior(_class: any, name: string) {\r\n        if (!behavior.has(name)) {\r\n            behavior.set(name, _class);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * returns converter function if found\r\n     *\r\n     */\r\n    public static findBehavior(name: string): any {\r\n        if (behavior.has(name)) {\r\n            return behavior.get(name);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { ViewParser } from '../view/index';\r\nimport { EventAggregator } from './eventAggregator';\r\nimport { inject } from '../decorator/index';\r\nimport { IElement, INode } from '../interface/index';\r\nimport { Queue } from './queue';\r\nimport { DebounceBehavior, ThrottleBehavior, SignalBehavior, TriggerBehavior } from '../behavior/index';\r\n// built in attributes/elements\r\nimport { MfRouter } from '../element/index';\r\n\r\n\r\nimport {\r\n    IfAttribute,\r\n    ValueAttribute,\r\n    DelgateEventsAttribute,\r\n    TriggerEventsAttribute,\r\n    RepeatAttribute,\r\n    MiscAttributes,\r\n    CssAttribute,\r\n    ModelAttribute\r\n} from '../attribute';\r\n\r\n\r\n\r\n/**\r\n * Main framework class, this is returned in the configure function\r\n *\r\n */\r\n@inject(EventAggregator, Queue)\r\nexport class MF {\r\n\r\n    private node: INode;\r\n    private app: IElement;\r\n    private eventAggregator: EventAggregator;\r\n    public count = 0;\r\n    public queue: Queue;\r\n\r\n\r\n    constructor(eventAggregator: EventAggregator, queue: Queue) {\r\n        this.eventAggregator = eventAggregator;\r\n        this.queue = queue;\r\n\r\n        // polyfill\r\n        if (!(window as any).Reflect) {\r\n            (window as any).Reflect = Object;\r\n        }\r\n\r\n        // register built in attributes/elements\r\n        this.register(\r\n            MfRouter,\r\n            ValueAttribute,\r\n            IfAttribute,\r\n            DelgateEventsAttribute,\r\n            RepeatAttribute,\r\n            MiscAttributes,\r\n            CssAttribute,\r\n            ModelAttribute,\r\n            TriggerEventsAttribute,\r\n            SignalBehavior,\r\n            ThrottleBehavior,\r\n            DebounceBehavior,\r\n            TriggerBehavior);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * sets node and app\r\n     *\r\n     */\r\n    public setRootApp(app: IElement) {\r\n\r\n        this.app = app;\r\n\r\n        // return this instance\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * starts application\r\n     *\r\n     */\r\n    public async start(node: INode) {\r\n\r\n        this.node = node;\r\n\r\n        // set framework to main node\r\n        ViewParser.parseAndCreateElement(this.app, this.node, (this as any));\r\n\r\n        // remove\r\n        this.eventAggregator.publish('MF', 'MF started');\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * register new custom attributes, custom elements\r\n     *\r\n     */\r\n    public register(..._class: any[]) {\r\n\r\n        // does not need to do anything really\r\n        // by using them the decorator will kick in and they will be registered\r\n\r\n    }\r\n\r\n}\r\n","\r\nexport { AttributeController } from './attributeController';\r\nexport { ElementController } from './elementController';\r\nexport { InterpolateController } from './interpolateController';\r\nexport { ViewController } from './viewController';\r\nexport { ViewParser } from './viewParse';\r\n\r\n","import { ViewController } from './viewController';\r\nimport { ContainerClasses } from '../container/index';\r\nimport { BindingEngine } from '../binding';\r\nimport { IAttribute, IElement, INode } from '../interface/index';\r\nimport { Logger } from '../utils/index';\r\n\r\n/**\r\n * start element life cycle\r\n *\r\n */\r\nexport class AttributeController {\r\n    private class: IAttribute;\r\n    private logger: Logger;\r\n\r\n\r\n\r\n    constructor(private parent: IElement, private element: INode, private attribute: Attr, attributeRef: any, $view: ViewController) {\r\n        this.logger = Logger.getLogger(attribute.name, 'attribute');\r\n        this.class = ContainerClasses.get(attributeRef);\r\n        this.element = element;\r\n        if ((attribute.name === 'if.bind' || attribute.name === 'repeat.for') && parent.$element) {\r\n            // these are controllers so they need to create new view\r\n            if (element && !element.$view) {\r\n                element.$view = new ViewController(element);\r\n                element.$view.addAttribute(this);\r\n            }\r\n        } else {\r\n            $view.addAttribute(this);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * start element life cycle\r\n     *\r\n     */\r\n    public init(): void {\r\n        this.create();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * sets vars and calls create on attribute\r\n     *\r\n     */\r\n    public create(): void {\r\n        this.logger.log('created', this.attribute.name, this.attribute.value);\r\n        this.class.$element = this.element;\r\n        this.class.$parent = this.parent;\r\n        this.class.$attribute = this.attribute;\r\n\r\n        // subscribe meta binding\r\n        BindingEngine.subscribeClassMetaBinding(this.class);\r\n\r\n        if (this.class.created) {\r\n            this.class.created();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * calls elements attached() if it exist\r\n     *\r\n     */\r\n    public attached(): void {\r\n        this.logger.log('attached', this.attribute.name, this.attribute.value);\r\n        if (this.class.attached) {\r\n            this.class.attached();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *  calls elements detached() if it exist and clears it\r\n     *\r\n     */\r\n    public detached(): void {\r\n        this.logger.log('detached', this.attribute.name, this.attribute.value);\r\n\r\n        if (this.class.detached) {\r\n            this.class.detached();\r\n        }\r\n\r\n        // remove meta binding\r\n        BindingEngine.unSubscribeClassMetaBinding(this.class);\r\n\r\n        this.parent = null;\r\n        this.element = null;\r\n        this.attribute = null;\r\n        this.class.$element = null;\r\n        this.class.$parent = null;\r\n        this.class.$attribute = null;\r\n        this.class = null;\r\n\r\n        // todo can I cache it here, and reuse?\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { AttributeController } from './attributeController';\r\nimport { ElementController } from './elementController';\r\nimport { InterpolateController } from './interpolateController';\r\nimport { IControllerObject, INode } from '../interface/index';\r\n\r\n/**\r\n * Holds all elements/attributes and interpolates, so we can clear them later\r\n *\r\n */\r\nexport class ViewController {\r\n    private element: INode;\r\n    private items: IControllerObject;\r\n    private count = 0;\r\n\r\n\r\n    constructor(element: INode) {\r\n        this.element = element;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * adds to internal object so we can call detached later\r\n     *\r\n     */\r\n    public addElement(_class: ElementController) {\r\n        this.count++;\r\n        if (!this.items) {\r\n            this.items = {};\r\n        }\r\n        this.items['e' + this.count] = _class;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * adds to internal object so we can call detached later\r\n     *\r\n     */\r\n    public addAttribute(_class: AttributeController): void {\r\n        this.count++;\r\n        if (!this.items) {\r\n            this.items = {};\r\n        }\r\n        this.items['a' + this.count] = _class;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * adds to internal object so we can call detached later\r\n     *\r\n     */\r\n    public addInterpolate(_class: InterpolateController): void {\r\n        this.count++;\r\n        if (!this.items) {\r\n            this.items = {};\r\n        }\r\n        this.items['i' + this.count] = _class;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * returns current element\r\n     *\r\n     */\r\n    public getElement(): INode {\r\n        return this.element;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * calls detached on all attributes/elements and interpolates binded on view\r\n     *\r\n     */\r\n    public clearView(): void {\r\n\r\n        for (const item in this.items) {\r\n            if (this.items[item].detached) {\r\n                this.items[item].detached();\r\n            }\r\n        }\r\n\r\n\r\n        this.items = null;\r\n        this.element = null;\r\n\r\n    }\r\n}\r\n","export { BindingEngine } from './bindingEngine';\r\n","import { traverseAST, valueConvert, getBehavior } from './traverseAst';\r\nimport { tokenize } from './tokenize';\r\nimport { generateAST } from './generateAst';\r\nimport { ITokens } from '../interface/index';\r\n\r\nimport { createBindingExpression } from './createBindingExpression';\r\nimport { setValue } from './setValue';\r\nimport { subscribeClassProperty } from './subscribeClassProperty';\r\nimport { unSubscribeClassProperty } from './unSubscribeClassProperty';\r\nimport { evaluateExpression } from './evaluateExpression';\r\nimport { subscribeClassArray } from './subscribeClassArray';\r\nimport { unSubscribeClassArray } from './unSubscribeClassArray';\r\nimport { unSubscribeClassMetaBinding } from './unSubscribeClassMetaBinding';\r\nimport { subscribeClassMetaBinding } from './subscribeClassMetaBinding';\r\n\r\nimport { Cache } from '../utils/index';\r\n\r\n/**\r\n * Common class to export all internal functions so its easier to use\r\n *\r\n */\r\nexport class BindingEngine {\r\n\r\n\r\n\r\n    /**\r\n     * all in one\r\n     *\r\n     */\r\n    public static tokenizeParseAndTraverseAST(expression: string, context: object) {\r\n        let ast: any;\r\n        if (Cache.expressionMapHas(expression)) {\r\n            const cacheX = Cache.expressionMapGet(expression);\r\n            ast = (<any>cacheX).ast;\r\n        } else {\r\n            const tokens: ITokens[] = tokenize(expression);\r\n            ast = generateAST(tokens);\r\n        }\r\n\r\n        return traverseAST(ast, context);\r\n    }\r\n\r\n\r\n    public static tokenize = tokenize;\r\n\r\n    public static traverseAST = traverseAST;\r\n\r\n    public static generateAST = generateAST;\r\n\r\n    public static valueConvert = valueConvert;\r\n\r\n    public static getBehavior = getBehavior;\r\n\r\n    public static createBindingExpression = createBindingExpression;\r\n\r\n    public static setValue = setValue;\r\n\r\n    public static subscribeClassProperty = subscribeClassProperty;\r\n\r\n    public static unSubscribeClassProperty = unSubscribeClassProperty;\r\n\r\n    public static evaluateExpression = evaluateExpression;\r\n\r\n    public static subscribeClassArray = subscribeClassArray;\r\n\r\n    public static unSubscribeClassArray = unSubscribeClassArray;\r\n\r\n    public static unSubscribeClassMetaBinding = unSubscribeClassMetaBinding;\r\n\r\n    public static subscribeClassMetaBinding = subscribeClassMetaBinding;\r\n\r\n\r\n}\r\n","import { ContainerValueConverters, ContainerClasses } from '../container/index';\r\n\r\nlet fromView: any;\r\nconst splitCache = {};\r\nconst splitLocalCache = {};\r\n\r\nconst Traverser = class {\r\n\r\n\r\n\r\n    /**\r\n     * operator calls\r\n     *\r\n     */\r\n    public static operator = function (val: string, a: any, b: any) {\r\n        switch (val) {\r\n            case '+': return a + b;\r\n            case '-': return b ? a - b : -a;\r\n            case '*': return a * b;\r\n            case '!': return !a;\r\n            case '%': return a % b;\r\n            case '>': return a > b;\r\n            case '<': return a < b;\r\n            case '>=': return a >= b;\r\n            case '&&': return a && b;\r\n            case '||': return a || b;\r\n            case '<=': return a <= b;\r\n            case '===': return a === b;\r\n            case '!==': return a !== b;\r\n            case '/': return a / b;\r\n            // tslint:disable-next-line:no-bitwise\r\n            case '^': return a ^ b;\r\n        }\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * finds out what arity it is\r\n     *\r\n     */\r\n    public static checkArity = function (ast: any, ctx: any) {\r\n        let value;\r\n        if (ast && ast.arity === 'literal') {\r\n            value = ast.value;\r\n        }\r\n\r\n        if (ast && ast.arity === 'variable') {\r\n            value = Traverser.variable(ast, ctx);\r\n        }\r\n\r\n        if (ast && ast.arity === 'binary') {\r\n            value = Traverser.binary(ast, ctx);\r\n        }\r\n\r\n        if (ast && ast.arity === 'unary') {\r\n            value = Traverser.binary(ast, ctx);\r\n        }\r\n\r\n        if (ast && ast.arity === 'ternary') {\r\n            value = Traverser.ternary(ast, ctx);\r\n        }\r\n\r\n        if (ast && ast.arity === 'valueConverter') {\r\n            value = Traverser.valueConverter(ast, ctx);\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * called if arity is variable\r\n     * todo: this one is kinda messy atm\r\n     *\r\n     */\r\n    public static variable = function (ast: any, ctx: any) {\r\n        let result;\r\n        try {\r\n\r\n\r\n            switch (true) {\r\n                case ast.value === 'null' && ast.arity === 'variable':\r\n                    return null;\r\n\r\n                case ast.value === 'undefined' && ast.arity === 'variable':\r\n                    return undefined;\r\n\r\n                case ast.arity === 'variable' && typeof ast.value === 'string' && ast.value.toUpperCase() === 'TRUE':\r\n                    return true;\r\n\r\n                case ast.arity === 'variable' && typeof ast.value === 'string' && ast.value.toUpperCase() === 'FALSE':\r\n                    return false;\r\n\r\n                default:\r\n            }\r\n\r\n            let keys;\r\n            let keyCtx;\r\n            // split text\r\n            if (!splitCache[ast.value]) {\r\n                keys = ast.value.split(/\\.|\\[([^\\]]+)\\]\\.?/).filter((x: any) => x ? x : null);\r\n                splitCache[ast.value] = keys;\r\n                splitLocalCache[ast.value] = typeof keys[0] === 'string' && keys[0][0] !== '$';\r\n            } else {\r\n                keys = splitCache[ast.value];\r\n                keyCtx = splitLocalCache[ast.value];\r\n            }\r\n\r\n            // more then 1, then its array\r\n            let curObj: any;\r\n            let curCtx = ctx;\r\n            if (ctx.isMultiContext) {\r\n                // multi context will be in events\r\n                curCtx = ctx.ctx;\r\n            }\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (keys[i]) {\r\n                    if (i === 0) {\r\n                        curObj = curCtx[keys[i]];\r\n                        if (keyCtx) {\r\n                            // check for override context\r\n                            if (curCtx && curCtx.overrideContext) {\r\n                                while (curCtx.overrideContext) {\r\n                                    if (keys[i] in curCtx.overrideContext) {\r\n                                        curObj = curCtx.overrideContext[keys[i]];\r\n                                    }\r\n                                    curCtx = curCtx.overrideContext;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    } else {\r\n                        curObj = curObj[keys[i]];\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (ctx.isMultiContext && curObj === undefined) {\r\n                curCtx = ctx;\r\n                keys.forEach((prop: any, i: any) => {\r\n                    if (prop) {\r\n                        if (i === 0) {\r\n                            curObj = curCtx[prop];\r\n                            if (typeof prop === 'string' && prop[0] !== '$') {\r\n                                if (curCtx && curCtx.overrideContext) {\r\n                                    while (curCtx.overrideContext) {\r\n                                        if (prop in curCtx.overrideContext) {\r\n                                            curObj = curCtx.overrideContext[prop];\r\n                                        }\r\n                                        curCtx = curCtx.overrideContext;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            curObj = curObj[prop];\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            result = curObj;\r\n        } catch (e) {\r\n            // we dont want to display this just nothing if there is no var\r\n            // console.log('failed in variable');\r\n            // nothing\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * called if arity is binary\r\n     *\r\n     */\r\n    public static binary = function (ast: any, ctx: any) {\r\n        let second: any;\r\n\r\n        if (!ast.isFunction) {\r\n\r\n            /************************************* */\r\n            const first = Traverser.checkArity(ast.first, ctx);\r\n            second = Traverser.checkArity(ast.second, ctx);\r\n\r\n            /************************************* */\r\n\r\n            const value = Traverser.operator(ast.value, first, second);\r\n\r\n            return value;\r\n\r\n        } else {\r\n            const results: any[] = [];\r\n\r\n            ast.second.forEach(function (res: any) {\r\n                results.push(Traverser.evaluate(res, ctx));\r\n            });\r\n\r\n            let curCtx = ctx;\r\n\r\n            // a bit messy this part...\r\n            if (ctx.isMultiContext) {\r\n                curCtx = ctx.ctx;\r\n            }\r\n\r\n            let valueTrigger: any = curCtx[ast.first.value];\r\n\r\n            if (curCtx && curCtx.overrideContext) {\r\n                while (curCtx.overrideContext) {\r\n\r\n                    if (curCtx.overrideContext[ast.first.value]) {\r\n                        valueTrigger = curCtx.overrideContext[ast.first.value];\r\n                    }\r\n\r\n                    curCtx = curCtx.overrideContext;\r\n                }\r\n            }\r\n\r\n            const value = valueTrigger.apply(curCtx, results);\r\n\r\n            return value;\r\n        }\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * ternary\r\n     * called if arity is ternary (conditional)\r\n     * {condition ? expr1 : expr2}'\r\n     */\r\n    public static ternary = function (ast: any, ctx: any) {\r\n\r\n        const first = Traverser.checkArity(ast.first, ctx);\r\n        const second = Traverser.checkArity(ast.second, ctx);\r\n        const third = Traverser.checkArity(ast.third, ctx);\r\n\r\n        const value: any = first ? second : third;\r\n\r\n        return value;\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * called if arity is value converter\r\n     *\r\n     */\r\n    public static valueConverter = function (ast: any, ctx: any) {\r\n        let result;\r\n\r\n        const args: any[] = [];\r\n        // loop args\r\n        ast.args.forEach((arg: any) => {\r\n            args.push(Traverser.checkArity(arg, ctx));\r\n        });\r\n\r\n        // find value converter\r\n        const valueConverterExist = ContainerValueConverters.findConverter(ast.value);\r\n        let _class: any;\r\n\r\n        // if it exist, then we execute it\r\n        if (valueConverterExist) {\r\n            _class = ContainerClasses.get(valueConverterExist);\r\n            try {\r\n                result = fromView ? _class.fromView.apply(ctx, args) : _class.toView.apply(ctx, args);\r\n            } catch (e) {\r\n                console.log('value converter failed:' + ast.value);\r\n            }\r\n        } else {\r\n            console.log('value converter does not exist:' + ast.value);\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * called to start evaluating ast (getting result)\r\n     *\r\n     */\r\n    public static evaluate = function (astInput: any, ctx: any) {\r\n\r\n        fromView = false;\r\n\r\n        // if more then its\r\n        const astArray = Array.isArray(astInput) ? astInput : [astInput];\r\n        const returnArray: any[] = [];\r\n        // astArray.forEach((ast: any) => {\r\n        for (let i = 0; i < astArray.length; i++) {\r\n\r\n\r\n            let result;\r\n            switch (true) {\r\n                case astArray[i].arity === 'literal':\r\n                    result = astArray[i].value;\r\n                    break;\r\n                case astArray[i].arity === 'unary':\r\n                    result = Traverser.binary(astArray[i], ctx);\r\n                    break;\r\n                case astArray[i].arity === 'binary':\r\n                    result = Traverser.binary(astArray[i], ctx);\r\n                    break;\r\n                case astArray[i].arity === 'variable':\r\n                    result = Traverser.variable(astArray[i], ctx);\r\n                    break;\r\n                case astArray[i].arity === 'ternary':\r\n                    result = Traverser.ternary(astArray[i], ctx);\r\n                    break;\r\n                case astArray[i].arity === 'behavior':\r\n                    // this will be used outside this scope for now\r\n                    break;\r\n                case astArray[i].arity === 'valueConverter':\r\n                    // resolve args\r\n                    result = Traverser.valueConverter(astArray[i], ctx);\r\n                    break;\r\n                default:\r\n                    console.log('unknown expression');\r\n            }\r\n            returnArray.push(result);\r\n\r\n        }\r\n\r\n        // });\r\n        if (returnArray.length > 1) {\r\n            return returnArray.join('');\r\n        } else {\r\n            return returnArray[0];\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * handle value converter fromView only\r\n     *\r\n     */\r\n    public static traverseOnlyValueConverter = function (value: any, ast: any, ctx: any) {\r\n        let result;\r\n\r\n        let args: any[] = [];\r\n        // loop args\r\n        ast.args.forEach((arg: any, i: number) => {\r\n            if (i > 0) {\r\n                args.push(Traverser.checkArity(arg, ctx));\r\n            }\r\n\r\n        });\r\n\r\n        args = [value, ...args];\r\n\r\n        // find value converter\r\n        const valueConverterExist = ContainerValueConverters.findConverter(ast.value);\r\n        let _class: any;\r\n\r\n        // if it exist, then we execute it\r\n        if (valueConverterExist) {\r\n            _class = ContainerClasses.get(valueConverterExist);\r\n            try {\r\n                result = fromView ? _class.fromView.apply(ctx, args) : _class.toView.apply(ctx, args);\r\n            } catch (e) {\r\n                console.log('value converter failed:' + ast.value);\r\n            }\r\n        } else {\r\n            console.log('value converter does not exist:' + ast.value);\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * evaluate ast\r\n     *\r\n     */\r\n    public static evaluateConverterFromViewOnly = function (astInput: any, value: any, ctx: any) {\r\n\r\n        // if more then its\r\n        const astArray = Array.isArray(astInput) ? astInput : [astInput];\r\n        const returnArray: any[] = [];\r\n        fromView = true;\r\n        let valueConverted = false;\r\n        // astArray.forEach((ast: any) => {\r\n        for (let i = 0; i < astArray.length; i++) {\r\n\r\n\r\n            let result;\r\n            switch (true) {\r\n                case astArray[i].arity === 'valueConverter':\r\n                    // resolve args\r\n                    valueConverted = true;\r\n                    result = Traverser.traverseOnlyValueConverter(value, astArray[i], ctx);\r\n                    break;\r\n            }\r\n            if (result) {\r\n                returnArray.push(result);\r\n            }\r\n\r\n\r\n        }\r\n\r\n        // });\r\n        if (returnArray.length > 1) {\r\n            return returnArray.join('');\r\n        } else {\r\n            if (valueConverted) {\r\n                return returnArray[0];\r\n            } else {\r\n                return value;\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * gets the behaviors from ast\r\n     *\r\n     */\r\n    public static getBehaviorFunctions = function (ast: any) {\r\n        const astArray = Array.isArray(ast) ? ast : [ast];\r\n        const returnArray: any[] = [];\r\n        // astArray.forEach((ast: any) => {\r\n        for (let i = 0; i < astArray.length; i++) {\r\n\r\n\r\n            let result;\r\n            switch (true) {\r\n                case astArray[i].arity === 'behavior':\r\n                    result = {\r\n                        name: astArray[i].value,\r\n                        args: astArray[i].args.map((a: any) => a.value)\r\n                    };\r\n                    // this will be used outside this scope for now\r\n                    break;\r\n            }\r\n            if (result) {\r\n                returnArray.push(result);\r\n            }\r\n\r\n\r\n        }\r\n\r\n        // });\r\n        return returnArray;\r\n\r\n    };\r\n\r\n};\r\n\r\n\r\n// default for getting result\r\nexport const traverseAST = function (ast: any, ctx: any) {\r\n    return Traverser.evaluate(ast, ctx);\r\n};\r\n\r\n// used for getting valueConverter\r\nexport const valueConvert = function (ast: any, ctx: any, value: any) {\r\n    return Traverser.evaluateConverterFromViewOnly(ast, value, ctx);\r\n};\r\n\r\n// return behavior\r\nexport const getBehavior = function (ast: any) {\r\n    return Traverser.getBehaviorFunctions(ast);\r\n};\r\n","import {Tokenizer} from './tokenizer';\r\n\r\n\r\n\r\n/**\r\n * Will tokenize string (only give it content of ${})\r\n * Todo: write more comments/ more testing\r\n */\r\nexport const tokenize = function (str: string) {\r\n    const tokenizer = new Tokenizer(str);\r\n    const tokens = tokenizer.start();\r\n\r\n    return tokens;\r\n};\r\n","import { CharCodes } from './charcode';\r\n\r\n// create charCode class we can use everytime\r\nconst charCode = new CharCodes();\r\n\r\n/**\r\n * Class for taking a expression and generating tokens for ast\r\n *\r\n */\r\nexport class Tokenizer {\r\n    private expression: string;\r\n    private baseTokens: any[] = [];\r\n    private chars: any[] = [];\r\n    private curChar: any = null;\r\n    private curCharNo = 0;\r\n    private curtype: string = null;\r\n    private expressionLength: number;\r\n    private isMix: boolean; // if its a mix of text and interpolate expressions\r\n    private isOutsideExpression: boolean; // if mix stuff outside ${} is text only\r\n    private expressionOriginal: string;\r\n\r\n\r\n\r\n    constructor(expression: string) {\r\n        this.expressionOriginal = expression;\r\n        this.isMix = expression.indexOf('${') !== -1;\r\n        this.isOutsideExpression = this.isMix;\r\n        this.expression = this.trim(this.expressionOriginal);\r\n        this.curtype = expression.indexOf('${') > 0 ? 'string' : null;\r\n        this.curChar = this.expression.charCodeAt(this.curCharNo);\r\n        this.expressionLength = this.expression.length;\r\n    }\r\n\r\n\r\n    /**\r\n     * starts to parse and returns tokens\r\n     *\r\n     */\r\n    public start(): any[] {\r\n        this.generateBaseTokens();\r\n\r\n        return this.baseTokens;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * trims down eveything thats not text so we dont need to check for whitespace later\r\n     *\r\n     */\r\n    private trim(expression: string): string {\r\n        let text = this.isOutsideExpression;\r\n        let trimmed = '';\r\n        for (let i = 0; i < expression.length; i++) {\r\n            switch (true) {\r\n                case text && charCode.DOLLAR.has(expression.charCodeAt(i)) && charCode.MUSTACHE_START.has(expression.charCodeAt(i + 1)):\r\n                    trimmed = trimmed + expression[i];\r\n                    text = false;\r\n                    break;\r\n\r\n                case !text && charCode.MUSTACHE_END.has(expression.charCodeAt(i)):\r\n                    trimmed = trimmed + expression[i];\r\n                    text = true;\r\n                    break;\r\n\r\n                case text && !charCode.STRING_START_END.has(expression.charCodeAt(i)):\r\n                    trimmed = trimmed + expression[i];\r\n                    break;\r\n\r\n                case text && charCode.STRING_START_END.has(expression.charCodeAt(i)):\r\n                    trimmed = trimmed + expression[i];\r\n                    text = false;\r\n                    break;\r\n\r\n                case !text && charCode.STRING_START_END.has(expression.charCodeAt(i)):\r\n                    trimmed = trimmed + expression[i];\r\n                    text = true;\r\n                    break;\r\n\r\n                case !text && charCode.WHITESPACE.has(expression.charCodeAt(i)):\r\n                    // skip only\r\n                    break;\r\n\r\n                case !text && !charCode.WHITESPACE.has(expression.charCodeAt(i)):\r\n                    trimmed = trimmed + expression[i];\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return trimmed;\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * goes to next char in expression\r\n     *\r\n     */\r\n    private advance(): void {\r\n        this.curCharNo++;\r\n        this.curChar = this.expression.charCodeAt(this.curCharNo);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * adds to token until it switched type/emds\r\n     *\r\n     */\r\n    private getString(): void {\r\n        let startend = charCode.STRING_START_END.has(this.curChar);\r\n        let expressionStart = this.expressionStart();\r\n        let done = this.parsedAllChars();\r\n\r\n        while (!startend && !expressionStart && !done) {\r\n            this.chars.push(this.curChar);\r\n            this.advance();\r\n            startend = charCode.STRING_START_END.has(this.curChar);\r\n            expressionStart = this.expressionStart();\r\n            done = this.parsedAllChars();\r\n        }\r\n\r\n        // do we have type? mixed expressions could have stared right on a expression\r\n        if (this.curtype) {\r\n            this.addToken();\r\n        }\r\n\r\n\r\n        if (!this.isOutsideExpression && startend && !expressionStart) {\r\n            this.advance();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * adds to token until it switched type/emds\r\n     *\r\n     */\r\n    private getNumber(): void {\r\n        let variable = charCode.REAL.has(this.curChar);\r\n        let expressionStart = this.expressionStart();\r\n        let done = this.parsedAllChars();\r\n\r\n        while (variable && !expressionStart && !done) {\r\n            this.chars.push(this.curChar);\r\n            this.advance();\r\n            variable = charCode.REAL.has(this.curChar);\r\n            expressionStart = this.expressionStart();\r\n            done = this.parsedAllChars();\r\n        }\r\n        this.addToken();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * checks if we are at the end of expression\r\n     *\r\n     */\r\n    private parsedAllChars(): boolean {\r\n        const done = this.curCharNo < this.expressionLength;\r\n\r\n        return !done;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * adds to token until it switched type/emds\r\n     *\r\n     */\r\n    private getVariable(): void {\r\n        let variable = charCode.VARIABLE.has(this.curChar);\r\n        let expressionStart = this.expressionStart();\r\n        let done = this.parsedAllChars();\r\n\r\n        while (variable && !expressionStart && !done) {\r\n            this.chars.push(this.curChar);\r\n            this.advance();\r\n            variable = charCode.VARIABLE.has(this.curChar);\r\n            expressionStart = this.expressionStart();\r\n            done = this.parsedAllChars();\r\n        }\r\n        this.addToken();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * adds to token until it switched type/emds\r\n     *\r\n     */\r\n    private getOperator(): void {\r\n        let operator = charCode.OPERATOR.has(this.curChar);\r\n        let expressionStart = this.expressionStart();\r\n        let bracetsLeft = charCode.BRACKETLEFT.has(this.curChar);\r\n        let bracetsRight = charCode.BRACKETRIGHT.has(this.curChar);\r\n        let negativeNumber = this.negativeNumber();\r\n        let done = this.parsedAllChars();\r\n\r\n        if (bracetsLeft || bracetsRight) {\r\n            this.chars.push(this.curChar);\r\n            this.advance();\r\n        } else {\r\n\r\n            while (operator && !expressionStart && !done && !bracetsLeft && !bracetsRight && !negativeNumber) {\r\n                this.chars.push(this.curChar);\r\n                this.advance();\r\n                operator = charCode.OPERATOR.has(this.curChar);\r\n                bracetsLeft = charCode.BRACKETLEFT.has(this.curChar);\r\n                bracetsRight = charCode.BRACKETRIGHT.has(this.curChar);\r\n                expressionStart = this.expressionStart();\r\n                negativeNumber = this.negativeNumber();\r\n                done = this.parsedAllChars();\r\n            }\r\n        }\r\n\r\n        // do we have anything ?\r\n        if (this.chars.length > 0) {\r\n            this.addToken();\r\n        }\r\n        if (negativeNumber) {\r\n            this.curtype = null;\r\n            this.chars.push(this.curChar);\r\n            this.advance();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * checks for interpolate expressions start\r\n     *\r\n     */\r\n    private expressionStart(): boolean {\r\n        const t1 = this.expression.charCodeAt(this.curCharNo);\r\n        const t2 = this.expression.charCodeAt(this.curCharNo + 1);\r\n\r\n        return charCode.DOLLAR.has(t1) && charCode.MUSTACHE_START.has(t2);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * checks if we have operator, plus or minus thena number... then its a negative number\r\n     *\r\n     */\r\n    private negativeNumber(): boolean {\r\n        const t1 = this.expression.charCodeAt(this.curCharNo - 1);\r\n        const t2 = this.expression.charCodeAt(this.curCharNo);\r\n        const t3 = this.expression.charCodeAt(this.curCharNo + 1);\r\n\r\n        return charCode.OPERATOR.has(t1) && charCode.PLUS_OR_MINUS.has(t2) && charCode.NUMBERS.has(t3);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * adds token\r\n     *\r\n     */\r\n    private addToken(): void {\r\n        const val = this.chars.map(a => String.fromCharCode(a)).join('');\r\n        this.baseTokens.push({\r\n            type: this.curtype,\r\n            value: this.curtype === 'number' ? parseFloat(val) : val\r\n        });\r\n        this.chars = [];\r\n        this.curtype = null;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * loops expression and adds tokens\r\n     *\r\n     */\r\n    private generateBaseTokens(): void {\r\n        let done = this.parsedAllChars();\r\n\r\n        while (!done) {\r\n            switch (true) {\r\n\r\n                case this.expressionStart():\r\n                    this.isOutsideExpression = false;\r\n                    this.curtype = 'operator';\r\n                    this.chars.push(';'.charCodeAt(0));\r\n                    this.addToken();\r\n                    this.advance();\r\n                    this.advance();\r\n                    break;\r\n\r\n                case this.isOutsideExpression:\r\n                    this.getString();\r\n                    break;\r\n\r\n                case this.curtype === null && charCode.STRING_START_END.has(this.curChar):\r\n                    this.curtype = 'string';\r\n                    this.advance();\r\n                    this.getString();\r\n                    break;\r\n\r\n                case this.curtype === null && charCode.MUSTACHE_END.has(this.curChar):\r\n                    this.isOutsideExpression = true;\r\n                    this.curtype = 'operator';\r\n                    this.chars.push(';'.charCodeAt(0));\r\n                    this.addToken();\r\n                    this.curtype = 'string';\r\n                    this.advance();\r\n                    break;\r\n\r\n                case this.curtype === null && charCode.NUMBERS.has(this.curChar):\r\n                    this.curtype = 'number';\r\n                    this.getNumber();\r\n                    break;\r\n\r\n                case this.curtype === null && charCode.VARIABLE.has(this.curChar):\r\n                    this.curtype = 'variable';\r\n                    this.getVariable();\r\n                    break;\r\n\r\n                case this.curtype === null && charCode.WHITESPACE.has(this.curChar):\r\n                    // skip it, we dont want whitespce thats beetween operators and variables\r\n                    this.advance();\r\n                    break;\r\n\r\n                case this.curtype === null && charCode.OPERATOR.has(this.curChar):\r\n                    this.curtype = 'operator';\r\n                    this.getOperator();\r\n                    break;\r\n\r\n                default:\r\n                    console.warn('bug tokenizer', String.fromCharCode(this.curChar));\r\n                    console.warn('bug tokenizer', this.expression);\r\n                    this.advance();\r\n\r\n            }\r\n            done = this.parsedAllChars();\r\n        }\r\n    }\r\n\r\n}\r\n","\r\n/**\r\n * class that holds all typoes of char types tokenizer need to know\r\n *\r\n */\r\nexport class CharCodes {\r\n    public readonly WHITESPACE: Set<number>;\r\n    public readonly STRING_START_END: Set<number>;\r\n    public readonly PLUS: Set<number>;\r\n    public readonly DOT: Set<number>;\r\n    public readonly MINUS: Set<number>;\r\n    public readonly BRACKETLEFT: Set<number>;\r\n    public readonly BRACKETRIGHT: Set<number>;\r\n    public readonly NOT: Set<number>;\r\n    public readonly ASSIGN: Set<number>;\r\n    public readonly LETTERS_UPPER: Set<number>;\r\n    public readonly LETTERS_LOWER: Set<number>;\r\n    public readonly NUMBERS: Set<number>;\r\n    public readonly SQUARE_BRACKET_RIGHT: Set<number>;\r\n    public readonly SQUARE_BRACKET_LEFT: Set<number>;\r\n    public readonly DOLLAR: Set<number>;\r\n    public readonly MUSTACHE_START: Set<number>;\r\n    public readonly MUSTACHE_END: Set<number>;\r\n    public readonly UNDERSCORE: Set<number>;\r\n    public readonly VARIABLE: Set<number>;\r\n    public readonly LETTERS: Set<number>;\r\n    public readonly SQUARE_BRACKETS: Set<number>;\r\n    public readonly REAL: Set<number>;\r\n    public readonly OPERATOR: Set<number>;\r\n    public readonly PLUS_OR_MINUS: Set<number>;\r\n\r\n    // some weird parts here to not kill ie11/es5\r\n\r\n    // break es5, this.VARIABLE = new Set([...this.LETTERS, ...this.NUMBERS, ...this.DOLLAR, ...this.DOT, ...this.UNDERSCORE, ...this.SQUARE_BRACKETS]);\r\n\r\n    // break ie11, this.VARIABLE = new Set(['='].map(a => a.charCodeAt(0));\r\n\r\n\r\n    constructor() {\r\n        this.WHITESPACE = new Set();\r\n        [32, 10, 13].map(a => this.WHITESPACE.add(a));\r\n\r\n        this.STRING_START_END = new Set();\r\n        [\"'\"].map(a => this.STRING_START_END.add(a.charCodeAt(0)));\r\n\r\n        this.MINUS = new Set();\r\n        ['-'].map(a => this.MINUS.add(a.charCodeAt(0)));\r\n\r\n        this.PLUS = new Set();\r\n        ['+'].map(a => this.PLUS.add(a.charCodeAt(0)));\r\n\r\n        this.PLUS_OR_MINUS = new Set();\r\n        ['+', '-'].map(a => this.PLUS_OR_MINUS.add(a.charCodeAt(0)));\r\n\r\n\r\n        this.UNDERSCORE = new Set();\r\n        ['_'].map(a => this.UNDERSCORE.add(a.charCodeAt(0)));\r\n\r\n        this.DOT = new Set();\r\n        ['.'].map(a => this.DOT.add(a.charCodeAt(0)));\r\n\r\n        this.BRACKETLEFT = new Set();\r\n        ['('].map(a => this.BRACKETLEFT.add(a.charCodeAt(0)));\r\n\r\n        this.BRACKETRIGHT = new Set();\r\n        [')'].map(a => this.BRACKETRIGHT.add(a.charCodeAt(0)));\r\n\r\n        this.NOT = new Set();\r\n        ['!'].map(a => this.NOT.add(a.charCodeAt(0)));\r\n\r\n        this.ASSIGN = new Set();\r\n        ['='].map(a => this.ASSIGN.add(a.charCodeAt(0)));\r\n\r\n        this.OPERATOR = new Set();\r\n        ['=', '!', '>', '<', '+', '-', '*', '/', '%', '^', '(', ')', '|', '&', '?', ':', ','].map(a => this.OPERATOR.add(a.charCodeAt(0)));\r\n\r\n        this.NUMBERS = new Set();\r\n        ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'].map(a => this.NUMBERS.add(a.charCodeAt(0)));\r\n\r\n        this.LETTERS_UPPER = new Set();\r\n        ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K',\r\n            'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'].map(a => this.LETTERS_UPPER.add(a.charCodeAt(0)));\r\n\r\n        this.LETTERS_LOWER = new Set();\r\n        ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\r\n            'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'].map(a => this.LETTERS_LOWER.add(a.charCodeAt(0)));\r\n\r\n        this.LETTERS = new Set();\r\n        ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K',\r\n            'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\r\n            'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\r\n            'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'].map(a => this.LETTERS.add(a.charCodeAt(0)));\r\n\r\n\r\n        this.SQUARE_BRACKET_RIGHT = new Set();\r\n        ['['].map(a => this.SQUARE_BRACKET_RIGHT.add(a.charCodeAt(0)));\r\n\r\n        this.SQUARE_BRACKET_LEFT = new Set();\r\n        ['['].map(a => this.SQUARE_BRACKET_LEFT.add(a.charCodeAt(0)));\r\n\r\n\r\n        this.SQUARE_BRACKETS = new Set();\r\n        ['[', '['].map(a => this.SQUARE_BRACKETS.add(a.charCodeAt(0)));\r\n\r\n\r\n        this.DOLLAR = new Set();\r\n        ['$'].map(a => this.DOLLAR.add(a.charCodeAt(0)));\r\n\r\n\r\n        this.MUSTACHE_START = new Set();\r\n        ['{'].map(a => this.MUSTACHE_START.add(a.charCodeAt(0)));\r\n\r\n        this.MUSTACHE_END = new Set();\r\n        ['}'].map(a => this.MUSTACHE_END.add(a.charCodeAt(0)));\r\n\r\n        this.REAL = new Set();\r\n        ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '.'].map(a => this.REAL.add(a.charCodeAt(0)));\r\n\r\n\r\n        this.VARIABLE = new Set();\r\n        ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K',\r\n            'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\r\n            'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\r\n            'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\r\n            '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '.', '$', '_', '[', '['\r\n        ].map(a => this.VARIABLE.add(a.charCodeAt(0)));\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { ITokens } from '../interface/index';\r\nimport { AST } from './ast';\r\nimport { SymbolContainer } from './symbolContainer';\r\nimport { addSymbols } from './addSymbols';\r\n\r\nconst ast = new AST();\r\nconst symbolContainer = new SymbolContainer();\r\nast.addSymbolContainer(symbolContainer);\r\naddSymbols(ast);\r\n\r\nexport const generateAST = function (tokenArray: ITokens[]) {\r\n\r\n    return ast.start(tokenArray);\r\n\r\n};\r\n","import { SymbolContainer } from './symbolContainer';\r\nimport { SymbolTemplate } from './symbolTemplate';\r\nimport { ITokens } from '../interface/index';\r\n\r\n\r\n/**\r\n * Using Douglas Crockford paper on Vaughan Pratt \"Top Down Operator Precedence\"\r\n * For more info about this look here\r\n * https://crockford.com/javascript/tdop/tdop.html (added to docs folder so I dont loose it)\r\n * Not everything is used\r\n *\r\n * This class will do most of the heavy lifting of generating the AST for our expressions\r\n * It will need symbols added and a symbol container\r\n *\r\n */\r\nexport class AST {\r\n\r\n    private tokens: ITokens[];\r\n    public currentStatement: any = null;\r\n    public currentTokenIndex = 0;\r\n    public currentToken: any;\r\n    private symbolContainer: SymbolContainer;\r\n\r\n\r\n    /**\r\n     * start the parsing of tokens\r\n     *\r\n     */\r\n    public start(tokens: ITokens[]) {\r\n        // set tokens\r\n        this.tokens = tokens;\r\n\r\n        // clear\r\n        this.currentStatement = null;\r\n        this.currentTokenIndex = 0;\r\n        this.currentToken = null;\r\n\r\n        // get first token\r\n        this.advance();\r\n\r\n        // generate ast\r\n        const ast = this.statements();\r\n\r\n        // return ast\r\n        return ast;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * adds symbol container we will use to get/set our symbols\r\n     *\r\n     */\r\n    public addSymbolContainer(symbolContainer: SymbolContainer) {\r\n        this.symbolContainer = symbolContainer;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Symbol id and an optional binding power that defaults to 0 and returns a symbol object for that id.\r\n     * If the symbol already exists in the symbol_table, the function returns that symbol object.\r\n     * Otherwise, it makes a new symbol object that inherits from the symbolTemplate, stores it in the symbol container, and returns it.\r\n     * A symbol object initially contains an id, a value, a left binding power, and the stuff it inherits from the symbolTemplate.\r\n     *\r\n     */\r\n    public symbol(id: string, bp?: number) {\r\n        let s = this.symbolContainer[id];\r\n        bp = bp || 0;\r\n        if (s) {\r\n            if (bp >= s.lbp) {\r\n                s.lbp = bp;\r\n            }\r\n        } else {\r\n            s = new SymbolTemplate();\r\n            s.id = s.value = id;\r\n            s.lbp = bp;\r\n            this.symbolContainer[id] = s;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Prefix operators are right associative.\r\n     * A prefix does not have a left binding power because it does not bind to the left.\r\n     * Prefix operators can also sometimes be reserved words.\r\n     *\r\n     */\r\n    public prefix(id: string, nud?: Function) {\r\n        const s = this.symbol(id);\r\n        const astInstance = this;\r\n        s.nud = nud || function () {\r\n            // scope.reserve(this);\r\n            this.first = astInstance.expression(70);\r\n            this.arity = 'unary';\r\n\r\n            return this;\r\n        };\r\n\r\n        return s;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * The infix function takes an id, a binding power, and an optional led function.\r\n     * If a led function is not provided, the infix function supplies a default led that is useful in most cases.\r\n     *\r\n     */\r\n    public infix(id: string, bp?: number, led?: Function) {\r\n        const s = this.symbol(id, bp);\r\n        const astInstance = this;\r\n        s.led = led || function (left: any) {\r\n            this.first = left;\r\n            this.second = astInstance.expression(bp);\r\n            this.arity = 'binary';\r\n\r\n            return this;\r\n        };\r\n\r\n        return s;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Those infix operators are left associative.\r\n     * We can also make right associative operators, such as short-circuiting logical operators, by reducing the right binding power.\r\n     *\r\n     */\r\n    public infixr(id: string, bp: number, led?: Function) {\r\n        const s = this.symbol(id, bp);\r\n        const astInstance = this;\r\n        s.led = led || function (left: any) {\r\n            this.first = left;\r\n            this.second = astInstance.expression(bp - 1);\r\n            this.arity = 'binary';\r\n\r\n            return this;\r\n        };\r\n\r\n        return s;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * The statement function parses one statement.\r\n     * If the current token has an std method, the token is reserved and the std is invoked.\r\n     * Otherwise,we assume an expression statement terminated with a semi-colon.\r\n     * For reliability, we will reject an expression statement that is not an assignment or invocation.\r\n     *\r\n     */\r\n    public statement() {\r\n        const n = this.currentToken;\r\n        let v;\r\n        if (n.std) {\r\n            this.advance();\r\n            // scope.reserve(n);\r\n\r\n            return n.std();\r\n        }\r\n        v = this.expression(0);\r\n\r\n        return v;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * The statements function parses statements until it sees (end) or } which signals the end of a block.\r\n     * The function returns a statement, an array of statements, or null if there were no statements present.\r\n     *\r\n     */\r\n    public statements() {\r\n        const a = [];\r\n        let s;\r\n        while (true) {\r\n            if (this.currentToken.id === '}' || this.currentToken.id === '(end)') {\r\n                break;\r\n            }\r\n            s = this.statement();\r\n            if (this.currentStatement) {\r\n                this.currentStatement.args.unshift(a.pop());\r\n                this.currentStatement = null;\r\n            }\r\n\r\n            if (s) {\r\n                a.push(s);\r\n            }\r\n        }\r\n\r\n        return a.length === 0 ? null : a.length === 1 ? a[0] : a;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * The advance function makes a new token object from the next simple token in the array and assigns it to the token variable.\r\n     * It can take an optional id parameter which it can check against the id of the previous token.\r\n     * The new token object's prototype is a (name) token in the current scope or a symbol from the symbol table.\r\n     * The new token's arity is \"name\", \"literal\", or \"operator\".\r\n     * Its arity may be changed later to \"binary\", \"unary\", or \"statement\" when we know more about the token's role in the program.\r\n     *\r\n     */\r\n    public advance(expected?: string) {\r\n\r\n        let type, o, token, value;\r\n        token = this.tokens[this.currentTokenIndex];\r\n\r\n        if (token && expected) {\r\n            if (expected === (token as any).id) {\r\n                // later\r\n            }\r\n        }\r\n\r\n        if (this.currentTokenIndex >= this.tokens.length) {\r\n            this.currentToken = this.symbolContainer['(end)'];\r\n\r\n            return;\r\n        }\r\n\r\n        this.currentTokenIndex += 1;\r\n        value = token.value;\r\n        type = token.type;\r\n\r\n        if (type === 'variable') {\r\n\r\n            type = 'variable';\r\n            o = this.symbolContainer['(variable)'];\r\n\r\n        } else if (type === 'operator') {\r\n\r\n            o = this.symbolContainer[value];\r\n            if (!o) {\r\n                console.log('Unknown operator.', token);\r\n            }\r\n\r\n        } else if (type === 'string' || type === 'number') {\r\n\r\n            type = 'literal';\r\n            o = this.symbolContainer['(literal)'];\r\n\r\n        } else {\r\n\r\n            console.log('Unexpected token.', token);\r\n\r\n        }\r\n\r\n        this.currentToken = Object.create(o);\r\n        this.currentToken.value = value;\r\n        this.currentToken.arity = type;\r\n\r\n        return this.currentToken;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * The heart of Pratt's technique is the expression function.\r\n     * It takes a right binding power that controls how aggressively it binds to tokens on its right.\r\n     *\r\n     */\r\n    public expression(rbp: any) {\r\n        let left;\r\n        let token = this.currentToken;\r\n        this.advance();\r\n        left = token.nud();\r\n        try {\r\n            while (rbp < this.currentToken.lbp) {\r\n                token = this.currentToken;\r\n                this.advance();\r\n                left = token.led(left);\r\n            }\r\n        } catch (e) {\r\n            console.log('parser fail');\r\n\r\n        }\r\n\r\n        return left;\r\n    }\r\n\r\n\r\n}\r\n","/**\r\n * Symbol template\r\n * Will be used by our symbol class as template for new symbols/infix/prefix\r\n *\r\n */\r\nexport class SymbolTemplate {\r\n\r\n    /**\r\n     * nud = null denotation\r\n     * A nud does not care about the tokens to the left. A led does\r\n     * A nud method is used by values (such as variables and literals) and by prefix operators\r\n     *\r\n     */\r\n    public nud() {\r\n        console.error('Undefined.');\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * led = left denotation\r\n     * A led t care about the tokens to the left. A nud does not\r\n     * A led method is used by infix operators and suffix operators\r\n     *\r\n     */\r\n    public led() {\r\n        console.error('Missing operator.');\r\n    }\r\n\r\n\r\n    /**\r\n     * note\r\n     * A token may have both a nud method and a led method.\r\n     * For example, - might be both a prefix operator (negation) and an infix operator (subtraction), so it would have both nud and led methods\r\n     *\r\n     */\r\n\r\n\r\n}\r\n","/**\r\n * Container for symbols used by our AST/Symbol class\r\n *\r\n */\r\nexport class SymbolContainer {\r\n    // properties of this will be strings\r\n}\r\n","\r\nimport { AST } from './ast';\r\n\r\n\r\n/**\r\n * Using Douglas Crockford paper on Vaughan Pratt \"Top Down Operator Precedence\"\r\n * For more info about this look here\r\n * https://crockford.com/javascript/tdop/tdop.html (added to docs folder so I dont loose it)\r\n * Not everything is used\r\n *\r\n * This function adds symbols to our AST\r\n *\r\n */\r\nexport function addSymbols(astInstance: AST) {\r\n\r\n    const ast = astInstance;\r\n\r\n\r\n\r\n    /**\r\n     * Symbol id and an optional binding power that defaults to 0 and returns a symbol object for that id.\r\n     * If the symbol already exists in the symbol_table, the function returns that symbol object.\r\n     * Otherwise, it makes a new symbol object that inherits from the symbolTemplate, stores it in the symbol container, and returns it.\r\n     * A symbol object initially contains an id, a value, a left binding power, and the stuff it inherits from the symbolTemplate.\r\n     *\r\n     */\r\n    ast.symbol('(literal)').nud = function () {\r\n        return this;\r\n    };\r\n\r\n    ast.symbol('(variable)').nud = function () {\r\n        return this;\r\n    };\r\n\r\n    ast.symbol('(function)').nud = function () {\r\n        return this;\r\n    };\r\n\r\n\r\n\r\n    ast.symbol('(end)');\r\n    ast.symbol('(name)');\r\n    ast.symbol(':');\r\n    ast.symbol(';');\r\n    ast.symbol(')');\r\n    ast.symbol(']');\r\n    ast.symbol('}');\r\n    ast.symbol(',');\r\n\r\n\r\n\r\n    /**\r\n     * The infix function takes an id, a binding power, and an optional led function.\r\n     * If a led function is not provided, the infix function supplies a default led that is useful in most cases.\r\n     *\r\n     */\r\n    ast.infix('+', 50);\r\n    ast.infix('-', 50);\r\n    ast.infix('*', 60);\r\n    ast.infix('%', 60);\r\n    ast.infix('/', 60);\r\n    ast.infix('===', 40);\r\n    ast.infix('!==', 40);\r\n    ast.infix('<', 40);\r\n    ast.infix('<=', 40);\r\n    ast.infix('>', 40);\r\n    ast.infix('^', 70);\r\n    ast.infix('>=', 40);\r\n\r\n\r\n    ast.infix('?', 20, function (left: any) {\r\n        this.first = left;\r\n        this.second = ast.expression(0);\r\n        ast.advance(':');\r\n        this.third = ast.expression(0);\r\n        this.arity = 'ternary';\r\n\r\n        return this;\r\n    });\r\n\r\n\r\n    ast.infix('.', 80, function (left: any) {\r\n        this.first = left;\r\n        if (ast.currentToken.arity !== 'name') {\r\n            ast.currentToken.error('Expected a property name.');\r\n        }\r\n        ast.currentToken.arity = 'literal';\r\n        this.second = ast.currentToken;\r\n        this.arity = 'binary';\r\n        ast.advance();\r\n\r\n        return this;\r\n    });\r\n\r\n\r\n\r\n    ast.infix('[', 80, function (left: any) {\r\n        this.first = left;\r\n        this.second = ast.expression(0);\r\n        this.arity = 'binary';\r\n        ast.advance(']');\r\n\r\n        return this;\r\n    });\r\n\r\n\r\n\r\n    ast.infix('(', 80, function (left: any) {\r\n        if (!left) {\r\n            return ast.expression(0);\r\n        }\r\n        const a: any[] = [];\r\n        this.arity = 'binary';\r\n        this.isFunction = true;\r\n        this.first = left;\r\n        this.second = a;\r\n        if ((left.arity !== 'unary' || left.id !== 'function') &&\r\n            left.arity !== 'variable' && left.id !== '(' &&\r\n            left.id !== '&&' && left.id !== '||' && left.id !== '?') {\r\n            left.error('Expected a variable name.');\r\n        }\r\n\r\n        if (ast.currentToken.id !== ')') {\r\n            while (true) {\r\n                a.push(ast.expression(0));\r\n                if (ast.currentToken.id !== ',') {\r\n                    break;\r\n                }\r\n                ast.advance(',');\r\n            }\r\n        }\r\n        ast.advance(')');\r\n\r\n        return this;\r\n    });\r\n\r\n\r\n\r\n    /**\r\n     * Prefix operators are right associative.\r\n     * A prefix does not have a left binding power because it does not bind to the left.\r\n     * Prefix operators can also sometimes be reserved words.\r\n     *\r\n     */\r\n    ast.prefix('-');\r\n    ast.prefix('!');\r\n    ast.prefix('typeof');\r\n    ast.prefix('(', function () {\r\n        const e = ast.expression(0);\r\n        ast.advance(')');\r\n\r\n        return e;\r\n    });\r\n\r\n\r\n\r\n    /**\r\n     * Those infix operators are left associative.\r\n     * We can also make right associative operators, such as short-circuiting logical operators, by reducing the right binding power.\r\n     *\r\n     */\r\n    ast.infixr('&&', 30);\r\n    ast.infixr('||', 30);\r\n\r\n\r\n\r\n    /**\r\n     * value converter\r\n     *\r\n     */\r\n    ast.symbol('|').nud = function () {\r\n\r\n\r\n\r\n        this.arity = 'valueConverter';\r\n        const value = ast.expression(0);\r\n        this.value = value.value;\r\n        const a: any = [];\r\n        this.args = a;\r\n        while (true) {\r\n            if (ast.currentToken.id !== ':') {\r\n                break;\r\n            }\r\n            ast.advance(',');\r\n            a.push(ast.expression(0));\r\n        }\r\n\r\n\r\n        ast.currentStatement = this;\r\n\r\n        return this;\r\n\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * behavior, will most likely be a signal handler, since my ast isnt connected to binding context\r\n     *\r\n     */\r\n    ast.symbol('&').nud = function () {\r\n\r\n        this.arity = 'behavior';\r\n        const value = ast.expression(0);\r\n        this.value = value.value;\r\n        const a: any = [];\r\n        this.args = a;\r\n        while (true) {\r\n            if (ast.currentToken.id !== ':') {\r\n                break;\r\n            }\r\n            ast.advance(',');\r\n            a.push(ast.expression(0));\r\n        }\r\n\r\n        return this;\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * expressions/part before expression is split with ';' operator\r\n     *\r\n     */\r\n    ast.symbol(';').nud = function (): null {\r\n\r\n        return null;\r\n    };\r\n}\r\n","import { tokenize } from './tokenize';\r\nimport { generateAST } from './generateAst';\r\nimport { ClassPropertyObserverCreator } from './classPropertyObserverCreator';\r\nimport { Cache } from '../utils/index';\r\nimport { CONSTANTS } from '../interface/index';\r\n\r\nconst splitCache = {};\r\n\r\n\r\n/**\r\n * ...todo\r\n *\r\n */\r\nconst contextOfObject = function (value: any, ctx: any) {\r\n\r\n    let keys, key;\r\n    if (!splitCache[value]) {\r\n        keys = value.split(/\\.|\\[([^\\]]+)\\]\\.?/).filter((x: any) => x ? x : null);\r\n        key = keys[0];\r\n        splitCache[value] = key;\r\n    } else {\r\n        key = splitCache[value];\r\n    }\r\n\r\n\r\n    // more then 1, then its array\r\n    let newCtx = ctx;\r\n    let overrideCtx: any;\r\n    if (ctx.isMultiContext) {\r\n        newCtx = ctx.ctx;\r\n    }\r\n\r\n    if (typeof key === 'string' && key[0] !== '$') {\r\n        if (newCtx && newCtx.overrideContext) {\r\n            while (newCtx.overrideContext) {\r\n                newCtx = newCtx.overrideContext;\r\n                if (key in newCtx) {\r\n                    overrideCtx = newCtx;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return overrideCtx || ctx;\r\n};\r\n\r\n\r\n\r\n/**\r\n * creates binding expression by getting tokens from the text\r\n *\r\n */\r\nexport function createBindingExpression(text: string, _class: any, setterClass: any) {\r\n\r\n    let x: any;\r\n    let nodeText: any;\r\n    let attributes: any;\r\n    let ast: any;\r\n\r\n\r\n    if (text) {\r\n        // todo, clean up\r\n        // will I get memory leak here ?\r\n\r\n        nodeText = text;\r\n        // array to store attributes in\r\n        attributes = [];\r\n\r\n        if (Cache.expressionMapHas(nodeText)) {\r\n            x = Cache.expressionMapGet(nodeText);\r\n            attributes = (<any>x).attributes;\r\n            ast = (<any>x).ast;\r\n\r\n        } else {\r\n            // do text have ${} ? if so its a mix\r\n            // const isMix = nodeText.indexOf('${') !== -1 ? true : false;\r\n\r\n            const tokens: any = tokenize(nodeText);\r\n            ast = generateAST(tokens);\r\n\r\n            // for each token get the attribute on variables\r\n            tokens.forEach((tok: any) => {\r\n                if (tok.type === 'variable') {\r\n\r\n\r\n                    const newctx = contextOfObject(tok.value, _class);\r\n\r\n\r\n                    if (typeof tok.value === 'string'\r\n                        && tok.value[0] !== '$'\r\n                        && newctx\r\n                        && newctx.__proto__\r\n                        && newctx.__proto__[CONSTANTS.META_COMPUTEDFROM]\r\n                        && newctx.__proto__[CONSTANTS.META_COMPUTEDFROM][tok.value]) {\r\n                        const computedFrom = newctx.__proto__[CONSTANTS.META_COMPUTEDFROM];\r\n                        computedFrom[tok.value].attributes.forEach((val: any) => {\r\n                            if (attributes.indexOf(val) === -1) {\r\n                                attributes.push(val);\r\n                            }\r\n\r\n                        });\r\n                    } else {\r\n                        if (attributes.indexOf(tok.value) === -1) {\r\n                            attributes.push(tok.value);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            Cache.expressionMapSet(nodeText, {\r\n                attributes: attributes,\r\n                ast: ast\r\n            });\r\n        }\r\n\r\n        // set ast to setter\r\n        setterClass.setAst(ast);\r\n\r\n        // for each attribute found\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            const newctx = contextOfObject(attributes[i], _class);\r\n            ClassPropertyObserverCreator.create(newctx || _class, attributes[i], setterClass);\r\n        }\r\n\r\n        // initiate setter calss\r\n        setterClass.init();\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * ...todo\r\n *\r\n */\r\nexport function removeBindingExpression(text: string, _class: any, handlerClass: any) {\r\n    if (text) {\r\n        if (Cache.expressionMapHas(text)) {\r\n            const cachedExpression = Cache.expressionMapGet(text);\r\n            const attributes = (<any>cachedExpression).attributes;\r\n            for (let i = 0; i < attributes.length; i++) {\r\n                const newctx = contextOfObject(attributes[i], _class);\r\n                ClassPropertyObserverCreator.remove(newctx || _class, attributes[i], handlerClass);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { ClassPropertyObserver } from './classPropertyObserver';\r\n\r\n// helper class (its faster this way)\r\nconst emptyObject = class {\r\n    // nothing\r\n};\r\n\r\n// keep observer keys (todo, add to cache class)\r\nconst observerKeyMap = new Map();\r\n\r\n\r\n/*\r\n * creates a observer for property on class/object\r\n * classRef.__observer[this.keyBlock]\r\n *\r\n */\r\nexport class ClassPropertyObserverCreator {\r\n    // private static curClass: any;\r\n    private static classRef: any;\r\n    private static keyParts: any;\r\n    private static keyNo: any;\r\n    private static keyBlock: any;\r\n\r\n\r\n\r\n    /**\r\n     * create\r\n     *\r\n     */\r\n    public static create(_class: any, observerKey: string, caller: any) {\r\n\r\n        this.classRef = _class;\r\n\r\n        if (observerKeyMap.has(observerKey)) {\r\n            this.keyParts = observerKeyMap.get(observerKey);\r\n        } else {\r\n            this.keyParts = observerKey.split(/\\.|\\[([^\\]]+)\\]\\.?/).filter((x) => x ? x : null);\r\n            observerKeyMap.set(observerKey, this.keyParts);\r\n        }\r\n\r\n        this.keyNo = 0;\r\n        this.keyBlock = this.keyParts[this.keyNo];\r\n\r\n\r\n        ClassPropertyObserverCreator.processKeys(caller);\r\n        ClassPropertyObserverCreator.clear();\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * remove observer\r\n     *\r\n     */\r\n    public static remove(_class: any, observerKey: string, caller: any) {\r\n\r\n            this.classRef = _class;\r\n\r\n        if (observerKeyMap.has(observerKey)) {\r\n            this.keyParts = observerKeyMap.get(observerKey);\r\n        } else {\r\n            this.keyParts = observerKey.split(/\\.|\\[([^\\]]+)\\]\\.?/).filter((x) => x ? x : null);\r\n            observerKeyMap.set(observerKey, this.keyParts);\r\n        }\r\n\r\n        this.keyNo = 0;\r\n        this.keyBlock = this.keyParts[this.keyNo];\r\n\r\n\r\n        ClassPropertyObserverCreator.removeKeys(caller);\r\n        ClassPropertyObserverCreator.clear();\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * clear internal\r\n     *\r\n     */\r\n    private static clear() {\r\n        this.classRef = null;\r\n        this.keyParts = null;\r\n        this.keyNo = null;\r\n        this.keyBlock = null;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * set next key\r\n     *\r\n     */\r\n    private static nextKey() {\r\n        this.keyNo++;\r\n        this.keyBlock = this.keyParts[this.keyNo];\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * process key\r\n     *\r\n     */\r\n    private static processKeys(caller: any) {\r\n\r\n        // add \"__obeserver\" prop if it does not exist\r\n        if (!this.classRef.__observer) {\r\n            this.classRef.__observer = new emptyObject();\r\n        }\r\n\r\n        // create observer\r\n        if (!this.classRef.__observer[this.keyBlock]) {\r\n            this.classRef.__observer[this.keyBlock] = new ClassPropertyObserver(this.classRef, this.keyBlock);\r\n            this.classRef.__observer[this.keyBlock].subscribe(caller);\r\n        } else {\r\n            this.classRef.__observer[this.keyBlock].subscribe(caller);\r\n            this.classRef.__observer[this.keyBlock].observe();\r\n\r\n        }\r\n\r\n        // if not next\r\n        if (this.keyNo !== this.keyParts.length - 1 && this.keyParts.length > 1) {\r\n\r\n            if (this.classRef) {\r\n                this.classRef = this.classRef[this.keyBlock];\r\n            }\r\n\r\n            this.nextKey();\r\n            if (this.classRef) {\r\n                this.processKeys(caller);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * remove key\r\n     *\r\n     */\r\n    private static removeKeys(caller: any) {\r\n\r\n        // add \"__obeserver\" prop if it does not exist\r\n        // create observer\r\n        if (this.classRef.__observer[this.keyBlock]) {\r\n            this.classRef.__observer[this.keyBlock].unsubscribe(caller);\r\n        }\r\n\r\n\r\n        // if not next\r\n        if (this.keyNo !== this.keyParts.length - 1 && this.keyParts.length > 1) {\r\n\r\n            if (this.classRef) {\r\n                this.classRef = this.classRef[this.keyBlock];\r\n            }\r\n\r\n            this.nextKey();\r\n            if (this.classRef) {\r\n                this.removeKeys(caller);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nimport { PropertyObserverHandler } from './propertyObserverHandler';\r\n\r\nlet cc1: PropertyObserverHandler;\r\nlet cc2: PropertyObserverHandler;\r\nlet cc3: PropertyObserverHandler;\r\nlet cc4: PropertyObserverHandler;\r\nlet cc5: PropertyObserverHandler;\r\n\r\n\r\n\r\n/**\r\n * this handles changes on property by using defineProperty, other can then subscibe this to get calls when chnages occur\r\n *\r\n */\r\nexport class ClassPropertyObserver {\r\n    private _class: any;\r\n    private key: string;\r\n    private value: any;\r\n    private callers: PropertyObserverHandler[];\r\n    private c1: PropertyObserverHandler;\r\n    private c2: PropertyObserverHandler;\r\n    private c3: PropertyObserverHandler;\r\n    private c4: PropertyObserverHandler;\r\n    private c5: PropertyObserverHandler;\r\n    private setterBind: any;\r\n    private getterBind: any;\r\n\r\n\r\n    constructor(_class: any, key: string) {\r\n        this._class = _class;\r\n        this.key = key;\r\n        this.setterBind = this.setter.bind(this);\r\n        this.getterBind = this.getter.bind(this);\r\n\r\n        if (typeof this._class === 'object') {\r\n            this.value = this._class[this.key];\r\n            this.observe();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * unsubscribe\r\n     *\r\n     */\r\n    public unsubscribe(caller: PropertyObserverHandler) {\r\n        if (this.c1 === caller) {\r\n            this.c1 = null;\r\n        }\r\n        if (this.c2 === caller) {\r\n            this.c2 = null;\r\n        }\r\n        if (this.c3 === caller) {\r\n            this.c3 = null;\r\n        }\r\n        if (this.c4 === caller) {\r\n            this.c4 = null;\r\n        }\r\n        if (this.c5 === caller) {\r\n            this.c5 = null;\r\n        }\r\n\r\n        if (this.callers && this.callers.indexOf(caller) !== -1) {\r\n            this.callers.splice(this.callers.indexOf(caller), 1);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * subscribe\r\n     *\r\n     */\r\n    public subscribe(caller: PropertyObserverHandler) {\r\n        if (this.c1 !== caller && this.c2 !== caller && this.c3 !== caller && this.c4 !== caller && this.c5 !== caller) {\r\n            if (!this.c1) {\r\n                this.c1 = caller;\r\n            } else {\r\n                if (!this.c2) {\r\n                    this.c2 = caller;\r\n                } else {\r\n                    if (!this.c3) {\r\n                        this.c3 = caller;\r\n                    } else {\r\n                        if (!this.c4) {\r\n                            this.c4 = caller;\r\n                        } else {\r\n                            if (!this.c5) {\r\n                                this.c5 = caller;\r\n                            } else {\r\n                                if (!this.callers) {\r\n                                    this.callers = [];\r\n                                }\r\n                                if (this.callers.indexOf(caller) === -1) {\r\n                                    this.callers.push(caller);\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * observer\r\n     *\r\n     */\r\n    private observe() {\r\n\r\n        // check if property is on prototype have getter/setter, if se we skip it.\r\n        const descriptor = Reflect.getOwnPropertyDescriptor(this._class.__proto__, this.key);\r\n        let oldDescriptor = null;\r\n        if (descriptor) {\r\n            oldDescriptor = descriptor.get || descriptor.set;\r\n            if (oldDescriptor) {\r\n                console.log('skipping dirty observer - no-dirty  //todo remove this message');\r\n            }\r\n        }\r\n\r\n        if (oldDescriptor === null) {\r\n            if (!Reflect.defineProperty(this._class, this.key, {\r\n                configurable: true,\r\n                enumerable: true,\r\n                set: this.setterBind,\r\n                get: this.getterBind\r\n            })) {\r\n                console.warn('This key could not be observed:' + this.key);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * setter\r\n     *\r\n     */\r\n    private setter(newValue: any) {\r\n        if (newValue !== this.value) {\r\n            if (typeof newValue === 'object') {\r\n                if (newValue && newValue.__observer) {\r\n                    newValue.__observer = null;\r\n                }\r\n                if (newValue && newValue.__observerArray) {\r\n                    newValue.__observerArray = null;\r\n                }\r\n            }\r\n\r\n            this.value = newValue;\r\n\r\n            if (this.c1) {\r\n                cc1 = this.c1;\r\n                this.c1 = undefined;\r\n                cc1.update();\r\n            }\r\n\r\n            if (this.c2) {\r\n                cc2 = this.c2;\r\n                this.c2 = undefined;\r\n                cc2.update();\r\n            }\r\n\r\n            if (this.c3) {\r\n                cc3 = this.c3;\r\n                this.c3 = undefined;\r\n                cc3.update();\r\n            }\r\n\r\n            if (this.c4) {\r\n                cc4 = this.c4;\r\n                this.c4 = undefined;\r\n                cc4.update();\r\n            }\r\n\r\n            if (this.c5) {\r\n                cc5 = this.c5;\r\n                this.c5 = undefined;\r\n                cc5.update();\r\n            }\r\n\r\n            if (this.callers && this.callers.length > 0) {\r\n                const calls = this.callers.slice();\r\n                this.callers = [];\r\n                calls.forEach((call: any) => {\r\n                    call.update();\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * getter\r\n     *\r\n     */\r\n    private getter() {\r\n        return this.value;\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport { IElement } from './i_Element';\r\nexport { IAttribute } from './i_Attribute';\r\nexport { IControllerArray } from './i_ControllerArray';\r\nexport { IControllerObject } from './i_ControllerObject';\r\nexport { IRepeatCache } from './i_RepeatCache';\r\nexport { CONSTANTS } from './contants';\r\nexport { IListener } from './i_Listener';\r\nexport { ITokens } from './i_Tokens';\r\nexport { INode } from './i_Node';\r\n","import { Router } from '../utils/router';\r\nimport { ViewController } from '../view/viewController';\r\nimport { IControllerArray } from '../interface';\r\n\r\nexport interface IElement {\r\n\r\n    // DOM Element to the custom element\r\n    $element?: keyof ElementTagNameMap | any;\r\n\r\n\r\n    // DOM attributes on Element\r\n    $attributes?: NamedNodeMap;\r\n\r\n\r\n    // parent class\r\n    $parent?: IElement;\r\n\r\n\r\n    // view controller, will have more helper functions later.\r\n    $view?: ViewController;\r\n\r\n\r\n    // mandatory( one of them), need to return template\r\n    // all helper variables are set here\r\n    loadTemplate?(): string;\r\n    loadTemplateAsync?(): Promise<string>;\r\n\r\n    // when created, and $element etc is set\r\n    created?(templateNode?: Node): void;\r\n\r\n\r\n    // middleware, incase you want to mess with it\r\n    // important to return true/false\r\n    processContent?(templateNode?: Node): boolean;\r\n\r\n\r\n    // middleware, get controllers of content processed\r\n    // content are added to element, but attached is not called on any of them\r\n    contentProcessed?(controllers?: IControllerArray): void;\r\n\r\n\r\n    // when element node is attached to parent\r\n    // you want to add event listeners here\r\n    attached?(): void;\r\n\r\n\r\n    // when element node is about to be detached from parent\r\n    detached?(): void;\r\n\r\n\r\n\r\n    // only when element used as page in router\r\n    configureRouter?(config: any, router: Router): void;\r\n\r\n    // only when element used as page in router\r\n    // todo: should we return promise here ?\r\n    canDeactivate?(): boolean;\r\n\r\n    // only when element used as page in router\r\n    activated?(): void;\r\n}\r\n","import { IElement } from './i_Element';\r\n\r\nexport interface IAttribute {\r\n\r\n  // DOM Element to the custom attribute\r\n  $element?: keyof ElementTagNameMap | any;\r\n\r\n\r\n  // DOM attributes on Element\r\n  $attribute?: Attr;\r\n\r\n\r\n  // parent class\r\n  $parent?: IElement;\r\n\r\n  // when created, and $element etc is set\r\n  created?(): void;\r\n\r\n\r\n  // when its element is attached to parent node\r\n  attached?(): void;\r\n\r\n\r\n  // when its element is detached from parent node\r\n  detached?(): void;\r\n\r\n  // typical event handler for behavior\r\n  eventHandlerBinded?(): void;\r\n}\r\n\r\n\r\n","import { AttributeController } from '../view/index';\r\nimport { InterpolateController } from '../view/index';\r\nimport { ElementController } from '../view/index';\r\n\r\n\r\n\r\nexport interface IControllerArray extends Array<AttributeController | InterpolateController | ElementController> { }\r\n","import { AttributeController } from '../view/attributeController';\r\nimport { InterpolateController } from '../view/interpolateController';\r\nimport { ElementController } from '../view/elementController';\r\n\r\n\r\nexport interface IControllerObject {\r\n    [index: string]: AttributeController | InterpolateController | ElementController;\r\n}\r\n","\r\nexport interface IRepeatCache {\r\n    no: number;\r\n    type: string;\r\n    attributeCount: number;\r\n    set: any;\r\n    last?: number;\r\n}\r\n","\r\n\r\nexport enum CONSTANTS {\r\n    META_BINDABLE = '__meta_bindable' as any,\r\n    META_COMPUTEDFROM = '__meta_computed_from' as any,\r\n    ELEMENT_DETACH = '__MF__detach' as any,\r\n    ELEMENT_BINDED = '__MF__binded' as any,\r\n    ELEMENT_ADD = '__MF__add' as any\r\n}\r\n","import { ArrayObserverHandler } from '../binding/arrayObserverHandler';\r\nimport { PropertyObserverHandler } from '../binding/propertyObserverHandler';\r\n\r\nexport interface IListener {\r\n    call: Function;\r\n    caller: ArrayObserverHandler | PropertyObserverHandler;\r\n}\r\n","export interface ITokens {\r\n    funArg?: boolean;\r\n    type: string;\r\n    value: string;\r\n}\r\n","import { ViewController } from '../view/index';\r\n\r\n\r\nexport interface INode extends Node {\r\n    $view?: ViewController;\r\n}\r\n","\r\nconst splitCache = {};\r\n\r\nconst contextOfObject = function (value: any, ctx: any) {\r\n\r\n    let keys, key;\r\n    if (!splitCache[value]) {\r\n        keys = value.split(/\\.|\\[([^\\]]+)\\]\\.?/).filter((x: any) => x ? x : null);\r\n        key = keys[0];\r\n        splitCache[value] = key;\r\n    } else {\r\n        key = splitCache[value];\r\n    }\r\n\r\n\r\n    // more then 1, then its array\r\n    let newCtx = ctx;\r\n    let overrideCtx: any;\r\n    if (ctx.isMultiContext) {\r\n        newCtx = ctx.ctx;\r\n    }\r\n\r\n    if (typeof key === 'string' && key[0] !== '$') {\r\n        if (newCtx && newCtx.overrideContext) {\r\n            while (newCtx.overrideContext) {\r\n                newCtx = newCtx.overrideContext;\r\n                if (key in newCtx) {\r\n                    overrideCtx = newCtx;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return overrideCtx || ctx;\r\n};\r\n\r\n/**\r\n  * simple function for setting value with token key\r\n  *\r\n  */\r\nexport function setValue(_class: Object, key: string, value: any) {\r\n\r\n    _class = contextOfObject(key, _class);\r\n\r\n    // types\r\n    const keys = key.split(/\\.|\\[([^\\]]+)\\]\\.?/).filter((x: any) => x ? x : null);\r\n    try {\r\n        let ref: any;\r\n        // more then 1, then its array\r\n        if (keys.length > 1) {\r\n            keys.forEach((prop: any, i: number) => {\r\n                if (prop) {\r\n                    if (i === keys.length - 1) {\r\n                        ref[prop] = value;\r\n                    } else {\r\n                        if (i === 0) {\r\n                            ref = _class[prop];\r\n                        } else {\r\n                            ref = ref[prop];\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            _class[key] = value;\r\n        }\r\n    } catch (e) {\r\n\r\n        // if key is not found, we will try and build it\r\n\r\n        // first we make a object to what we want to build\r\n        try {\r\n            console.warn('key not found, rebuilding', key);\r\n            let newObject = {};\r\n            let ref: any;\r\n            keys.forEach((prop: any, i: number) => {\r\n                if (prop) {\r\n                    if (i === keys.length - 1) {\r\n                        if (i === 0) {\r\n                            newObject[prop] = {};\r\n                            ref = newObject[prop];\r\n                        } else {\r\n                            ref[prop] = value;\r\n                        }\r\n                    } else {\r\n                        if (i === 0) {\r\n                            newObject[prop] = {};\r\n                            ref = newObject[prop];\r\n                        } else {\r\n                            ref[prop] = {};\r\n                            ref = ref[prop];\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            // not we add it to class\r\n\r\n            // let refx = newObject;\r\n            let classRef = _class;\r\n            keys.forEach((prop: any, i: number) => {\r\n                if (prop) {\r\n                    if (i === keys.length - 1) {\r\n                        if (!classRef[prop]) {\r\n                            classRef[prop] = newObject[prop];\r\n                        }\r\n                    } else {\r\n                        if (i === 0) {\r\n                            if (!classRef[prop]) {\r\n                                classRef[prop] = newObject[prop];\r\n                            }\r\n                            newObject = newObject[prop];\r\n                            classRef = classRef[prop];\r\n                        } else {\r\n                            if (!classRef[prop]) {\r\n                                classRef[prop] = newObject[prop];\r\n                            }\r\n                            newObject = newObject[prop];\r\n                            classRef = classRef[prop];\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        } catch (e) {\r\n            console.error('key not found', key);\r\n        }\r\n    }\r\n}\r\n","\r\nimport { PropertyObserverHandler } from './propertyObserverHandler';\r\nimport { IListener } from '../interface/index';\r\n\r\n/**\r\n * subscribe to key on class\r\n *\r\n */\r\nexport function subscribeClassProperty(_class: any, key: string, listener: IListener) {\r\n\r\n    const observerHandler = new PropertyObserverHandler(key, listener);\r\n    observerHandler.bind(_class);\r\n    listener.caller = observerHandler;\r\n}\r\n\r\n","import { traverseAST, getBehavior } from './traverseAst';\r\nimport { createBindingExpression, removeBindingExpression } from './createBindingExpression';\r\nimport { IListener } from '../interface/index';\r\nimport { Queue } from '../utils/index';\r\nimport { ContainerClasses, ContainerBehavior } from '../container/index';\r\n\r\n\r\n\r\n/**\r\n * Register/creates a property observer with expression\r\n * It be called on changes to value of expression\r\n *\r\n */\r\nexport class PropertyObserverHandler {\r\n    private expression: string;\r\n    private ast: any;\r\n    private context: Object;\r\n    private observing: boolean;\r\n    private listener: IListener;\r\n    private value: any = undefined;\r\n    private oldValue: any = undefined;\r\n    private newValue: any = undefined;\r\n    private isWaiting = false;\r\n    private isNew = true;\r\n    private queue: Queue;\r\n    public curBehavior: any;\r\n\r\n\r\n    constructor(expression: string, listener: IListener) {\r\n        this.expression = expression;\r\n        this.listener = listener;\r\n        this.queue = ContainerClasses.get(Queue);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * binds observer handler to passed in context\r\n     *\r\n     */\r\n    public bind(context: Object) {\r\n        this.observing = true;\r\n        this.context = context;\r\n        createBindingExpression(this.expression, this.context, this);\r\n    }\r\n\r\n\r\n    /**\r\n     * gets new AST \"createNewBindingExpression\"\r\n     *\r\n     */\r\n    public setAst(ast: Object) {\r\n\r\n        this.ast = ast;\r\n        if (!this.curBehavior) {\r\n            this.connectBehavior();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Sets init value\r\n     *\r\n     */\r\n    public init() {\r\n        if (this.isNew) {\r\n            this.isNew = false;\r\n            const oldValue = this.value;\r\n            const newValue = traverseAST(this.ast, this.context);\r\n            this.value = newValue;\r\n            this.listenerCall(newValue, oldValue);\r\n            this.isNew = false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * connectBehavior\r\n     * only used for signal\r\n     *\r\n     */\r\n    public connectBehavior() {\r\n        const behaviors = getBehavior(this.ast);\r\n        if (behaviors) {\r\n            behaviors.forEach((behavior: { name: string, args: any[] }) => {\r\n                if (name === 'signal') { // todo: open for more later ?\r\n                    const x = ContainerBehavior.findBehavior(behavior.name);\r\n                    if (x) {\r\n                        this.curBehavior = new x(this, behavior.args);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Gets called by observer, it then calls the listener\r\n     *\r\n     */\r\n    public update() {\r\n        if (this.observing) {\r\n            this.oldValue = this.value;\r\n            this.newValue = traverseAST(this.ast, this.context);\r\n            if (this.oldValue !== this.newValue) {\r\n                this.value = this.newValue;\r\n                if (!this.isWaiting) {\r\n                    this.isWaiting = true;\r\n                    // queue this, so we give browser time to breath\r\n                    this.queue.add(this);\r\n                }\r\n            } else {\r\n                this.oldValue = null;\r\n                this.newValue = null;\r\n            }\r\n            // do not need to unbind, since all binding get thrown after its been called\r\n            this.bind(this.context);\r\n        }\r\n    }\r\n\r\n    public listenerCall(newValue: any, oldValue: any) {\r\n        if (this.listener) {\r\n            this.listener.call(newValue, oldValue);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets called by queue, then it calls subscriber\r\n     *\r\n     */\r\n    public call(done: Function) {\r\n\r\n        const newValue = this.newValue;\r\n        const oldValue = this.oldValue;\r\n        this.oldValue = null;\r\n        this.newValue = null;\r\n        this.listenerCall(newValue, oldValue);\r\n        this.isWaiting = false;\r\n        done();\r\n    }\r\n\r\n    /**\r\n     * Unbinds and clears all internals\r\n     *\r\n     */\r\n    public unbind() {\r\n\r\n        if (this.observing) {\r\n            removeBindingExpression(this.expression, this.context, this);\r\n        }\r\n\r\n        // remove this from caller\r\n        this.listener.caller = null;\r\n\r\n        // remove rest of internals\r\n        // todo: Do I need to do this, Im I making grabage collection worse?\r\n        this.observing = false;\r\n        this.context = null;\r\n        this.listener = null;\r\n        this.value = null;\r\n    }\r\n\r\n}\r\n","/*\r\n * unsubscribe class property binding\r\n *\r\n */\r\nexport function unSubscribeClassProperty(_class: any, handlerClass: any) {\r\n    if (handlerClass.caller) {\r\n        handlerClass.caller.unbind();\r\n    }\r\n}\r\n\r\n","import { traverseAST } from './traverseAst';\r\nimport { tokenize } from './tokenize';\r\nimport { generateAST } from './generateAst';\r\nimport { Cache } from '../utils/index';\r\n\r\n/**\r\n* creates binding expression by getting tokens from the text\r\n*\r\n*/\r\nexport function evaluateExpression(text: string, _class: any) {\r\n    if (text) {\r\n        let ast: any;\r\n        if (Cache.astMapHas(text)) {\r\n            ast = Cache.astMapGet(text);\r\n        } else {\r\n            const tokens = tokenize(text);\r\n            ast = generateAST(tokens);\r\n            Cache.astMapSet(text, ast);\r\n        }\r\n\r\n        return traverseAST(ast, _class);\r\n    } else {\r\n        return '';\r\n    }\r\n}\r\n","import { ArrayObserverHandler } from './arrayObserverHandler';\r\nimport { IListener } from '../interface/index';\r\n\r\n\r\n/**\r\n * subscribe to array on class\r\n * this is changes like push, splice, pop etc etc\r\n *\r\n */\r\nexport function subscribeClassArray(_class: Object, key: string, listener: IListener) {\r\n    const observerHandler = new ArrayObserverHandler(key, listener);\r\n    observerHandler.bind(_class);\r\n    listener.caller = observerHandler;\r\n}\r\n","import { ClassArrayObserverCreator } from './classArrayObserverCreator';\r\nimport { IListener } from '../interface/index';\r\nimport { Queue } from '../utils/index';\r\nimport { ContainerClasses } from '../container/index';\r\n\r\n\r\n/**\r\n * Register/creates a array observer with expression\r\n * It be called on changes and then calls listener\r\n *\r\n */\r\nexport class ArrayObserverHandler {\r\n    private expression: string;\r\n    private context: any;\r\n    private observing: boolean;\r\n    private listener: IListener;\r\n    private isWaiting = false;\r\n    private data: any = undefined;\r\n    private queue: Queue;\r\n\r\n\r\n    constructor(expression: string, listener: IListener) {\r\n        this.expression = expression;\r\n        this.listener = listener;\r\n        this.isWaiting = null;\r\n        this.queue = ContainerClasses.get(Queue);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * binds observer handler to passed in context\r\n     *\r\n     */\r\n    public bind(context: Object) {\r\n        this.observing = true;\r\n        this.context = context;\r\n        ClassArrayObserverCreator.create(this.context, this.expression, this);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Gets called by observer, it then calls the listener\r\n     *\r\n     */\r\n    public update(data: any) {\r\n        this.data = data;\r\n        if (this.observing) {\r\n            if (!this.isWaiting) {\r\n                this.isWaiting = true;\r\n                // queue this, so we give browser time to breath\r\n                this.queue.add(this);\r\n             }\r\n            // always rebind, since context might have change/array have been replaced\r\n            this.bind(this.context);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Gets called by queue, then it calls subscriber\r\n     *\r\n     */\r\n    public call(done: Function) {\r\n          const data = this.data;\r\n        this.data = null;\r\n        if (this.listener) {\r\n            this.listener.call(data);\r\n        }\r\n        this.isWaiting = false;\r\n        done();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Unbinds and clears all internals\r\n     *\r\n     */\r\n    public unbind() {\r\n\r\n        // if observing remove observer\r\n        if (this.observing) {\r\n            ClassArrayObserverCreator.remove(this.context, this.expression, this);\r\n        }\r\n\r\n        // remove this from caller\r\n        this.listener.caller = null;\r\n\r\n        // remove rest of internals\r\n        // todo: Do I need to do this, Im I making grabage collection worse?\r\n        this.listener = null;\r\n        this.observing = false;\r\n        this.context = null;\r\n        this.data = null;\r\n        this.expression = null;\r\n    }\r\n\r\n}\r\n","import { ClassArrayObserver } from './classArrayObserver';\r\n\r\n\r\n// helper class (its faster this way)\r\nconst emptyObject = class {\r\n    // nothing\r\n};\r\n\r\n// keep observer keys (todo, add to cache class)\r\nconst observerKeyMap = {};\r\n\r\n\r\n/*\r\n * creates a observer for array on class/object\r\n * classRef.__observerArray[this.keyBlock]\r\n *\r\n */\r\nexport class ClassArrayObserverCreator {\r\n    private static classRef: any;\r\n    private static keyParts: any;\r\n    private static keyNo: any;\r\n    private static keyBlock: any;\r\n\r\n\r\n\r\n   /**\r\n     * create\r\n     *\r\n     */\r\n    public static create(_class: any, observerKey: string, caller: any) {\r\n\r\n        this.classRef = _class;\r\n\r\n        if (observerKeyMap[observerKey]) {\r\n            this.keyParts = observerKeyMap[observerKey];\r\n        } else {\r\n            this.keyParts = observerKey.split(/\\.|\\[([^\\]]+)\\]\\.?/).filter((x) => x ? x : null);\r\n            observerKeyMap[observerKey] = this.keyParts;\r\n        }\r\n\r\n        this.keyNo = 0;\r\n        this.keyBlock = this.keyParts[this.keyNo];\r\n\r\n        ClassArrayObserverCreator.processKeys(caller);\r\n        ClassArrayObserverCreator.clear();\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * removes the observer\r\n     *\r\n     */\r\n    public static remove(_class: any, observerKey: string, caller: any) {\r\n\r\n        this.classRef = _class;\r\n\r\n        if (observerKeyMap[observerKey]) {\r\n            this.keyParts = observerKeyMap[observerKey];\r\n        } else {\r\n            this.keyParts = observerKey.split(/\\.|\\[([^\\]]+)\\]\\.?/).filter((x) => x ? x : null);\r\n            observerKeyMap[observerKey] = this.keyParts;\r\n        }\r\n\r\n        this.keyNo = 0;\r\n        this.keyBlock = this.keyParts[this.keyNo];\r\n\r\n        ClassArrayObserverCreator.removeKeys(caller);\r\n        ClassArrayObserverCreator.clear();\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * clear class\r\n     *\r\n     */\r\n    private static clear() {\r\n        this.classRef = null;\r\n        this.keyParts = null;\r\n        this.keyNo = null;\r\n        this.keyBlock = null;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * sets next key\r\n     *\r\n     */\r\n    private static nextKey() {\r\n        this.keyNo++;\r\n        this.keyBlock = this.keyParts[this.keyNo];\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * added oberserver properties to object/class\r\n     *\r\n     */\r\n    private static processKeys(caller: any) {\r\n\r\n        // add \"__obeserver\" prop if it does not exist\r\n        if (!this.classRef.__observerArray) {\r\n            this.classRef.__observerArray = new emptyObject();\r\n        }\r\n\r\n        // create observer\r\n        if (!this.classRef.__observerArray[this.keyBlock]) {\r\n            this.classRef.__observerArray[this.keyBlock] = new ClassArrayObserver(this.classRef, this.keyBlock);\r\n            this.classRef.__observerArray[this.keyBlock].subscribe(caller);\r\n        } else {\r\n            this.classRef.__observerArray[this.keyBlock].subscribe(caller);\r\n            this.classRef.__observerArray[this.keyBlock].observe();\r\n        }\r\n\r\n        // if not next\r\n        if (this.keyNo !== this.keyParts.length - 1 && this.keyParts.length > 1) {\r\n\r\n            if (this.classRef) {\r\n                this.classRef = this.classRef[this.keyBlock];\r\n            }\r\n\r\n            this.nextKey();\r\n            if (this.classRef) {\r\n                this.processKeys(caller);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * removes the caller\r\n     *\r\n     */\r\n    private static removeKeys(caller: any) {\r\n\r\n        // add \"__obeserver\" prop if it does not exist\r\n        // create observer\r\n        if (this.classRef.__observerArray) {\r\n            if (this.classRef.__observerArray[this.keyBlock]) {\r\n                this.classRef.__observerArray[this.keyBlock].unsubscribe(caller);\r\n            }\r\n        }\r\n\r\n\r\n        // if not next\r\n        if (this.keyNo !== this.keyParts.length - 1 && this.keyParts.length > 1) {\r\n\r\n            if (this.classRef) {\r\n                this.classRef = this.classRef[this.keyBlock];\r\n            }\r\n\r\n            this.nextKey();\r\n            if (this.classRef) {\r\n                this.removeKeys(caller);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { ArrayObserverHandler } from './arrayObserverHandler';\r\n\r\n\r\nlet cc1: ArrayObserverHandler;\r\nlet cc2: ArrayObserverHandler;\r\nlet cc3: ArrayObserverHandler;\r\nlet cc4: ArrayObserverHandler;\r\nlet cc5: ArrayObserverHandler;\r\n\r\n\r\n// use prototype\r\n// by doing this instead of object define I only do it once for all arrays\r\nconst events = ['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift', 'sort'];\r\nevents.forEach((eventX) => {\r\n    const eventType = Array.prototype[eventX];\r\n    Array.prototype[eventX] = function () {\r\n        const result = eventType.apply(this, arguments);\r\n        if (this.__array_observer__class) {\r\n            this.__array_observer__class.check(arguments, eventX);\r\n        }\r\n\r\n        return result;\r\n    };\r\n});\r\n\r\n\r\n/**\r\n * this is used to set observer on a array on a class/object\r\n *\r\n */\r\nexport class ClassArrayObserver {\r\n    private _class: any;\r\n    private key: string;\r\n    private callers: ArrayObserverHandler[];\r\n    private c1: ArrayObserverHandler;\r\n    private c2: ArrayObserverHandler;\r\n    private c3: ArrayObserverHandler;\r\n    private c4: ArrayObserverHandler;\r\n    private c5: ArrayObserverHandler;\r\n    private internalEvents: any[] = [];\r\n    private timer: any = null;\r\n\r\n\r\n    constructor(_class: any, key: string) {\r\n        this._class = _class;\r\n        this.key = key;\r\n\r\n        if (typeof this._class === 'object') {\r\n            this.observe();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * subscribe\r\n     *\r\n     */\r\n    public subscribe(caller: ArrayObserverHandler) {\r\n        if (this.c1 !== caller && this.c2 !== caller && this.c3 !== caller && this.c4 !== caller && this.c5 !== caller) {\r\n            if (!this.c1) {\r\n                this.c1 = caller;\r\n            } else {\r\n                if (!this.c2) {\r\n                    this.c2 = caller;\r\n                } else {\r\n                    if (!this.c3) {\r\n                        this.c3 = caller;\r\n                    } else {\r\n                        if (!this.c4) {\r\n                            this.c4 = caller;\r\n                        } else {\r\n                            if (!this.c5) {\r\n                                this.c5 = caller;\r\n                            } else {\r\n                                if (!this.callers) {\r\n                                    this.callers = [];\r\n                                }\r\n                                if (this.callers.indexOf(caller) === -1) {\r\n                                    this.callers.push(caller);\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * unsubscribe\r\n     *\r\n     */\r\n    public unsubscribe(caller: ArrayObserverHandler) {\r\n        if (this.c1 === caller) {\r\n            this.c1 = null;\r\n        }\r\n        if (this.c2 === caller) {\r\n            this.c2 = null;\r\n        }\r\n        if (this.c3 === caller) {\r\n            this.c3 = null;\r\n        }\r\n        if (this.c4 === caller) {\r\n            this.c4 = null;\r\n        }\r\n        if (this.c5 === caller) {\r\n            this.c5 = null;\r\n        }\r\n\r\n        if (this.callers && this.callers.indexOf(caller) !== -1) {\r\n            this.callers.splice(this.callers.indexOf(caller), 1);\r\n        }\r\n    }\r\n\r\n\r\n    public check(args: any, event: any) {\r\n        clearTimeout(this.timer);\r\n        this.timer = 0;\r\n\r\n\r\n\r\n        // push event\r\n        this.internalEvents.push({\r\n            event: event,\r\n            args: args\r\n        });\r\n\r\n        this.timer = setTimeout(() => {\r\n            if (this.c1) {\r\n                cc1 = this.c1;\r\n                this.c1 = undefined;\r\n                cc1.update(this.internalEvents);\r\n            }\r\n\r\n            if (this.c2) {\r\n                cc2 = this.c2;\r\n                this.c2 = undefined;\r\n                cc2.update(this.internalEvents);\r\n            }\r\n\r\n            if (this.c3) {\r\n                cc3 = this.c3;\r\n                this.c3 = undefined;\r\n                cc3.update(this.internalEvents);\r\n            }\r\n\r\n            if (this.c4) {\r\n                cc4 = this.c4;\r\n                this.c4 = undefined;\r\n                cc4.update(this.internalEvents);\r\n            }\r\n\r\n            if (this.c5) {\r\n                cc5 = this.c5;\r\n                this.c5 = undefined;\r\n                cc5.update(this.internalEvents);\r\n            }\r\n\r\n            if (this.callers && this.callers.length > 0) {\r\n                const calls = this.callers.slice();\r\n                this.callers = [];\r\n                calls.forEach((call: any) => {\r\n                    call.update(this.internalEvents);\r\n                });\r\n            }\r\n            this.internalEvents = null;\r\n            this.internalEvents = [];\r\n        }, 0);\r\n    }\r\n\r\n    /**\r\n     * observe\r\n     *\r\n     */\r\n    private observe() {\r\n\r\n        this._class[this.key].__array_observer__class = this;\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","/**\r\n * unsubscribe array listener\r\n *\r\n */\r\nexport function unSubscribeClassArray(_class: any, handlerClass: any) {\r\n    if (handlerClass.caller) {\r\n        handlerClass.caller.unbind();\r\n    }\r\n\r\n}\r\n","import { CONSTANTS } from '../interface/index';\r\nimport { unSubscribeClassProperty } from './unSubscribeClassProperty';\r\n\r\n\r\n/**\r\n * unsubscribe class observables/meta binding\r\n *\r\n */\r\nexport function unSubscribeClassMetaBinding(_class: any) {\r\n    const META = _class.__proto__[CONSTANTS.META_BINDABLE];\r\n    if (META) {\r\n        const keys = Object.keys(META);\r\n        for (const key of keys) {\r\n\r\n            // save key\r\n            const subscribeInternal = META[key].options.subscribeInternal;\r\n\r\n            // if it exist unsubscribe\r\n            if (subscribeInternal) {\r\n                unSubscribeClassProperty(_class, subscribeInternal);\r\n\r\n            }\r\n\r\n            // get old\r\n            const subscribeExternal = META[key].options.subscribeExternal;\r\n\r\n            // if it exist unsubscribe\r\n            if (_class.$parent && subscribeExternal) {\r\n                if (_class.$element) {\r\n                    const el = _class.$element;\r\n                    const att = `${META[key].options.attribute}.bind`;\r\n                    const attrValue = el.getAttribute(att);\r\n                    if (attrValue) {\r\n                        unSubscribeClassProperty(_class.$parent, subscribeExternal);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n","import { subscribeClassProperty } from './subscribeClassProperty';\r\nimport { PropertyObserverHandler } from './propertyObserverHandler';\r\nimport { BindingEngine } from './bindingEngine';\r\nimport {\r\n    IAttribute,\r\n    CONSTANTS,\r\n    IElement,\r\n    IListener\r\n} from '../interface';\r\n\r\n\r\n\r\n/**\r\n  * callbacks changes in class if chnage method is added\r\n  *\r\n  */\r\nconst subscribeChangeBaseClass = class implements IListener {\r\n    private key: string;\r\n    private _class: IElement | IAttribute;\r\n    private meta: any;\r\n    public caller: PropertyObserverHandler;\r\n\r\n    constructor(_class: IElement | IAttribute, key: string, meta: any) {\r\n        this._class = _class;\r\n        this.key = key;\r\n        this.meta = meta;\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * called on changes\r\n     *\r\n     */\r\n    public call(newValue: any, oldValue: any) {\r\n        if (oldValue !== newValue) {\r\n            const key = this.key;\r\n            const _class = this._class;\r\n            const META = this.meta;\r\n\r\n            if (_class[`${key}Changed`]) {\r\n                _class[`${key}Changed`](newValue, oldValue);\r\n            }\r\n            if (META[key].options.changeHandler) {\r\n                _class[META[key].options.changeHandler]('key', newValue, oldValue);\r\n            }\r\n            if (_class.$parent && key in _class.$parent) {\r\n                if (_class.$parent[key] !== newValue) {\r\n                    _class.$parent[key] = newValue;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**\r\n  * creates a observer if bindable meta data is added\r\n  *\r\n  */\r\nexport function subscribeClassMetaBinding(_class: IElement | IAttribute) {\r\n    const META = (_class as any).__proto__[CONSTANTS.META_BINDABLE];\r\n    if (META) {\r\n        const keys = Object.keys(META);\r\n        for (const key of keys) {\r\n\r\n            const subscribeInternal = new subscribeChangeBaseClass(_class, key, META);\r\n            subscribeClassProperty(_class, key, subscribeInternal);\r\n\r\n            // save it for later so we can unsubscribe\r\n            META[key].options.subscribeInternal = subscribeInternal;\r\n\r\n            if (META[key].observableOnly === true) {\r\n                // todo... do I even want to do anything ?\r\n            } else {\r\n\r\n                if ((_class as IElement).$attributes && !(_class as IAttribute).$attribute) {\r\n\r\n                    // custom element\r\n                    // we now check for if attribute have bind, else we just give the value\r\n\r\n                    if (_class.$element && _class.$parent) {\r\n                        // need to make sure there is parent and element\r\n\r\n                        const el = _class.$element;\r\n                        let att = `${META[key].options.attribute}.bind`;\r\n                        let attrValue = el.getAttribute(att);\r\n                        if (attrValue) {\r\n\r\n                            const subscribeExternal: IListener = Object.create({\r\n                                call: (newValue: any, oldValue: any) => {\r\n                                    if (oldValue !== newValue) {\r\n                                        _class[key] = newValue;\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                            subscribeClassProperty(_class.$parent, attrValue, subscribeExternal);\r\n\r\n                            // save it for later so we can unsubscribe\r\n                            META[key].options.subscribeExternal = subscribeExternal;\r\n\r\n                        } else {\r\n\r\n                            // just set value, no bind\r\n                            att = `${META[key].options.attribute}`;\r\n                            attrValue = el.getAttribute(att);\r\n                            if (attrValue) {\r\n                                if (attrValue.indexOf('${') !== -1) {\r\n                                    const val = BindingEngine.tokenizeParseAndTraverseAST(attrValue, _class.$parent);\r\n                                    if (val) {\r\n                                        _class[key] = val;\r\n                                    }\r\n                                } else {\r\n                                    _class[key] = attrValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n\r\n                    // custom attribute\r\n                    // - > need to extract values, they can be many in 1\r\n\r\n                    if (_class.$element && _class.$parent) {\r\n\r\n                        // many or 1 check, if just value we only want that\r\n                        if (keys.length === 1 && key === 'value') {\r\n\r\n                            // only 1 key and its value, then we only use this\r\n                            const el = _class.$element;\r\n                            const att = (_class as IAttribute).$attribute.name;\r\n                            const haveBind = att.indexOf('.bind');\r\n                            let attrValue = el.getAttribute(att);\r\n\r\n                            if (haveBind !== -1) {\r\n                                // binding\r\n\r\n                                const subscribeExternal: IListener = Object.create({\r\n                                    call: (newValue: any, oldValue: any) => {\r\n                                        if (oldValue !== newValue) {\r\n                                            _class[key] = newValue;\r\n                                        }\r\n                                    }\r\n                                });\r\n\r\n                                subscribeClassProperty(_class.$parent, attrValue, subscribeExternal);\r\n\r\n                                // save it for later so we can unsubscribe\r\n                                META[key].options.subscribeExternal = subscribeExternal;\r\n                            } else {\r\n\r\n                                // no bind, just get value\r\n                                attrValue = el.getAttribute(att);\r\n                                if (attrValue) {\r\n                                    if (attrValue.indexOf('${') !== -1) {\r\n                                        const val = BindingEngine.tokenizeParseAndTraverseAST(attrValue, _class.$parent);\r\n                                        if (val) {\r\n                                            _class[key] = val;\r\n                                        }\r\n                                    } else {\r\n                                        _class[key] = attrValue;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        } else {\r\n\r\n\r\n                            // not just value and 1 @bindable\r\n\r\n                            const el = _class.$element;\r\n                            const attributeName = (_class as IAttribute).$attribute.name;\r\n                            let att = `${META[key].options.attribute}.bind`;\r\n                            const attrValues: any[] = el.getAttribute(attributeName) ? el.getAttribute(attributeName).split(';') : null;\r\n\r\n                            // do we have many values inside?\r\n                            if (attrValues) {\r\n\r\n                                // yes, lets get them and check for key/att\r\n                                // atm checking for .bind\r\n                                let attrValue: string;\r\n                                attrValues.forEach((value: any) => {\r\n                                    const test = value.split(':');\r\n                                    if (test && test[0].trim() === att) {\r\n                                        attrValue = test[1];\r\n                                    }\r\n                                });\r\n\r\n\r\n                                if (attrValue) {\r\n\r\n                                    const subscribeExternal: IListener = Object.create({\r\n                                        call: (newValue: any, oldValue: any) => {\r\n                                            if (oldValue !== newValue) {\r\n                                                _class[key] = newValue;\r\n                                            }\r\n                                        }\r\n                                    });\r\n\r\n                                    subscribeClassProperty(_class.$parent, attrValue, subscribeExternal);\r\n\r\n                                    // save it for later so we can unsubscribe\r\n                                    META[key].options.subscribeExternal = subscribeExternal;\r\n\r\n                                } else {\r\n\r\n                                    // no .bind\r\n                                    // just set value if it is there\r\n                                    att = `${META[key].options.attribute}`;\r\n                                    let attrValue: string;\r\n                                    attrValues.forEach((value: any) => {\r\n                                        const test = value.split(':');\r\n                                        if (test && test[0].trim() === att) {\r\n                                            attrValue = test[1];\r\n                                        }\r\n                                    });\r\n\r\n                                    if (attrValue) {\r\n                                        if (attrValue.indexOf('${') !== -1) {\r\n                                            const val = BindingEngine.tokenizeParseAndTraverseAST(attrValue, _class.$parent);\r\n                                            if (val) {\r\n                                                _class[key] = val;\r\n                                            }\r\n                                        } else {\r\n                                            _class[key] = attrValue;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n","import { IElement, IControllerArray, INode } from '../interface/index';\r\nimport { ViewParser } from './viewParse';\r\nimport { ViewController } from './viewController';\r\nimport { ContainerClasses } from '../container/index';\r\nimport { BindingEngine } from '../binding/index';\r\nimport { Logger, Router } from '../utils/index';\r\n\r\n/**\r\n * Element controller adds view and controls the lifecycle of element\r\n *\r\n */\r\nexport class ElementController {\r\n    private element: INode;\r\n    private _class: IElement;\r\n    private parent: IElement;\r\n    private templateString: string;\r\n    private template: INode;\r\n    private _process = true;\r\n    private logger: Logger;\r\n\r\n\r\n    constructor(parent: IElement, element: INode, _class: IElement, elementRef: any, templateString: string) {\r\n        this.logger = Logger.getLogger((element as any).tagName, 'element');\r\n        this.parent = parent;\r\n        this.element = element;\r\n        this.templateString = templateString;\r\n        this._class = _class || ContainerClasses.get(elementRef);\r\n        if (element && !element.$view) {\r\n            // every element is a controller in it self, so create a new view\r\n            element.$view = new ViewController(element);\r\n            element.$view.addElement(this);\r\n        } else {\r\n            // debugger; // should not happen\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * start element life cycle\r\n     *\r\n     */\r\n    public init(): IControllerArray {\r\n\r\n\r\n        this._class.$element = this.element;\r\n        this._class.$parent = this.parent;\r\n        this._class.$attributes = this.element.attributes;\r\n\r\n        // subscribe meta binding\r\n        BindingEngine.subscribeClassMetaBinding(this._class);\r\n        let arr: IControllerArray = [];\r\n\r\n        if (this._class.loadTemplateAsync) {\r\n            this._class.loadTemplateAsync().then((template: string) => {\r\n\r\n                // if async template\r\n\r\n                this.templateString = this.templateString || template;\r\n                this.template = ViewParser.createTemplate(null, this.templateString);\r\n\r\n                // router ?\r\n                if (this._class.configureRouter) {\r\n                    this.configureRouter();\r\n                }\r\n\r\n                // call create\r\n                this.create();\r\n\r\n                // process content\r\n                this.processContent();\r\n\r\n                // if process\r\n                if (this._process) {\r\n                    arr = ViewParser.parseNodes(this.template, this._class, this.element.$view);\r\n                }\r\n\r\n                // task is started, lets look children and append them, if we have process content\r\n                if (this._process) {\r\n                    while (this.template.childNodes.length) {\r\n                        this.element.appendChild(this.template.firstChild);\r\n                    }\r\n                }\r\n                arr.reverse();\r\n\r\n                // todo, do I want to allow someone to stop appending the templates now?\r\n                this.contentProcessed(arr);\r\n\r\n                // need to attach them myself here\r\n                arr.forEach((a) => {\r\n                    if (a.attached) {\r\n                        a.attached();\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            this.logger.log('loadTemplate');\r\n\r\n            if (!this._class.loadTemplate) {\r\n                throw new Error('loadTemplate missing');\r\n            }\r\n            this.templateString = this.templateString || this._class.loadTemplate();\r\n            this.template = ViewParser.createTemplate(null, this.templateString);\r\n\r\n            // router\r\n            if (this._class.configureRouter) {\r\n                this.configureRouter();\r\n            }\r\n\r\n            // call create\r\n            this.create();\r\n\r\n            // process content\r\n            this.processContent();\r\n\r\n            // if processed\r\n            if (this._process) {\r\n                arr = ViewParser.parseNodes(this.template, this._class, this.element.$view);\r\n            }\r\n\r\n            // task is started, lets look children and append them, if we have process content\r\n            if (this._process) {\r\n                while (this.template.childNodes.length) {\r\n                    this.element.appendChild(this.template.firstChild);\r\n                }\r\n            }\r\n            arr.reverse();\r\n\r\n            // todo, do I want to allow someone to stop appending the templates now?\r\n            this.contentProcessed(arr);\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * configure router\r\n     *\r\n     */\r\n    public configureRouter(): void {\r\n        this.logger.log('configureRouter');\r\n        const router = ContainerClasses.get(Router);\r\n        const RouterConfig = {\r\n            root: '#/',\r\n            title: '',\r\n            map: (routes: any[]) => {\r\n                (RouterConfig as any).routes = routes;\r\n            },\r\n            loader: ''\r\n        };\r\n        this._class.configureRouter(RouterConfig, router);\r\n        router.addConfig(RouterConfig);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * sets vars and calls create on element\r\n     *\r\n     */\r\n    public create(): void {\r\n        this.logger.log('create');\r\n\r\n        if (this._class.created) {\r\n            this._class.created();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * calls elements processContent() if it exist\r\n     * here someone can modify the template\r\n     *\r\n     */\r\n    public processContent(): void {\r\n        this.logger.log('processContent');\r\n\r\n        if (this._class.processContent) {\r\n            this._process = this._class.processContent(this.template);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * calls elements contentProcessed() if it exist\r\n     * is called after template is processed and added to element\r\n     *\r\n     */\r\n    public contentProcessed(controllers: IControllerArray): void {\r\n        this.logger.log('contentProcessed');\r\n\r\n        if (this._class.contentProcessed && this._process) {\r\n            this._class.contentProcessed(controllers);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * calls elements attached() if it exist\r\n     * when attached to parent\r\n     *\r\n     */\r\n    public attached(): void {\r\n        this.logger.log('attached');\r\n\r\n        if (this._class.attached) {\r\n            this._class.attached();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * calls elements detached() if it exist and clears it\r\n     * when about to be detached\r\n     *\r\n     */\r\n    public detached(): void {\r\n        this.logger.log('detached');\r\n\r\n        if (this._class.detached) {\r\n            this._class.detached();\r\n        }\r\n\r\n        // remove meta binding\r\n        BindingEngine.unSubscribeClassMetaBinding(this._class);\r\n\r\n        this.parent = null;\r\n        this.element = null;\r\n        this._class.$element = null;\r\n        this._class.$parent = null;\r\n        this._class.$attributes = null;\r\n        this._class = null;\r\n\r\n    }\r\n\r\n}\r\n","import { ContainerElements } from '../container/index';\r\nimport { ContainerAttributes } from '../container/index';\r\nimport { Cache } from '../utils/index';\r\nimport { AttributeController } from './attributeController';\r\nimport { ElementController } from './elementController';\r\nimport { InterpolateController } from './interpolateController';\r\nimport { ViewController } from './viewController';\r\nimport { IElement, IRepeatCache, IControllerArray, INode } from '../interface/index';\r\n\r\n\r\n\r\n/**\r\n * This class have methods to parse the string/template and initiate our custom elements/attributes/binding\r\n *\r\n */\r\nexport class ViewParser {\r\n\r\n    /**\r\n     * creates element and parses template string\r\n     * used when starting mframejs and router\r\n     *\r\n     */\r\n    public static parseAndCreateElement(_class: IElement, element: INode, parent: IElement, templateString?: string): void {\r\n        const elementController = new ElementController(parent, element, _class, null, templateString);\r\n        const controllers = elementController.init();\r\n        elementController.attached();\r\n        controllers.forEach((controller) => {\r\n            if (controller.attached) {\r\n                controller.attached();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * cleans a html template\r\n     *\r\n     */\r\n    public static cleanTemplate(template: any): void {\r\n        // loop children\r\n\r\n        const loopNodes = (node: INode) => {\r\n            for (let n = 0; n < node.childNodes.length; n++) {\r\n\r\n                // get child\r\n                let child = node.childNodes[n];\r\n\r\n                if (child.nodeType === 8 || (child.nodeType === 3 && !/\\S/.test(child.nodeValue))) {\r\n\r\n                    // 8 Represents a comment\r\n                    // Represents textual content in an element or attribute, but check if empty\r\n                    node.removeChild(child);\r\n                    n--;\r\n\r\n                } else if (child.nodeType === 1) {\r\n\r\n                    // 1 = Element, Text, Comment, ProcessingInstruction, CDATASection, EntityReference\r\n                    loopNodes(child);\r\n                }\r\n                child = null;\r\n            }\r\n        };\r\n        loopNodes(template);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * creates a template from string markup\r\n     *\r\n     */\r\n    public static createTemplate(tag: string, markup: string): Element {\r\n        let template: any;\r\n\r\n        // see if we have template cached\r\n        if (!Cache.templateMapHas(markup)) {\r\n\r\n            // create empty div\r\n            const container = document.createElement('div');\r\n\r\n            // add markup\r\n            container.innerHTML = (<any>markup).default || markup;\r\n\r\n            // get first element (template)\r\n            // todo, check if it contains template tag!\r\n            const fragment = container.firstElementChild;\r\n            if (!(<any>fragment).content) {\r\n                // ie11 fix\r\n                (<any>fragment).content = document.createDocumentFragment();\r\n                while (fragment.childNodes[0]) {\r\n                    (<any>fragment).content.appendChild(fragment.childNodes[0]);\r\n                }\r\n            }\r\n\r\n            // create element tag or a dummy\r\n            template = document.createElement(tag || 'mf-template');\r\n\r\n            // clean up all empty text nodes\r\n            ViewParser.cleanTemplate((fragment as any).content);\r\n\r\n            // add template\r\n            template.appendChild((fragment as any).content);\r\n\r\n            Cache.templateMapSet(markup, template);\r\n\r\n        } else {\r\n            template = Cache.templateMapGet(markup);\r\n        }\r\n\r\n        // return clone\r\n        const x = template.cloneNode(true);\r\n        template = null;\r\n\r\n        return x;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Parses element and its children for views and calls remove on them\r\n     *\r\n     */\r\n    public static clearAllViews(element: INode): void {\r\n\r\n        const nodeFiler = function (node: any): number {\r\n            return node.$view ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_REJECT;\r\n        };\r\n\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/NodeIterator\r\n        const nodeIterator = document.createNodeIterator(\r\n            element,\r\n            NodeFilter.SHOW_ALL,\r\n            (nodeFiler as any),\r\n            false\r\n        );\r\n        let currentNode;\r\n        while (currentNode = nodeIterator.nextNode()) {\r\n            (currentNode as any).$view.clearView();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * parses nodes and adds initiates elements/interpolate and attributes\r\n     * use cache version when generating many\r\n     */\r\n    public static parseNodes(template: INode, parentContext: IElement, $view: ViewController): IControllerArray {\r\n\r\n        const arr: IControllerArray = [];\r\n\r\n        // loops and pushes into our node map/array\r\n        const loopNodes = function (_node: INode) {\r\n\r\n            // loop children\r\n            for (let n = 0; n < _node.childNodes.length; n++) {\r\n\r\n                // vars\r\n                let anyControllerAttributes = false;\r\n                // let anyRepeat = false;\r\n\r\n                // get child\r\n                const htmlNode = _node.childNodes[n];\r\n\r\n                // first of all we need to check for master attributes like if.bind and repeat\r\n                if ((htmlNode as any).getAttribute) {\r\n\r\n                    const attributeNode = (htmlNode as any).getAttributeNode('if.bind');\r\n                    if (attributeNode) {\r\n\r\n                        // we have if.bind, we not need to create it\r\n                        anyControllerAttributes = true;\r\n                        const customAttribute = ContainerAttributes.findAttribute(attributeNode.name);\r\n\r\n                        const instance = new AttributeController(parentContext, htmlNode, attributeNode, customAttribute, $view);\r\n                        $view = (htmlNode as any).$view ? (htmlNode as any).$view : $view;\r\n                        instance.init();\r\n\r\n                        if (instance) {\r\n                            arr.push(instance);\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        // no if.bind,lets check for repeat.for\r\n\r\n                        const attributeNode = (htmlNode as any).getAttributeNode('repeat.for');\r\n                        if (attributeNode) {\r\n\r\n                            anyControllerAttributes = true;\r\n                            // we have if bind, we not need to create it\r\n                            const customAttribute = ContainerAttributes.findAttribute(attributeNode.name);\r\n                            const instance = new AttributeController(parentContext, htmlNode, attributeNode, customAttribute, $view);\r\n                            $view = (htmlNode as any).$view ? (htmlNode as any).$view : $view;\r\n                            instance.init();\r\n                            if (instance) {\r\n                                arr.push(instance);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                // if not controller attribute loop attributes and initiate them\r\n                if (!anyControllerAttributes) {\r\n                    const childAttributes = htmlNode.attributes || (<any[]>[]);\r\n                    for (let i = 0; i < childAttributes.length; i++) {\r\n\r\n                        const attr = childAttributes[i];\r\n\r\n                        let isCustomAttribute = ContainerAttributes.findAttribute(attr.name);\r\n\r\n                        if (!isCustomAttribute && attr.name) {\r\n                            isCustomAttribute = ContainerAttributes.findAttribute(attr.name.replace('.bind', ''));\r\n\r\n                            if (!isCustomAttribute && attr.name) {\r\n                                isCustomAttribute = ContainerAttributes.findAttribute('mframejs-event-trigger.' + attr.name.split('.')[1]);\r\n\r\n                                if (!isCustomAttribute && attr.name) {\r\n                                    isCustomAttribute = ContainerAttributes.findAttribute('mframejs-event-delegate.' + attr.name.split('.')[1]);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (isCustomAttribute) {\r\n                            const instance = new AttributeController(parentContext, htmlNode, attr, isCustomAttribute, $view);\r\n                            $view = (htmlNode as any).$view ? (htmlNode as any).$view : $view;\r\n                            instance.init();\r\n                            if (instance) {\r\n                                arr.push(instance);\r\n                            }\r\n                        } else {\r\n                            if (attr.value.indexOf('${') !== -1) {\r\n                                const interpolateController = new InterpolateController(parentContext, attr, $view);\r\n                                interpolateController.init();\r\n                                arr.push(interpolateController);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                // if not controller attributes then add custom element if there is any\r\n                if (!anyControllerAttributes) {\r\n\r\n                    // get ${} where its used and create binding expression\r\n                    if ((<any>htmlNode).textContent && (<any>htmlNode).nodeType !== 1) {\r\n                        if ((<any>htmlNode).textContent.indexOf('${') !== -1) {\r\n                            const interpolateController = new InterpolateController(parentContext, htmlNode, $view);\r\n                            interpolateController.init();\r\n                            arr.push(interpolateController);\r\n                        }\r\n                    }\r\n\r\n                    // node 1 = normal elements..\r\n                    if (htmlNode.nodeType === 1) {\r\n                        // check if its a custom element we found before...\r\n                        const haveCustomElement = ContainerElements.findElement(htmlNode.localName);\r\n                        if (haveCustomElement) {\r\n                            // add element\r\n                            const elementController = new ElementController(parentContext, htmlNode, null, haveCustomElement, null);\r\n                            $view = (htmlNode as any).$view ? (htmlNode as any).$view : $view;\r\n                            const controllers = elementController.init();\r\n                            arr.push(elementController);\r\n                            arr.push(...controllers);\r\n                        } else {\r\n                            // more children?\r\n                            if (htmlNode.childNodes) {\r\n                                loopNodes(htmlNode);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        const tempTemplate = ({ childNodes: [template] } as any);\r\n        loopNodes(tempTemplate);\r\n\r\n\r\n        return arr;\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * parses nodes and adds initiates elements/interpolate and attributes by using cache to speed up\r\n     *\r\n     */\r\n    public static parseNodesWithCache(template: INode, parentContext: IElement, cache: Array<IRepeatCache>, $view: ViewController): IControllerArray {\r\n\r\n        const arr: IControllerArray = [];\r\n\r\n        const nodeIterator = document.createTreeWalker(\r\n            template,\r\n            NodeFilter.SHOW_ALL,\r\n            null,\r\n            false\r\n        );\r\n\r\n        let yy = 0;\r\n        const last = cache[0].last;\r\n\r\n        let htmlNode;\r\n        for (let i = 0; i < cache.length; i++) {\r\n            htmlNode = nodeIterator.nextNode();\r\n\r\n            if (cache[i].no === yy) {\r\n                switch (cache[i].type) {\r\n                    case 'attribute-interpolate':\r\n                    case 'attribute':\r\n                        if (cache[i].type === 'attribute') {\r\n                            const attributeController =\r\n                                new AttributeController(parentContext, htmlNode, htmlNode.attributes[cache[i].attributeCount], cache[i].set, $view);\r\n                            $view = (htmlNode as any).$view ? (htmlNode as any).$view : $view;\r\n                            attributeController.init();\r\n                            arr.push(attributeController);\r\n                        } else {\r\n                            const interpolateController = new InterpolateController(parentContext, htmlNode.attributes[cache[i].attributeCount], $view);\r\n                            interpolateController.init();\r\n                            arr.push(interpolateController);\r\n                        }\r\n\r\n                        while (cache[i + 1] && cache[i + 1].no === yy) {\r\n                            i++;\r\n                            if (cache[i].type === 'attribute') {\r\n                                const attributeController =\r\n                                    new AttributeController(parentContext, htmlNode, htmlNode.attributes[cache[i].attributeCount], cache[i].set, $view);\r\n                                $view = (htmlNode as any).$view ? (htmlNode as any).$view : $view;\r\n                                attributeController.init();\r\n                                arr.push(attributeController);\r\n                            } else {\r\n                                const interpolateController = new InterpolateController(parentContext, htmlNode.attributes[cache[i].attributeCount], $view);\r\n                                interpolateController.init();\r\n                                arr.push(interpolateController);\r\n                            }\r\n\r\n                        }\r\n                        break;\r\n                    case 'element':\r\n                        const elementController = new ElementController(parentContext, htmlNode, null, cache[i].set, null);\r\n                        $view = (htmlNode as any).$view ? (htmlNode as any).$view : $view;\r\n                        const controllers = elementController.init();\r\n                        arr.push(elementController);\r\n                        arr.push(...controllers);\r\n                        break;\r\n                    case 'interpolate':\r\n                        const interpolateController = new InterpolateController(parentContext, htmlNode, $view);\r\n                        interpolateController.init();\r\n                        arr.push(interpolateController);\r\n                        break;\r\n                }\r\n            }\r\n            yy++;\r\n            if (yy > last) {\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        return arr;\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * parses nodes and creates cache to be used with parser\r\n     *\r\n     */\r\n    public static createNodeParseCache(template: INode): Array<IRepeatCache> {\r\n\r\n        const cache: Array<IRepeatCache> = [];\r\n\r\n        let attributeCount = -1;\r\n        let yy = -1;\r\n\r\n        let last = 0;\r\n\r\n        const loopNodes = function (_node: INode, controllerOverride: any) {\r\n\r\n\r\n            for (let n = 0; n < _node.childNodes.length; n++) {\r\n\r\n                yy++;\r\n                const cacheLength = cache.length;\r\n                // vars\r\n                let anyControllerAttributes = controllerOverride ? controllerOverride : false;\r\n\r\n                const htmlNode = _node.childNodes[n];\r\n\r\n\r\n                // first of all we need to check for master attributes like if.bind and repeat\r\n                if ((htmlNode as any).getAttribute && !controllerOverride) {\r\n\r\n                    const haveIfBindAttribute = (htmlNode as any).getAttribute('if.bind');\r\n                    if (haveIfBindAttribute) {\r\n\r\n                        anyControllerAttributes = true;\r\n                        const childAttributes = htmlNode.attributes || (<any[]>[]);\r\n                        attributeCount = -1;\r\n                        for (let i = 0; i < childAttributes.length; i++) {\r\n                            attributeCount++;\r\n                            const attr = childAttributes[i];\r\n                            if (attr.name === 'if.bind') {\r\n                                const isCustomAttribute = ContainerAttributes.findAttribute(attr.name);\r\n                                if (isCustomAttribute) {\r\n                                    last = yy;\r\n                                    cache.push({\r\n                                        no: yy,\r\n                                        type: 'attribute',\r\n                                        attributeCount: attributeCount,\r\n                                        set: isCustomAttribute\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        const haveRepeatAttribute = (htmlNode as any).getAttribute('repeat.for');\r\n                        if (haveRepeatAttribute) {\r\n\r\n                            anyControllerAttributes = true;\r\n                            const childAttributes = htmlNode.attributes || (<any[]>[]);\r\n                            attributeCount = -1;\r\n                            for (let i = 0; i < childAttributes.length; i++) {\r\n                                attributeCount++;\r\n                                const attr = childAttributes[i];\r\n                                if (attr.name === 'repeat.for') {\r\n                                    const isCustomAttribute = ContainerAttributes.findAttribute(attr.name);\r\n                                    if (isCustomAttribute) {\r\n                                        last = yy;\r\n                                        cache.push({\r\n                                            no: yy,\r\n                                            type: 'attribute',\r\n                                            attributeCount: attributeCount,\r\n                                            set: isCustomAttribute\r\n                                        });\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                // if not controller attribute loop attributes and initiate them\r\n                if (!anyControllerAttributes && !controllerOverride) {\r\n                    const childAttributes = htmlNode.attributes || (<any[]>[]);\r\n                    attributeCount = -1;\r\n                    for (let i = 0; i < childAttributes.length; i++) {\r\n                        attributeCount++;\r\n\r\n                        const attr = childAttributes[i];\r\n                        // get instance (always new)\r\n                        let isCustomAttribute = ContainerAttributes.findAttribute(attr.name);\r\n                        if (!isCustomAttribute && attr.name) {\r\n                            isCustomAttribute = ContainerAttributes.findAttribute(attr.name.replace('.bind', ''));\r\n\r\n                            if (!isCustomAttribute && attr.name) {\r\n                                isCustomAttribute = ContainerAttributes.findAttribute('mframejs-event-trigger.' + attr.name.split('.')[1]);\r\n\r\n                                if (!isCustomAttribute && attr.name) {\r\n                                    isCustomAttribute = ContainerAttributes.findAttribute('mframejs-event-delegate.' + attr.name.split('.')[1]);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (isCustomAttribute) {\r\n                            last = yy;\r\n                            cache.push({\r\n                                no: yy,\r\n                                type: 'attribute',\r\n                                attributeCount: attributeCount,\r\n                                set: isCustomAttribute\r\n                            });\r\n                        } else {\r\n                            if (attr.value.indexOf('${') !== -1) {\r\n                                last = yy;\r\n                                cache.push({\r\n                                    no: yy,\r\n                                    type: 'attribute-interpolate',\r\n                                    set: null,\r\n                                    attributeCount: attributeCount\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                // if not controller attributes then add custom element if there is any\r\n                if (!anyControllerAttributes && !controllerOverride) {\r\n\r\n                    if ((<any>htmlNode).textContent && (<any>htmlNode).nodeType !== 1) {\r\n                        if ((<any>htmlNode).textContent.indexOf('${') !== -1) {\r\n                            last = yy;\r\n                            cache.push({\r\n                                no: yy,\r\n                                type: 'interpolate',\r\n                                set: null,\r\n                                attributeCount: null\r\n                            });\r\n                        }\r\n                    } else {\r\n                        // node 1 = normal elements..\r\n                        if (htmlNode.nodeType === 1) {\r\n                            // check if its a custom element we found before...\r\n                            const haveCustomElement = ContainerElements.findElement(htmlNode.localName);\r\n                            if (haveCustomElement) {\r\n                                last = yy;\r\n                                cache.push({\r\n                                    no: yy,\r\n                                    type: 'element',\r\n                                    set: haveCustomElement,\r\n                                    attributeCount: null\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (cacheLength === cache.length) {\r\n                    cache.push({\r\n                        no: yy + 99,\r\n                        type: null,\r\n                        set: null,\r\n                        attributeCount: null\r\n                    });\r\n                }\r\n\r\n                if (htmlNode.childNodes) {\r\n                    loopNodes(htmlNode, anyControllerAttributes);\r\n                }\r\n            }\r\n        };\r\n\r\n        // let tempTemplate = ({ childNodes: [template] } as any);\r\n        loopNodes(template, false);\r\n        cache[0].last = last;\r\n\r\n        return cache;\r\n\r\n    }\r\n}\r\n","import { BindingEngine } from '../binding/index';\r\nimport { INode } from '../interface/index';\r\nimport { ViewController } from './viewController';\r\nimport { Logger } from '../utils/index';\r\n\r\n/**\r\n * internal subscribe caller of Interpolate controller\r\n *\r\n */\r\nconst SubscribeInternal = class {\r\n    private firstRun = true;\r\n    public name = 'Interpolate';\r\n    public node: INode;\r\n\r\n    constructor(node: INode) {\r\n        this.node = node;\r\n    }\r\n    public call(newValue: any, oldValue: any) {\r\n        if (oldValue !== newValue || this.firstRun) {\r\n            this.firstRun = false;\r\n            if ((this.node as any).nodeType === 2) {\r\n                (this.node as Attr).value = newValue;\r\n            } else {\r\n                (this.node as Text).data = newValue;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\n/**\r\n * Interpolate controller watches the text and updates node\r\n *\r\n */\r\nexport class InterpolateController {\r\n    private parent: any;\r\n    private subscribeInternal: any;\r\n    private node: INode;\r\n    private logger: Logger;\r\n    private attr = false;\r\n\r\n\r\n    constructor(parent: any, node: INode, $view: ViewController) {\r\n        if (!(node as any).data) {\r\n            this.attr = true;\r\n        }\r\n        this.logger = Logger.getLogger(this.attr ? (node as any).value.trim() : (node as any).data.trim(), 'interpolate');\r\n\r\n        this.parent = parent;\r\n        this.node = node;\r\n        $view.addInterpolate(this);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * start element life cycle\r\n     *\r\n     */\r\n    public init(): void {\r\n        this.logger.log('init');\r\n        this.subscribeInternal = new SubscribeInternal(this.node);\r\n        BindingEngine.subscribeClassProperty(this.parent, this.attr ? (this.node as any).value : (this.node as any).data, this.subscribeInternal);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * attached... dont really do much atm... Todo, should I subscribe here ?\r\n     *\r\n     */\r\n    public attached(): void {\r\n        this.logger.log('attached');\r\n        // na\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * detached, unsubscribes and clear out\r\n     *\r\n     */\r\n    public detached(): void {\r\n        this.logger.log('detached');\r\n        BindingEngine.unSubscribeClassProperty(this.parent, this.subscribeInternal);\r\n        this.subscribeInternal = null;\r\n        this.parent = null;\r\n        this.node = null;\r\n    }\r\n\r\n\r\n\r\n}\r\n","export { inject } from './inject';\r\nexport { transient } from './transient';\r\nexport { customAttribute } from './customAttribute';\r\nexport { customElement } from './customElement';\r\nexport { bindable } from './bindable';\r\nexport { observable } from './observable';\r\nexport { computedFrom } from './computedFrom';\r\nexport { valueConverter } from './valueConverter';\r\nexport { behavior } from './behavior';\r\n\r\n\r\n","import { ContainerClasses } from '../container/index';\r\n\r\n/**\r\n * @inject\r\n *\r\n */\r\nexport function inject(...deps: any[]) {\r\n    return function injector(_class: any) {\r\n        ContainerClasses.setDep(_class, deps);\r\n    };\r\n}\r\n\r\n\r\n","import { ContainerClasses } from '../container/index';\r\n\r\n/**\r\n * @transient\r\n *\r\n */\r\nexport function transient(_class: any) {\r\n\r\n    ContainerClasses.regTransient(_class);\r\n}\r\n","import { ContainerClasses } from '../container/index';\r\nimport { ContainerAttributes } from '../container/index';\r\n\r\n\r\n/**\r\n * @customAttribute\r\n *\r\n */\r\nexport function customAttribute(name: string) {\r\n\r\n    return function register(_class: any) {\r\n        ContainerClasses.regTransient(_class);\r\n        ContainerAttributes.regAttribute(_class, name);\r\n    };\r\n}\r\n","import { ContainerClasses } from '../container/index';\r\nimport { ContainerElements } from '../container/index';\r\n\r\n/**\r\n * @customElement\r\n *\r\n */\r\nexport function customElement(name: string) {\r\n\r\n    return function register(_class: any) {\r\n\r\n        ContainerClasses.regTransient(_class);\r\n        ContainerElements.regElement(_class, name);\r\n\r\n    };\r\n\r\n}\r\n","import { CONSTANTS } from '../interface/index';\r\n\r\n/**\r\n * @bindable\r\n * helps get values in attibutes\r\n *\r\n */\r\nexport function bindable(options?: any) {\r\n\r\n    // get passed in options //todo, create interface\r\n    let _options: any;\r\n    _options = options;\r\n\r\n    return function (target: any, key: any) {\r\n\r\n        if (!target[CONSTANTS.META_BINDABLE]) {\r\n            target[CONSTANTS.META_BINDABLE] = {};\r\n        }\r\n\r\n        // replace uppercase with lower and add '-' for each one\r\n        const attribute = key.replace(/([a-z])([A-Z])/g, '$1-$2')\r\n            .replace(/\\s+/g, '-')\r\n            .toLowerCase();\r\n\r\n        // check if attribute is added\r\n        if (options) {\r\n            if (!options.attribute) {\r\n                options.attribute = attribute;\r\n            }\r\n        }\r\n\r\n        // check if key is added, if not add\r\n        if (!target[CONSTANTS.META_BINDABLE][key]) {\r\n            target[CONSTANTS.META_BINDABLE][key] = {\r\n                key: key,\r\n                options: _options || {\r\n                    attribute: attribute\r\n                }\r\n            };\r\n        }\r\n\r\n    };\r\n}\r\n","import { CONSTANTS } from '../interface/index';\r\n\r\n/**\r\n * @observable\r\n * helps get values in attributes\r\n *\r\n */\r\nexport function observable(options?: any) {\r\n\r\n    // get passed in options //todo, create interface\r\n    let _options: any;\r\n    _options = options;\r\n\r\n    return function (target: any, key: any) {\r\n\r\n        if (!target[CONSTANTS.META_BINDABLE]) {\r\n            target[CONSTANTS.META_BINDABLE] = {};\r\n        }\r\n\r\n\r\n        // check if attribute is added\r\n        if (options) {\r\n            if (!options.attribute) {\r\n                options.attribute = null;\r\n            }\r\n        }\r\n\r\n        // check if key is added, if not add\r\n        if (!target[CONSTANTS.META_BINDABLE][key]) {\r\n            target[CONSTANTS.META_BINDABLE][key] = {\r\n                key: key,\r\n                observableOnly : true,\r\n                options: _options || {\r\n                    attribute: null\r\n                }\r\n            };\r\n        }\r\n\r\n    };\r\n}\r\n","import { CONSTANTS } from '../interface/index';\r\n\r\n/**\r\n * @bindable\r\n * helps get values in attibutes\r\n *\r\n */\r\nexport function computedFrom(...options: any[]) {\r\n\r\n    // get passed in options //todo, create interface\r\n    let _options: any;\r\n    _options = options;\r\n\r\n    return function (target: any, key: any) {\r\n\r\n        if (!target[CONSTANTS.META_COMPUTEDFROM]) {\r\n            target[CONSTANTS.META_COMPUTEDFROM] = {};\r\n        }\r\n\r\n\r\n\r\n        // check if key is added, if not add\r\n        if (!target[CONSTANTS.META_COMPUTEDFROM][key]) {\r\n            target[CONSTANTS.META_COMPUTEDFROM][key] = {\r\n                key: key,\r\n                attributes: _options || {\r\n                    attributes: []\r\n                }\r\n            };\r\n        }\r\n\r\n    };\r\n}\r\n","import { ContainerClasses } from '../container/index';\r\nimport { ContainerValueConverters } from '../container/index';\r\n\r\n/**\r\n * @valueConverter\r\n *\r\n */\r\nexport function valueConverter(name: string) {\r\n\r\n    return function register(_class: any) {\r\n\r\n        ContainerClasses.regTransient(_class);\r\n        ContainerValueConverters.regConverter(_class, name);\r\n    };\r\n}\r\n\r\n","import { ContainerClasses } from '../container/index';\r\nimport { ContainerBehavior } from '../container/index';\r\n\r\n/**\r\n * @behavior\r\n *\r\n */\r\nexport function behavior(name: string) {\r\n\r\n    return function register(_class: any) {\r\n\r\n        ContainerClasses.regTransient(_class);\r\n        ContainerBehavior.regBehavior(_class, name);\r\n    };\r\n}\r\n\r\n","export { SignalBehavior } from './signal';\r\nexport { ThrottleBehavior } from './throttle';\r\nexport { DebounceBehavior } from './debounce';\r\nexport { TriggerBehavior } from './trigger';\r\n","import { behavior } from '../decorator/index';\r\nimport { EventAggregator } from '../utils/index';\r\nimport { ContainerClasses } from '../container/index';\r\n\r\nconst eventAggregator: EventAggregator = ContainerClasses.get(EventAggregator);\r\n\r\n@behavior('signal')\r\nexport class SignalBehavior {\r\n    public name: string;\r\n    constructor(observer: any, args: any) {\r\n        this.name = args[0] || 'undefined';\r\n\r\n        if (observer.listener && observer.listener.name === 'Interpolate') {\r\n\r\n            observer.unbindBackup = observer.unbind;\r\n\r\n            observer.unbind = function () {\r\n                this.unbindBackup();\r\n            };\r\n\r\n            eventAggregator.subscribe('signal-' + this.name, function () {\r\n                observer.update();\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n","\r\nimport { behavior } from '../decorator/index';\r\n\r\n@behavior('throttle')\r\nexport class ThrottleBehavior {\r\n    public name: string;\r\n    constructor(binding: any, args: any) {\r\n        const time = args[0] || 100;\r\n        if (binding.eventHandlerBinded) {\r\n\r\n            binding.eventHandlerBindedBackup = binding.eventHandlerBinded;\r\n\r\n            binding.detachedBackup = binding.detached;\r\n\r\n            binding.detached = function () {\r\n                binding.detachedBackup();\r\n            };\r\n\r\n            binding.eventHandlerBinded = function () {\r\n                if (!this.timerBehavior) {\r\n                    this.timerBehavior = setTimeout(() => {\r\n                        binding.eventHandlerBindedBackup();\r\n                        this.timerBehavior = null;\r\n                    }, time);\r\n                                }\r\n            }.bind(binding);\r\n\r\n        }\r\n    }\r\n}\r\n","\r\nimport { behavior } from '../decorator/index';\r\n\r\n@behavior('debounce')\r\nexport class DebounceBehavior {\r\n    public name: string;\r\n    constructor(binding: any, args: any) {\r\n        const time = args[0] || 100;\r\n        if (binding.eventHandlerBinded) {\r\n\r\n            binding.eventHandlerBindedBackup = binding.eventHandlerBinded;\r\n\r\n            binding.detachedBackup = binding.detached;\r\n\r\n            binding.detached = function () {\r\n                binding.detachedBackup();\r\n            };\r\n\r\n            binding.eventHandlerBinded = function () {\r\n                if (this.timerBehavior) {\r\n                    clearTimeout(this.timerBehavior);\r\n                    this.timerBehavior = null;\r\n                }\r\n                this.timerBehavior = setTimeout(() => {\r\n                    binding.eventHandlerBindedBackup();\r\n                }, time);\r\n            }.bind(binding);\r\n\r\n        }\r\n    }\r\n}\r\n","\r\nimport { behavior } from '../decorator/index';\r\n\r\n@behavior('updateTrigger')\r\nexport class TriggerBehavior {\r\n    public name: string;\r\n    constructor(binding: any, args: any) {\r\n        const trigger = args;\r\n        if (binding.eventHandlerBinded) {\r\n\r\n            if ('trigger' in binding && trigger) {\r\n                binding.trigger = trigger;\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n","export { MfRouter } from './mf-router';\r\n","import { Router } from '../utils/index';\r\nimport { EventAggregator } from '../utils/index';\r\nimport { customElement } from '../decorator/index';\r\nimport { inject } from '../decorator/index';\r\nimport { IElement } from '../interface/index';\r\nimport { ContainerClasses } from '../container/index';\r\nimport { ViewParser } from '../view/index';\r\nimport { ViewController } from '../view/index';\r\n\r\n\r\n\r\n@customElement('mf-router')\r\n@inject(EventAggregator, Router)\r\nexport class MfRouter implements IElement {\r\n\r\n    // injected\r\n    public router: Router;\r\n    public eventAggregator: EventAggregator;\r\n\r\n    // added by template engine\r\n    public $element: Element;\r\n    public $parent: IElement;\r\n    public $view: ViewController;\r\n\r\n    // current page instance\r\n    private instance: IElement;\r\n\r\n    // state\r\n    private started: boolean;\r\n    private loaded: boolean;\r\n\r\n\r\n\r\n    constructor(eventAggregator: EventAggregator, router: Router) {\r\n        // logger\r\n\r\n        // set to class\r\n        this.router = router;\r\n        this.eventAggregator = eventAggregator;\r\n\r\n        // register with router\r\n        this.router.registerElement(this);\r\n    }\r\n\r\n    /**\r\n     * created\r\n     *\r\n     */\r\n    public created() {\r\n        // nothing atm\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * attached\r\n     *\r\n     */\r\n    public attached() {\r\n        // so we know...\r\n        this.started = true;\r\n\r\n        if (!this.loaded) {\r\n            this.update();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * detached\r\n     *\r\n     */\r\n    public detached() {\r\n        // if this happens, then lets send out one incase\r\n        this.router.unregisterElement(this);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * loadTemplateAsync\r\n     *\r\n     */\r\n    public async loadTemplateAsync() {\r\n\r\n        // if router is not started then we wait until it calls us\r\n        if (!this.started) {\r\n\r\n            // you could have displayed something here...\r\n            return '<template></template>';\r\n        } else {\r\n\r\n            // if route fails, then show error (good chance they pass in something we cant use)\r\n            try {\r\n\r\n                // get current route module\r\n                const route = this.router.getCurrentModule();\r\n\r\n                // todo, check for configured callback\r\n                const template = await this.router.loadCurrentModule(); // <-  this need to be async..\r\n                if (template === undefined) {\r\n                    console.warn('route not found' + route);\r\n                }\r\n                const instance = ContainerClasses.get(template[this.router.getCurrentClass()]);\r\n                this.instance = instance;\r\n\r\n                // return template\r\n                if (instance.loadTemplateAsync) {\r\n                    return await instance.loadTemplateAsync();\r\n                } else {\r\n                    return instance.loadTemplate();\r\n                }\r\n\r\n            } catch (e) {\r\n                return `<template>${e}</template>`;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * loadTemplate\r\n     *\r\n     */\r\n    public loadTemplate() {\r\n\r\n        // if router is not started then we wait until it calls us\r\n        if (!this.started) {\r\n            // OK\r\n        } else {\r\n            console.log('Im not supposed to trigger, BUG!!!');\r\n        }\r\n\r\n        return '<template></template>';\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * update\r\n     *\r\n     */\r\n    public update() {\r\n\r\n        // vars\r\n        const instanceOld = this.instance;\r\n        let response = true;\r\n\r\n        // if old, then check if we can deactivate\r\n        if (instanceOld) {\r\n            if (instanceOld.canDeactivate) {\r\n                // switch to async ?\r\n                response = instanceOld.canDeactivate();\r\n            }\r\n        }\r\n\r\n        // TODO do we also want a canActivate?\r\n\r\n        if (response) {\r\n\r\n            // if we have old instance then we need to remove it;\r\n            if (instanceOld) {\r\n\r\n                if (instanceOld.detached) {\r\n                    instanceOld.detached();\r\n                }\r\n                ViewParser.clearAllViews(instanceOld.$element);\r\n                instanceOld.$element = null;\r\n                instanceOld.$parent = null;\r\n                instanceOld.$attributes = null;\r\n                instanceOld.$element = null;\r\n            }\r\n\r\n            // remove children\r\n            while (this.$element.firstChild) {\r\n                this.$element.removeChild(this.$element.firstChild);\r\n            }\r\n\r\n            // create a view put route in\r\n            const view = document.createElement('view');\r\n\r\n\r\n            // load templates\r\n            this.loadTemplateAsync().then((templateString) => {\r\n\r\n                this.loaded = true;\r\n                // module will be element in routes <view> tag\r\n                ViewParser.parseAndCreateElement(this.instance, view, this, templateString);\r\n\r\n                this.$element.appendChild(view);\r\n                this.router.isNavigating = false;\r\n                if (this.instance.activated) {\r\n                    this.instance.activated();\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","export { IfAttribute } from './ifAttribute';\r\nexport { ValueAttribute } from './valueAttribute';\r\nexport { DelgateEventsAttribute } from './delgateEventsAttribute';\r\nexport { TriggerEventsAttribute } from './triggerEventsAttribute';\r\nexport { RepeatAttribute } from './repeatAttribute';\r\nexport { MiscAttributes } from './miscAttribute';\r\nexport { CssAttribute } from './cssAttribute';\r\nexport { ModelAttribute } from './modelAttribute';\r\n","import { customAttribute } from '../decorator/index';\r\nimport { IElement, IAttribute } from '../interface/index';\r\nimport { ViewController, ViewParser } from '../view/index';\r\nimport { BindingEngine } from '../binding/index';\r\nimport { IControllerArray } from '../interface/i_ControllerArray';\r\n\r\n\r\n\r\n/**\r\n * removes dom when expression is undefined/null''0\r\n *\r\n */\r\n@customAttribute('if.bind')\r\nexport class IfAttribute implements IAttribute {\r\n    public $element: Node;\r\n    public $attribute: Attr;\r\n    public $parent: IElement;\r\n    private value: any;\r\n    private elementClone: Node;\r\n    private anchor: Node;\r\n    private added: boolean;\r\n    private subscribeCall: any;\r\n    private $view: any;\r\n\r\n    constructor() {\r\n        // nothing\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * created\r\n     *\r\n     */\r\n    public created() {\r\n\r\n        // get current value;\r\n        this.value = this.$attribute.value;\r\n\r\n        // remove the if.bind attribute\r\n        this.$element.attributes.removeNamedItem('if.bind');\r\n        if (this.$element && (this.$element as any).$view) {\r\n            this.$view = (this.$element as any).$view;\r\n        }\r\n\r\n        // clone node\r\n        this.elementClone = this.$element.cloneNode(true);\r\n\r\n        // create anchor so where know where to inject it\r\n        this.anchor = document.createComment('mf-if-bind');\r\n        if (this.$view) {\r\n            (this.anchor as any).$view = this.$view;\r\n        }\r\n\r\n        // add anchor\r\n        this.$element.parentNode.insertBefore(this.anchor, this.$element);\r\n\r\n        // remove main element\r\n        this.remove();\r\n\r\n        // set variable for later\r\n        this.added = false;\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * attached\r\n     *\r\n     */\r\n    public attached() {\r\n\r\n        this.subscribeCall = {\r\n            name: 'ifAttribute',\r\n            value: this.value,\r\n            call: (newValue: any/*, oldVal: any*/) => {\r\n\r\n                switch (true) {\r\n                    case newValue && !this.added:\r\n                        this.added = true;\r\n                        this.add();\r\n                        break;\r\n                    case !newValue && this.added:\r\n                        this.remove();\r\n                        break;\r\n                    default:\r\n                    // ?\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        BindingEngine.subscribeClassProperty(this.$parent, this.value, this.subscribeCall);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * detached\r\n     *\r\n     */\r\n    public detached(): void {\r\n        BindingEngine.unSubscribeClassProperty(this.$parent, this.subscribeCall);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * shows element/content\r\n     *\r\n     */\r\n    public add() {\r\n        // create clone\r\n        const template = this.elementClone.cloneNode(true);\r\n\r\n        // set clone as current element\r\n        this.$element = template;\r\n        (template as any).$view = new ViewController(template);\r\n\r\n        // get attach event for elements\r\n        let controllers: IControllerArray = [];\r\n        controllers = ViewParser.parseNodes(this.$element, this.$parent, (template as any).$view);\r\n        this.anchor.parentNode.insertBefore(this.$element, this.anchor);\r\n\r\n        // if this even used after last rebuild?\r\n        // todo - comment out do more test\r\n        controllers.forEach((x) => {\r\n            if (x.attached) {\r\n                x.attached();\r\n            }\r\n        });\r\n        controllers = null;\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * removes content\r\n     *\r\n     */\r\n    private remove() {\r\n        let x = this.$element;\r\n        if (this.added) {\r\n            this.added = false;\r\n            ViewParser.clearAllViews(this.$element);\r\n            this.$element = null;\r\n        }\r\n        // what to do if there is no parent ?\r\n        this.anchor.parentNode.removeChild(x);\r\n        x = null;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { customAttribute } from '../decorator/index';\r\nimport { IAttribute, IElement } from '../interface/index';\r\nimport { BindingEngine } from '../binding/index';\r\nimport { IListener } from '../interface/index';\r\nimport { Cache } from '../utils/index';\r\nimport { ContainerBehavior } from '../container/index';\r\n\r\n// helper class for property changes\r\nconst PropertyChangeHandler = class implements IListener {\r\n    private firstRun = true;\r\n    public name = 'valueAttribute';\r\n    public node: HTMLInputElement;\r\n    public caller: any;\r\n\r\n    constructor(node: HTMLInputElement) {\r\n        this.node = node;\r\n    }\r\n    public call(newValue: any, oldValue: any) {\r\n        if (oldValue !== newValue || this.firstRun) {\r\n            this.firstRun = false;\r\n            if (oldValue !== newValue) {\r\n                switch (true) {\r\n\r\n\r\n\r\n                    /**\r\n                     *  normal text input logic\r\n                     *\r\n                     */\r\n                    case this.node.type === 'text':\r\n                        this.node.value = newValue || '';\r\n                        break;\r\n\r\n\r\n\r\n                    /**\r\n                     *  checkbox logic\r\n                     *\r\n                     */\r\n                    case this.node.type === 'checkbox':\r\n\r\n                        const modelBind = this.node.hasAttribute('model.bind') ? this.node.getAttributeNode('model.bind') : null;\r\n                        if (modelBind && (modelBind as any).getContent) {\r\n                            const x = (modelBind as any).getContent();\r\n                            if (x) {\r\n                                if (Array.isArray(newValue)) {\r\n                                    if (newValue.indexOf(x.value) !== -1) {\r\n                                        this.node.checked = true;\r\n                                    } else {\r\n                                        this.node.checked = false;\r\n                                    }\r\n                                } else {\r\n                                    if (newValue === x.value) {\r\n                                        this.node.checked = true;\r\n                                    } else {\r\n                                        this.node.checked = false;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            if (Array.isArray(newValue)) {\r\n                                console.log('error: value is array, this should not happen');\r\n                            } else {\r\n                                this.node.checked = newValue || false;\r\n                            }\r\n\r\n                        }\r\n                        break;\r\n\r\n\r\n\r\n                    /**\r\n                     *  radio group logic\r\n                     *\r\n                     */\r\n                    case this.node.type === 'radio':\r\n                        let radios = null;\r\n                        if (this.node.form) {\r\n                            radios = this.node.form.querySelectorAll(`[name=${this.node.name}]`);\r\n                        } else {\r\n                            radios = document.querySelectorAll(`[name=${this.node.name}]`);\r\n                        }\r\n                        if (radios && radios.length > 0) {\r\n                            const modelBind = this.node.hasAttribute('model.bind') ? this.node.getAttributeNode('model.bind') : null;\r\n                            if (modelBind && (modelBind as any).getContent) {\r\n                                const x = (modelBind as any).getContent();\r\n                                if (x) {\r\n                                    if (newValue === x.value) {\r\n                                        this.node.checked = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n\r\n\r\n                    /**\r\n                     *  select with option group *single select\r\n                     *\r\n                     */\r\n                    case this.node.type === 'select-one':\r\n                        const optionsSingle = (this.node as any).options;\r\n                        let index = null;\r\n                        for (let i = 0; i < optionsSingle.length; i++) {\r\n                            const modelBind = optionsSingle[i].hasAttribute('model.bind') ? optionsSingle[i].getAttributeNode('model.bind') : null;\r\n                            if (modelBind && (modelBind as any).getContent) {\r\n                                const x = (modelBind as any).getContent();\r\n                                if (x) {\r\n                                    if (Array.isArray(newValue)) {\r\n                                        if (newValue[0] === x.value) {\r\n                                            index = i;\r\n                                        }\r\n                                    } else {\r\n                                        if (newValue === x.value) {\r\n                                            index = i;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        (this.node as any).selectedIndex = index;\r\n                        break;\r\n\r\n\r\n                    /**\r\n                     *  select with option group *multi select\r\n                     *\r\n                     */\r\n                    case this.node.type === 'select-multiple':\r\n                        const optionsMany = (this.node as any).options;\r\n                        for (let i = 0; i < optionsMany.length; i++) {\r\n                            const modelBind = optionsMany[i].hasAttribute('model.bind') ? optionsMany[i].getAttributeNode('model.bind') : null;\r\n                            if (modelBind && (modelBind as any).getContent) {\r\n                                const x = (modelBind as any).getContent();\r\n                                if (x) {\r\n                                    if (Array.isArray(newValue)) {\r\n                                        if (newValue.indexOf(x.value) !== -1) {\r\n                                            optionsMany[i].selected = true;\r\n                                        } else {\r\n                                            optionsMany[i].selected = false;\r\n                                        }\r\n                                        if (newValue.length === 0 && x.value === null) {\r\n                                            optionsMany[i].selected = true;\r\n                                        }\r\n                                    } else {\r\n                                        if (newValue === x.value) {\r\n                                            optionsMany[i].selected = true;\r\n                                        } else {\r\n                                            optionsMany[i].selected = false;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\n\r\n@customAttribute('value.bind')\r\n@customAttribute('checked.bind')\r\nexport class ValueAttribute implements IAttribute {\r\n\r\n    // build in properties added by our template engine\r\n    public $element: HTMLInputElement;\r\n    public $attribute: Attr;\r\n    public $parent: IElement;\r\n    public name: string;\r\n    public attributeName: string;\r\n    public trigger: string[];\r\n    public valueConverters: string[] = [];\r\n    public eventHandlerBinded: any;\r\n\r\n\r\n    // private vars\r\n    private expressionValue: string;\r\n    private propertyChangeHandler: any;\r\n\r\n\r\n\r\n    constructor() {\r\n\r\n        // our listener\r\n        this.eventHandlerBinded = this.eventHandler.bind(this);\r\n        // nothing atm\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * created\r\n     *\r\n     */\r\n    public created() {\r\n\r\n        this.expressionValue = (this.$attribute as any).value;\r\n        this.attributeName = this.expressionValue.split('|')[0].trim().split('&')[0].trim();\r\n        this.trigger = null;\r\n        this.name = (this.$attribute as any).name;\r\n        this.propertyChangeHandler = new PropertyChangeHandler(this.$element);\r\n\r\n\r\n        // check type is normal input\r\n        switch (true) {\r\n\r\n\r\n            /**\r\n             *  normal text input logic\r\n             *\r\n             */\r\n            case (this.$element.tagName === 'INPUT' && this.$element.type === 'text') || this.$element.tagName === 'TEXTAREA':\r\n                BindingEngine.subscribeClassProperty(this.$parent, this.expressionValue, this.propertyChangeHandler);\r\n                this.connectBehavior();\r\n                if (!this.trigger) {\r\n                    (this.$element as any).addEventListener('input', (this.eventHandlerBinded as EventListenerOrEventListenerObject), false);\r\n                } else {\r\n                    this.trigger.forEach((trigger) => {\r\n                        (this.$element as any).addEventListener(trigger, (this.eventHandlerBinded as EventListenerOrEventListenerObject), false);\r\n                    });\r\n                }\r\n                break;\r\n\r\n\r\n\r\n            /**\r\n             *  checkbox logic\r\n             *\r\n             */\r\n            case this.$element.tagName === 'INPUT' && this.$element.type === 'checkbox':\r\n                BindingEngine.subscribeClassProperty(this.$parent, this.expressionValue, this.propertyChangeHandler);\r\n                this.connectBehavior();\r\n                if (!this.trigger) {\r\n                    (this.$element as any).addEventListener('click', (this.eventHandlerBinded as EventListenerOrEventListenerObject), false);\r\n                } else {\r\n                    this.trigger.forEach((trigger) => {\r\n                        (this.$element as any).addEventListener(trigger, (this.eventHandlerBinded as EventListenerOrEventListenerObject), false);\r\n                    });\r\n                }\r\n\r\n                break;\r\n\r\n\r\n\r\n            /**\r\n             *  radio group logic\r\n             *\r\n             */\r\n            case this.$element.tagName === 'INPUT' && this.$element.type === 'radio':\r\n                BindingEngine.subscribeClassProperty(this.$parent, this.expressionValue, this.propertyChangeHandler);\r\n                this.connectBehavior();\r\n                if (!this.trigger) {\r\n                    (this.$element as any).addEventListener('click', (this.eventHandlerBinded as EventListenerOrEventListenerObject), false);\r\n                } else {\r\n                    this.trigger.forEach((trigger) => {\r\n                        (this.$element as any).addEventListener(trigger, (this.eventHandlerBinded as EventListenerOrEventListenerObject), false);\r\n                    });\r\n                }\r\n                break;\r\n\r\n\r\n\r\n            /**\r\n             *  select with option group\r\n             *\r\n             */\r\n            case this.$element.tagName === 'SELECT':\r\n                BindingEngine.subscribeClassProperty(this.$parent, this.expressionValue, this.propertyChangeHandler);\r\n                this.connectBehavior();\r\n                if (!this.trigger) {\r\n                    (this.$element as any).addEventListener('change', (this.eventHandlerBinded as EventListenerOrEventListenerObject), false);\r\n                } else {\r\n                    this.trigger.forEach((trigger) => {\r\n                        (this.$element as any).addEventListener(trigger, (this.eventHandlerBinded as EventListenerOrEventListenerObject), false);\r\n                    });\r\n                }\r\n                break;\r\n            default:\r\n            // nothing\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // being able to use my ast would have been best.\r\n    public runValueConverter(value: any) {\r\n        const x = Cache.expressionMapGet(this.expressionValue);\r\n\r\n        return BindingEngine.valueConvert((<any>x).ast, this.$parent, value);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * connectBehavior\r\n     * todo: move into utils\r\n     *\r\n     */\r\n    public connectBehavior() {\r\n        if (this.expressionValue.indexOf('&') !== -1) {\r\n            let x = Cache.expressionMapGet(this.expressionValue);\r\n            if (!x) {\r\n                const tokens: any = BindingEngine.tokenize(this.expressionValue);\r\n                x = {};\r\n                x.ast = BindingEngine.generateAST(tokens);\r\n            }\r\n            const behaviors = BindingEngine.getBehavior((<any>x).ast);\r\n            if (behaviors) {\r\n                behaviors.forEach((behavior: { name: string, args: any[] }) => {\r\n                    const x = ContainerBehavior.findBehavior(behavior.name);\r\n                    if (x) {\r\n                        let curBehavior = new x(this, behavior.args);\r\n                        curBehavior = curBehavior;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * detached\r\n     *\r\n     */\r\n    public detached() {\r\n\r\n\r\n\r\n        switch (true) {\r\n\r\n\r\n\r\n            /**\r\n             *  normal text input logic\r\n             *\r\n             */\r\n            case (this.$element.tagName === 'INPUT' && this.$element.type === 'text') || this.$element.tagName === 'TEXTAREA':\r\n                if (!this.trigger) {\r\n                    this.$element.removeEventListener('input', this.eventHandlerBinded);\r\n                } else {\r\n                    this.trigger.forEach((trigger) => {\r\n                        this.$element.removeEventListener(trigger, this.eventHandlerBinded);\r\n                    });\r\n                }\r\n                break;\r\n\r\n\r\n\r\n            /**\r\n             *  checkbox logic\r\n             *\r\n             */\r\n            case this.$element.tagName === 'INPUT' && this.$element.type === 'checkbox':\r\n                if (!this.trigger) {\r\n                    this.$element.removeEventListener('click', this.eventHandlerBinded);\r\n                } else {\r\n                    this.trigger.forEach((trigger) => {\r\n                        this.$element.removeEventListener(trigger, this.eventHandlerBinded);\r\n                    });\r\n                }\r\n                break;\r\n\r\n\r\n            /**\r\n             *  radio group logic\r\n             *\r\n             */\r\n            case this.$element.tagName === 'INPUT' && this.$element.type === 'radio':\r\n                if (!this.trigger) {\r\n                    this.$element.removeEventListener('click', this.eventHandlerBinded);\r\n                } else {\r\n                    this.trigger.forEach((trigger) => {\r\n                        this.$element.removeEventListener(trigger, this.eventHandlerBinded);\r\n                    });\r\n                }\r\n                break;\r\n\r\n\r\n\r\n            /**\r\n             *  select with option group\r\n             *\r\n             */\r\n            case this.$element.tagName === 'SELECT':\r\n                if (!this.trigger) {\r\n                    this.$element.removeEventListener('change', this.eventHandlerBinded);\r\n                } else {\r\n                    this.trigger.forEach((trigger) => {\r\n                        this.$element.removeEventListener(trigger, this.eventHandlerBinded);\r\n                    });\r\n                }\r\n                break;\r\n\r\n            default:\r\n                // just in case\r\n                (this.$attribute as any).$parent = null;\r\n                break;\r\n        }\r\n\r\n        if (this.propertyChangeHandler.caller) {\r\n            BindingEngine.unSubscribeClassProperty(this.$parent, this.propertyChangeHandler);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * event handler\r\n     *\r\n     */\r\n    public eventHandler() {\r\n\r\n\r\n        switch (true) {\r\n\r\n            /**\r\n             *  normal text input logic\r\n             *\r\n             */\r\n            case (this.$element.tagName === 'INPUT' && this.$element.type === 'text') || this.$element.tagName === 'TEXTAREA':\r\n                BindingEngine.setValue(this.$parent, this.attributeName, this.runValueConverter((this.$element as HTMLInputElement).value));\r\n                break;\r\n\r\n\r\n\r\n            /**\r\n             *  checkbox logic\r\n             *\r\n             */\r\n            case this.$element.tagName === 'INPUT' && this.$element.type === 'checkbox':\r\n                const modelBindCheckbox = (this.$element as any).hasAttribute('model.bind') ? (this.$element as any).getAttributeNode('model.bind') : null;\r\n\r\n                if (modelBindCheckbox) {\r\n\r\n                    // if we have model bind then it is a group\r\n                    const value = modelBindCheckbox.getContent().value;\r\n                    let propertyType = BindingEngine.evaluateExpression(this.$attribute.nodeValue, this.$parent);\r\n                    const isArray = Array.isArray(propertyType);\r\n                    const selected = this.$element.checked;\r\n                    if (isArray) {\r\n\r\n                        // if binded variable is array\r\n                        if (selected) {\r\n\r\n                            const ii = propertyType.indexOf(value);\r\n                            if (ii === -1) {\r\n                                propertyType = [...propertyType, this.runValueConverter(value)];\r\n                                BindingEngine.setValue(this.$parent, this.attributeName, propertyType);\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            const ii = propertyType.indexOf(value);\r\n                            if (ii !== -1) {\r\n                                propertyType.splice(ii, 1);\r\n                                if (!propertyType.__array_observer__class) {\r\n                                    propertyType = [...propertyType];\r\n                                }\r\n                                BindingEngine.setValue(this.$parent, this.attributeName, propertyType);\r\n                            } else {\r\n                                this.$element.checked = false;\r\n                            }\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        // no array, just set value\r\n                        BindingEngine.setValue(this.$parent, this.attributeName, this.runValueConverter(value) || false);\r\n                    }\r\n                } else {\r\n\r\n                    // not group, just set value\r\n                    BindingEngine.setValue(this.$parent, this.attributeName, (this.$element as HTMLInputElement).checked || false);\r\n                }\r\n                break;\r\n\r\n\r\n\r\n            /**\r\n             *  radio group logic\r\n             *\r\n             */\r\n            case this.$element.tagName === 'INPUT' && this.$element.type === 'radio':\r\n                const modelBindRadio = (this.$element as any).hasAttribute('model.bind') ? (this.$element as any).getAttributeNode('model.bind') : null;\r\n                if (modelBindRadio) {\r\n                    const value = BindingEngine.evaluateExpression(modelBindRadio.nodeValue, modelBindRadio.getContent().$parent);\r\n                    BindingEngine.setValue(this.$parent, this.attributeName, this.runValueConverter(value));\r\n                } else {\r\n                    BindingEngine.setValue(this.$parent, this.attributeName, this.runValueConverter((this.$element as HTMLInputElement).checked));\r\n                }\r\n                break;\r\n\r\n\r\n\r\n            /**\r\n             *  select with option group\r\n             *\r\n             */\r\n            case this.$element.tagName === 'SELECT':\r\n\r\n                const propertyType = BindingEngine.evaluateExpression(this.$attribute.nodeValue, this.$parent);\r\n                const isArray = Array.isArray(propertyType);\r\n                const length = (this.$element as any).selectedOptions.length;\r\n                let finalValue = null;\r\n                if (length > 1) {\r\n                    const values = [];\r\n                    for (let i = 0; i < length; i++) {\r\n                        const x = (this.$element as any).selectedOptions[i];\r\n                        const modelBind = x.hasAttribute('model.bind') ? x.getAttributeNode('model.bind') : null;\r\n                        const value = BindingEngine.evaluateExpression(modelBind.nodeValue, modelBind.getContent().$parent);\r\n                        values.push(this.runValueConverter(value));\r\n                    }\r\n                    finalValue = values;\r\n                } else {\r\n                    if (length === 0) {\r\n                        finalValue = null;\r\n                    } else {\r\n                        const x = (this.$element as any).selectedOptions[0];\r\n                        const modelBind = x.hasAttribute('model.bind') ? x.getAttributeNode('model.bind') : null;\r\n                        const value = BindingEngine.evaluateExpression(modelBind.nodeValue, modelBind.getContent().$parent);\r\n                        finalValue = value;\r\n                    }\r\n                }\r\n\r\n\r\n                if (isArray) {\r\n                    BindingEngine.setValue(this.$parent, this.attributeName, Array.isArray(finalValue) ? finalValue : finalValue === null ? [] : [finalValue]);\r\n                } else {\r\n                    BindingEngine.setValue(this.$parent, this.attributeName, Array.isArray(finalValue) ? finalValue.map(a => a) : finalValue);\r\n                }\r\n                break;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","import { customAttribute } from '../decorator/index';\r\nimport { IElement, IAttribute } from '../interface/index';\r\nimport { BindingEngine } from '../binding/index';\r\nimport { ContainerBehavior } from '../container/index';\r\nimport { Cache } from '../utils/index';\r\n\r\n/**\r\n * uses what ever name it gets with \".delegate\" and uses the name as event listener\r\n *\r\n */\r\n@customAttribute('mframejs-event-delegate.delegate')\r\nexport class DelgateEventsAttribute implements IAttribute {\r\n\r\n    public $element: HTMLInputElement;\r\n    public $attribute: Attr;\r\n    public $parent: IElement;\r\n    private value: string;\r\n    private name: string;\r\n    private expressionValue: string;\r\n    // private eventID: number;\r\n    public eventHandlerBinded: any;\r\n\r\n\r\n\r\n    constructor() {\r\n        // na\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * created\r\n     *\r\n     */\r\n    public created() {\r\n\r\n        this.name = (this.$attribute as any).name.replace('.delegate', '');\r\n        this.value = (this.$attribute as any).value;\r\n        this.expressionValue = (this.$attribute as any).value;\r\n        this.eventHandlerBinded = this.eventHandler.bind(this);\r\n        this.connectBehavior();\r\n\r\n        // todo... this isn't really delegate atm, just trigger really!!\r\n\r\n        (this.$element as any).addEventListener(this.name, (this.eventHandlerBinded as EventListenerOrEventListenerObject), false);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * attached\r\n     *\r\n     */\r\n    public attached() {\r\n        // nothing atm\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * detached\r\n     *\r\n     */\r\n    public detached() {\r\n        // this.domEventHandler.removeListener(this.eventID);\r\n        // <- I was thinking all wrong here, need to fix, attach element for now\r\n\r\n\r\n        this.$element.removeEventListener(this.name, this.eventHandlerBinded);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * when event triggers it uses the value with ast\r\n     *\r\n     */\r\n    public eventHandler(event: any): void {\r\n        BindingEngine.tokenizeParseAndTraverseAST(this.value, {\r\n            ctx: this.$parent,\r\n            $event: event,\r\n            isMultiContext: true\r\n        });\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * connectBehavior\r\n     * todo: move into utils\r\n     *\r\n     */\r\n    public connectBehavior() {\r\n        if (this.expressionValue.indexOf('&') !== -1) {\r\n            let x = Cache.expressionMapGet(this.expressionValue);\r\n            if (!x) {\r\n                const tokens: any = BindingEngine.tokenize(this.expressionValue);\r\n                x = {};\r\n                x.ast = BindingEngine.generateAST(tokens);\r\n            }\r\n            const behaviors = BindingEngine.getBehavior((<any>x).ast);\r\n            if (behaviors) {\r\n                behaviors.forEach((behavior: { name: string, args: any[] }) => {\r\n                    const x = ContainerBehavior.findBehavior(behavior.name);\r\n                    if (x) {\r\n                        let curBehavior: any = new x(this, behavior.args);\r\n                        curBehavior = curBehavior;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import { customAttribute } from '../decorator/index';\r\nimport { IElement, IAttribute } from '../interface/index';\r\nimport { BindingEngine } from '../binding/index';\r\nimport { ContainerBehavior } from '../container/index';\r\nimport { Cache } from '../utils/index';\r\n\r\n/**\r\n * uses what ever name it gets with \".trigger\" and uses the name as event listener\r\n *\r\n */\r\n@customAttribute('mframejs-event-trigger.trigger')\r\nexport class TriggerEventsAttribute implements IAttribute {\r\n\r\n    // public\r\n    public $element: HTMLInputElement;\r\n    public $attribute: Attr;\r\n    public $parent: IElement;\r\n    public eventHandlerBinded: any;\r\n\r\n    // private\r\n    private expressionValue: string;\r\n    private value: string;\r\n    private name: string;\r\n\r\n\r\n    constructor() {\r\n        // na\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * created\r\n     *\r\n     */\r\n    public created() {\r\n        this.name = this.$attribute.name.replace('.trigger', '');\r\n        this.value = this.$attribute.value;\r\n        this.expressionValue = (this.$attribute as any).value;\r\n        this.eventHandlerBinded = this.eventHandler.bind(this);\r\n        this.connectBehavior();\r\n        (this.$element as any).addEventListener(this.name, (this.eventHandlerBinded as EventListenerOrEventListenerObject), false);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * attached\r\n     *\r\n     */\r\n    public attached() {\r\n        // nothing atm\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * detached\r\n     *\r\n     */\r\n    public detached() {\r\n        this.$element.removeEventListener(this.name, this.eventHandlerBinded);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * when event triggers it uses the value with ast\r\n     *\r\n     */\r\n    public eventHandler(event: any) {\r\n        BindingEngine.tokenizeParseAndTraverseAST(this.value, {\r\n            ctx: this.$parent,\r\n            $event: event,\r\n            isMultiContext: true\r\n        });\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * connectBehavior\r\n     * todo: move into utils\r\n     *\r\n     */\r\n    public connectBehavior() {\r\n        if (this.expressionValue.indexOf('&') !== -1) {\r\n            let x = Cache.expressionMapGet(this.expressionValue);\r\n            if (!x) {\r\n                const tokens: any = BindingEngine.tokenize(this.expressionValue);\r\n                x = {};\r\n                x.ast = BindingEngine.generateAST(tokens);\r\n            }\r\n            const behaviors = BindingEngine.getBehavior((<any>x).ast);\r\n            if (behaviors) {\r\n                behaviors.forEach((behavior: { name: string, args: any[] }) => {\r\n                    const x = ContainerBehavior.findBehavior(behavior.name);\r\n                    if (x) {\r\n                        let curBehavior = new x(this, behavior.args);\r\n                        curBehavior = curBehavior;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { customAttribute } from '../decorator/index';\r\nimport { IAttribute, IElement, IRepeatCache } from '../interface/index';\r\nimport { ViewParser } from '../view/index';\r\nimport { ViewController } from '../view/index';\r\nimport { BindingEngine } from '../binding/index';\r\nimport { ArrayMethodCallHandler, ArrayPropertyChange, PropertyChangeSimple } from './repeatAttributeSubscriberHelpers';\r\n\r\n\r\n\r\n/**\r\n *  repeat for attribute\r\n *\r\n */\r\n@customAttribute('repeat.for')\r\nexport class RepeatAttribute implements IAttribute {\r\n\r\n    // added by template engine\r\n    public $element: Element;\r\n    public $attribute: Attr;\r\n    public $parent: IElement;\r\n\r\n    // my value\r\n    public value: any;\r\n\r\n    public isAttached: boolean;\r\n\r\n    // clone var\r\n    private elementClone: Node;\r\n\r\n    // anchor for when not showing\r\n    private anchor: Node;\r\n\r\n    // parent node\r\n\r\n    // internal vars\r\n    public arrayVariableName: string;\r\n    public arrayExpression: string;\r\n    public rowInstanceName: string;\r\n    public arrayMethodCallHandler: ArrayMethodCallHandler;\r\n    public arrayPropertyChangeHandler: ArrayPropertyChange;\r\n    private propertyChangeHandlerSimple: PropertyChangeSimple;\r\n    public templateArray: any = [];\r\n    public loopBinded: Function;\r\n    private repeatForArray: string[];\r\n    private $view: ViewController;\r\n    public arrayType = 'object';\r\n    private repeatTemplateCache: IRepeatCache[];\r\n    private temp: Element;\r\n    public arrayPropertyChangeHandlerLocal: ArrayPropertyChange;\r\n    public overrideContext: any;\r\n    public $array: any;\r\n\r\n\r\n\r\n    constructor() {\r\n        // nothing\r\n    }\r\n\r\n    /**\r\n     * sets local variables in the context of each row\r\n     *\r\n     */\r\n    public setArrayLocalVariables(ctx: any, i: number) {\r\n        ctx.$index = i;\r\n        ctx.$even = i % 2 === 0 ? true : false;\r\n        ctx.$odd = i % 2 === 0 ? false : true;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * created\r\n     *\r\n     */\r\n    public created() {\r\n\r\n        this.value = this.$attribute.value;\r\n        this.overrideContext = this.$parent;\r\n        this.loopBinded = this.loopArray.bind(this);\r\n\r\n        // get view instance, will need this when we create rows\r\n        if (this.$element && (this.$element as any).$view) {\r\n            this.$view = (this.$element as any).$view;\r\n        }\r\n\r\n        // remove repeat attribute, so its not initiated again\r\n        this.$element.attributes.removeNamedItem('repeat.for');\r\n\r\n        // clone of our row dom\r\n        this.elementClone = this.$element.cloneNode(true);\r\n\r\n        // temp element we will use later\r\n        this.temp = document.createElement('div');\r\n\r\n        // create dummy element, so viewparser can look at children\r\n        const x = document.createElement('div'); // this is not needed if template tag (when I add)\r\n        x.appendChild(this.elementClone);\r\n\r\n        // get dom cache, this will speed up repeat\r\n        this.repeatTemplateCache = ViewParser.createNodeParseCache(x);\r\n\r\n        // anchor so we know where to insert it, also add view to anchor, needed for viewparser to call detached\r\n        this.anchor = document.createComment('mf-repeat-for');\r\n        if (this.$view) {\r\n            (this.anchor as any).$view = this.$view;\r\n        }\r\n\r\n        // replace dom with anchor\r\n        this.remove();\r\n\r\n\r\n\r\n        // need something better... but good enough for now\r\n        this.repeatForArray = this.value.split('of');\r\n        this.repeatForArray = this.repeatForArray.map(x => x.trim());\r\n        if (this.repeatForArray.length !== 2) {\r\n            console.error('unknown expression in repeat:' + this.value);\r\n        } else {\r\n            this.rowInstanceName = this.repeatForArray[0];\r\n            this.arrayVariableName = this.repeatForArray[1];\r\n            this.arrayExpression = this.repeatForArray[1];\r\n            if (this.arrayVariableName.indexOf('|')) {\r\n                const split = this.arrayVariableName.split('|').map(x => x.trim());\r\n                this.arrayVariableName = split[0];\r\n            }\r\n            this.$array = BindingEngine.evaluateExpression(this.arrayExpression, this.$parent);\r\n            const propertyType = this.$array;\r\n\r\n\r\n            if (!Array.isArray(propertyType)) {\r\n                // not array, this can be a number or a string.\r\n                // do I want to support object or date ?\r\n                // map and set Im not going to bother atm..\r\n                if (typeof propertyType === 'number') {\r\n                    this.arrayType = 'number';\r\n                    this.subscribePropSimple();\r\n                } else {\r\n                    if (typeof propertyType === 'string') {\r\n                        this.arrayType = 'string';\r\n                        this.subscribePropSimple();\r\n                    } else {\r\n                        console.error('unknown type, only support array, string and number');\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // object array\r\n                this.subscribeArray();\r\n                this.subscribePropArray();\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * loops array and updates values/context\r\n     *\r\n     */\r\n    public loopArray(changed?: boolean, remove?: number, add?: number) {\r\n        const array = this.$array;\r\n        if (array) {\r\n            if (changed) {\r\n                if (remove) {\r\n                    const syncLength = this.templateArray.length - remove;\r\n                    for (let i = 0; i < this.templateArray.length; i++) {\r\n                        if (i < syncLength) {\r\n                            if (this.templateArray[i].ctx[this.rowInstanceName] !== array[i]) {\r\n                                this.templateArray[i].ctx[this.rowInstanceName] = array[i];\r\n                            }\r\n                        } else {\r\n                            const temp = this.templateArray.pop();\r\n                            i--; // this isnt very elegant...\r\n                            this.clearInRow(temp);\r\n                        }\r\n                    }\r\n                }\r\n                if (add) {\r\n                    const syncLength = array.length - add;\r\n                    for (let i = 0; i < array.length; i++) {\r\n                        if (i < syncLength) {\r\n                            if (this.templateArray[i].ctx[this.rowInstanceName] !== this.$array[i]) {\r\n                                this.templateArray[i].ctx[this.rowInstanceName] = this.$array[i];\r\n                            }\r\n                        } else {\r\n                            this.push(array[i]);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = 0; i < this.$array.length; i++) {\r\n                    if (this.templateArray[i].ctx[this.rowInstanceName] !== array[i]) {\r\n                        this.templateArray[i].ctx[this.rowInstanceName] = array[i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * detached, unsubscribes events\r\n     *\r\n     */\r\n    public detached() {\r\n\r\n        this.clearTemplateArray();\r\n\r\n        if (this.arrayMethodCallHandler) {\r\n            BindingEngine.unSubscribeClassArray(this.$parent, this.arrayMethodCallHandler);\r\n        }\r\n\r\n        if (this.arrayPropertyChangeHandler) {\r\n            BindingEngine.unSubscribeClassProperty(this.$parent, this.arrayPropertyChangeHandler);\r\n        }\r\n        if (this.arrayPropertyChangeHandlerLocal) {\r\n            BindingEngine.unSubscribeClassProperty(this.$parent, this.arrayPropertyChangeHandlerLocal);\r\n        }\r\n\r\n        this.$array = null;\r\n        this.arrayMethodCallHandler = null;\r\n        this.arrayPropertyChangeHandler = null;\r\n        this.arrayPropertyChangeHandlerLocal = null;\r\n        this.propertyChangeHandlerSimple = null;\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * attached, update rows\r\n     *\r\n     */\r\n    public attached() {\r\n\r\n        // var to set state\r\n        this.isAttached = true;\r\n        this.$array = BindingEngine.evaluateExpression(this.arrayExpression, this.$parent);\r\n        const array = this.$array;\r\n        if (Array.isArray(array)) {\r\n            array.forEach((ctx: any) => {\r\n                this.push(ctx);\r\n            });\r\n        } else {\r\n            if (this.arrayType === 'number') {\r\n                if (this.templateArray.length !== array) {\r\n                    this.clearTemplateArray();\r\n                    for (let i = 0; i < array; i++) {\r\n                        this.push(i);\r\n                    }\r\n                }\r\n            }\r\n            if (this.arrayType === 'string') {\r\n                const stringLength = typeof array === 'string' ? array.length : 0;\r\n                if (this.templateArray.length !== stringLength) {\r\n                    this.clearTemplateArray();\r\n                    for (let i = 0; i < stringLength; i++) {\r\n                        this.push(array[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * subscribe array in parent\r\n     *\r\n     */\r\n    public subscribeArray() {\r\n        if (!this.arrayMethodCallHandler) {\r\n            this.arrayMethodCallHandler = new ArrayMethodCallHandler(this);\r\n        }\r\n        BindingEngine.subscribeClassArray(this.$parent, this.arrayVariableName, this.arrayMethodCallHandler);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * subscribe array prop in parent\r\n     *\r\n     */\r\n    public subscribePropArray() {\r\n        if (!this.arrayPropertyChangeHandler) {\r\n            this.arrayPropertyChangeHandler = new ArrayPropertyChange(this);\r\n        }\r\n        BindingEngine.subscribeClassProperty(this.$parent, this.arrayVariableName, this.arrayPropertyChangeHandler);\r\n\r\n        if (this.arrayVariableName !== this.arrayExpression) {\r\n            if (!this.arrayPropertyChangeHandlerLocal) {\r\n                this.arrayPropertyChangeHandlerLocal = new ArrayPropertyChange(this);\r\n            }\r\n            const y = this.arrayExpression.replace(this.arrayVariableName, '$array');\r\n            BindingEngine.subscribeClassProperty(this, y, this.arrayPropertyChangeHandlerLocal);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * subscribe array in parent\r\n     *\r\n     */\r\n    public subscribePropSimple() {\r\n        if (!this.propertyChangeHandlerSimple) {\r\n            this.propertyChangeHandlerSimple = new PropertyChangeSimple(this);\r\n        }\r\n        // if expression is different we also need this\r\n      /*   if (!this.arrayPropertyChangeHandlerLocal) {\r\n            this.arrayPropertyChangeHandlerLocal = new ArrayPropertyChange(this);\r\n            const y = this.arrayExpression.replace(this.arrayVariableName, '$array');\r\n            BindingEngine.subscribeClassProperty(this, y, this.arrayPropertyChangeHandlerLocal);\r\n        } */\r\n        BindingEngine.subscribeClassProperty(this.$parent, this.arrayVariableName, this.propertyChangeHandlerSimple);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * pushes new row\r\n     *\r\n     */\r\n    public push(ctx: any, i?: number) {\r\n\r\n\r\n        const template = this.elementClone.cloneNode(true);\r\n\r\n        // parse node for custom elements and attributes with context object\r\n        const context: any = {};\r\n        context[this.rowInstanceName] = ctx;\r\n\r\n        // add override context\r\n        context.overrideContext = this.$parent;\r\n\r\n\r\n        // append new child\r\n        // const attach = ViewParser.parseNodes(template, context); // lets use nex eperimental parser... might be a bit buggy\r\n        this.temp.appendChild(template);\r\n        (template as any).$view = new ViewController(template);\r\n        const controllers = ViewParser.parseNodesWithCache(this.temp, context, this.repeatTemplateCache, (template as any).$view);\r\n\r\n        if (i === undefined) {\r\n            const length = this.templateArray.length;\r\n            this.templateArray.push({\r\n                ctx: context,\r\n                template: template\r\n            });\r\n\r\n            this.setArrayLocalVariables(context, this.templateArray.length - 1);\r\n            // this.anchor.parentNode.appendChild(template);\r\n            if (length) {\r\n                this.anchor.parentNode.insertBefore(template, this.templateArray[length - 1].template.nextSibling);\r\n            } else {\r\n                this.anchor.parentNode.insertBefore(template, this.anchor.nextSibling);\r\n            }\r\n\r\n        } else {\r\n            this.templateArray.splice(i, 0, {\r\n                ctx: context,\r\n                template: template\r\n            });\r\n            if (this.templateArray[i + 1]) {\r\n                this.anchor.parentNode.insertBefore(template, this.templateArray[i + 1].template);\r\n            } else {\r\n                this.anchor.parentNode.appendChild(template);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        // call attached\r\n        controllers.forEach((contr: any) => {\r\n\r\n            // if it have attached method\r\n            if (contr.attached) {\r\n                contr.attached();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * pops row\r\n     *\r\n     */\r\n    public pop() {\r\n        if (this.templateArray.length > 0) {\r\n            const temp = this.templateArray.pop();\r\n            this.clearInRow(temp);\r\n            this.templateArray.forEach((context: any, i: number) => {\r\n                this.setArrayLocalVariables(context, i);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * shift row\r\n     *\r\n     */\r\n    public shift() {\r\n        if (this.templateArray.length > 0) {\r\n            const temp = this.templateArray.shift();\r\n            this.clearInRow(temp);\r\n            this.templateArray.forEach((context: any, i: number) => {\r\n                this.setArrayLocalVariables(context, i);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * splice row\r\n     *\r\n     */\r\n    public splice(args: any) {\r\n        if (this.templateArray.length > 0) {\r\n            const index = args[0];\r\n            const deleted = args[1];\r\n            const added = [];\r\n            for (let i = 2; i < args.length; i++) {\r\n                if (args[i]) {\r\n                    added.push(args[i]);\r\n                }\r\n            }\r\n\r\n            if (deleted) {\r\n                const newIndex = index + deleted - 1;\r\n                for (let i = newIndex; i > index - 1; i--) {\r\n                    const temp = this.templateArray.splice(i, 1)[0];\r\n                    this.clearInRow(temp);\r\n                }\r\n            }\r\n\r\n            added.forEach((ctx) => {\r\n                this.push(ctx, index);\r\n            });\r\n            this.templateArray.forEach((context: any, i: number) => {\r\n                this.setArrayLocalVariables(context, i);\r\n            });\r\n            // get our queue\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * clear template array\r\n     *\r\n     */\r\n    public clearTemplateArray() {\r\n        // create temp div\r\n        let x = document.createElement('div');\r\n        // loop all rows div and append to temp div. by doing so we also rmove them (faster then remove)\r\n        this.templateArray.forEach((temp: any) => {\r\n            // todo:\r\n            // if repeater was using template tag, I would need to have array/object of elements here, do I even want to support that ?\r\n            // do I even want that ? maybe just support template tag on if.bind ?\r\n            x.appendChild(temp.template);\r\n        });\r\n\r\n        // now clear all views\r\n        this.templateArray.forEach((temp: any) => {\r\n            ViewParser.clearAllViews(temp.template);\r\n        });\r\n\r\n        // clear all rows\r\n        x = null;\r\n\r\n        // reset template array\r\n        this.templateArray = [];\r\n    }\r\n\r\n\r\n    /**\r\n     * remove all\r\n     *\r\n     */\r\n    private remove() {\r\n        // clear if any //todo: why is this here ?\r\n        this.clearTemplateArray();\r\n\r\n        // my repeat fail fast if it have no parent, could this happend?\r\n        this.$element.parentNode.replaceChild(this.anchor, this.$element);\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * clear 1 row\r\n     *\r\n     */\r\n    private clearInRow(rowData: any) {\r\n        if (rowData) {\r\n            let oldNode: any = rowData.template.parentNode.removeChild(rowData.template);\r\n            ViewParser.clearAllViews(oldNode);\r\n            oldNode = null;\r\n        }\r\n    }\r\n\r\n}\r\n","import { RepeatAttribute } from './repeatAttribute';\r\nimport { BindingEngine } from '../binding/index';\r\nimport { IListener } from '../interface/index';\r\nimport { ArrayObserverHandler } from '../binding/arrayObserverHandler';\r\nimport { PropertyObserverHandler } from '../binding/propertyObserverHandler';\r\n\r\n\r\n/***************************************************************\r\n *  Helpers for repeat for attribute when array changes\r\n ***************************************************************/\r\n\r\n\r\n\r\n/**\r\n *  Handles events/methods on array, like push/splice etc\r\n *\r\n */\r\nexport class ArrayMethodCallHandler implements IListener {\r\n    private repeat: RepeatAttribute;\r\n    public name: string;\r\n    public caller: ArrayObserverHandler | PropertyObserverHandler;\r\n\r\n\r\n\r\n    constructor(repeat: RepeatAttribute) {\r\n        this.repeat = repeat;\r\n        this.name = 'repeat' + this.repeat.value;\r\n    }\r\n\r\n\r\n\r\n    public call(events: any) {\r\n\r\n        let sort = true;\r\n        events.forEach((event: any) => {\r\n            switch (event.event) {\r\n                case 'push':\r\n                    let i = 0;\r\n                    while (i < event.args.length) {\r\n                        this.repeat.push(event.args[i]);\r\n                        i++;\r\n                    }\r\n                    break;\r\n                case 'reverse':\r\n                case 'sort':\r\n                    if (sort) {\r\n                        sort = false;\r\n                        const array = this.repeat.$array; // BindingEngine.evaluateExpression(this.repeat.arrayExpression, this.repeat.$parent);\r\n                        if (array) {\r\n                            array.forEach((ctx: any, i: number) => {\r\n                                this.repeat.templateArray[i].ctx[this.repeat.rowInstanceName] = ctx;\r\n                                this.repeat.setArrayLocalVariables(this.repeat.templateArray[i].ctx, i);\r\n                            });\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'shift':\r\n                    this.repeat.shift();\r\n                    break;\r\n                case 'pop':\r\n                    this.repeat.pop();\r\n                    break;\r\n                case 'splice':\r\n                    this.repeat.splice(event.args);\r\n                    break;\r\n                default:\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n *  Handles changes to array when its replaced\r\n *\r\n */\r\nexport class ArrayPropertyChange implements IListener {\r\n    private repeat: RepeatAttribute;\r\n    public name: string;\r\n    public caller: ArrayObserverHandler | PropertyObserverHandler;\r\n    public expression: boolean;\r\n\r\n\r\n    constructor(repeat: RepeatAttribute, expression?: boolean) {\r\n        this.repeat = repeat;\r\n        this.name = 'repeat' + this.repeat.value;\r\n        this.expression = expression;\r\n    }\r\n\r\n\r\n\r\n    public call() {\r\n        if (this.repeat.isAttached) {\r\n\r\n            const array = BindingEngine.evaluateExpression(this.repeat.arrayExpression, this.repeat.$parent);\r\n\r\n            if (array && this.repeat.templateArray.length !== array.length) {\r\n                this.repeat.$array = array;\r\n                if (this.repeat.templateArray.length !== 0 && array.length !== 0) {\r\n\r\n                    if (this.repeat.templateArray.length > array.length) {\r\n\r\n                        this.repeat.loopBinded(true, this.repeat.templateArray.length - array.length, 0);\r\n                    } else {\r\n                        this.repeat.loopBinded(true, 0, array.length - this.repeat.templateArray.length);\r\n                    }\r\n                    BindingEngine.unSubscribeClassArray(this.repeat.$parent, this.repeat.arrayMethodCallHandler);\r\n                    this.repeat.subscribeArray();\r\n\r\n\r\n                } else {\r\n                    this.repeat.clearTemplateArray();\r\n                    let array = BindingEngine.evaluateExpression(this.repeat.arrayExpression, this.repeat.$parent);\r\n                    if (array) {\r\n                        array.forEach((ctx: any) => {\r\n                            this.repeat.push(ctx);\r\n                        });\r\n\r\n                        BindingEngine.unSubscribeClassArray(this.repeat.$parent, this.repeat.arrayMethodCallHandler);\r\n                        this.repeat.subscribeArray();\r\n\r\n                        array = null;\r\n                    }\r\n                }\r\n            } else {\r\n\r\n                this.repeat.$array = array;\r\n                this.repeat.loopBinded();\r\n                BindingEngine.unSubscribeClassArray(this.repeat.$parent, this.repeat.arrayMethodCallHandler);\r\n                if (array) {\r\n                    this.repeat.subscribeArray();\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n *  Handles changes to property(not array when this is used) when its replaced  (simple array, not object)\r\n *\r\n */\r\nexport class PropertyChangeSimple implements IListener {\r\n    private repeat: RepeatAttribute;\r\n    public name: string;\r\n    public caller: ArrayObserverHandler | PropertyObserverHandler;\r\n\r\n\r\n\r\n    constructor(repeat: RepeatAttribute) {\r\n        this.repeat = repeat;\r\n        this.name = 'repeat' + this.repeat.value;\r\n    }\r\n\r\n\r\n\r\n    public call(newValue: any) {\r\n        if (this.repeat.isAttached) {\r\n            // todo needs to havle more..\r\n            if (this.repeat.arrayType === 'string') {\r\n                const stringLength = typeof newValue === 'string' ? newValue.length : 0;\r\n                if (this.repeat.templateArray.length !== stringLength) {\r\n                    this.repeat.clearTemplateArray();\r\n                    for (let i = 0; i < stringLength; i++) {\r\n                        this.repeat.push(newValue[i]);\r\n                    }\r\n                }\r\n            }\r\n            if (this.repeat.arrayType === 'number') {\r\n                if (this.repeat.templateArray.length !== newValue) {\r\n                    this.repeat.clearTemplateArray();\r\n                    for (let i = 0; i < newValue; i++) {\r\n                        this.repeat.push(newValue);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { customAttribute } from '../decorator/index';\r\nimport { IElement, IAttribute } from '../interface/index';\r\nimport { BindingEngine } from '../binding/index';\r\n\r\n\r\n/**\r\n * simple attribute for misc types of events/attibutes\r\n *\r\n */\r\n@customAttribute('href.bind')\r\n@customAttribute('readonly.bind')\r\n@customAttribute('disabled.bind')\r\n@customAttribute('show.bind')\r\n@customAttribute('class.bind')\r\nexport class MiscAttributes implements IAttribute {\r\n\r\n    // public\r\n    public $element: Element;\r\n    public $attribute: Attr;\r\n    public $parent: IElement;\r\n\r\n    // private\r\n    private subscribeInternal: any;\r\n    private value: string;\r\n    private init: boolean;\r\n    private name: string;\r\n\r\n\r\n    constructor() {\r\n        // na\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * created\r\n     *\r\n     */\r\n    public created() {\r\n\r\n        this.value = this.$attribute.value;\r\n        this.name = this.$attribute.name.replace('.bind', '');\r\n        this.init = true;\r\n        this.subscribeInternal = {\r\n            name: this.name + 'Attribute(misc)',\r\n            value: this.value,\r\n            call: (newValue: any, oldValue: any) => {\r\n                if (oldValue !== newValue || this.init) {\r\n                    this.init = false;\r\n                    switch (this.name) {\r\n                        case 'readonly':\r\n                            if (newValue) {\r\n                                (this.$element as any).readOnly = newValue;\r\n                            } else {\r\n                                this.$element.removeAttribute(this.name);\r\n                            }\r\n                            break;\r\n                        case 'disabled':\r\n                            if (newValue) {\r\n                                (this.$element as any).disabled = newValue;\r\n                            } else {\r\n                                this.$element.removeAttribute(this.name);\r\n                            }\r\n                            break;\r\n                        case 'class':\r\n                            if (newValue) {\r\n                                (this.$element as any).className = newValue;\r\n                            } else {\r\n                                (this.$element as any).className = '';\r\n                            }\r\n                            break;\r\n                        case 'show':\r\n                            if (newValue) {\r\n                                // todo, remove or set block, check first ?\r\n                                // or just use a class?\r\n                                (this.$element as any).style['display'] = 'block';\r\n                            } else {\r\n                                (this.$element as any).style['display'] = 'none';\r\n                            }\r\n                            break;\r\n                        default:\r\n                            this.$element.setAttribute(this.name, newValue);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        BindingEngine.subscribeClassProperty(this.$parent, this.value, this.subscribeInternal);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * detached\r\n     *\r\n     */\r\n    public detached() {\r\n        BindingEngine.unSubscribeClassProperty(this.$parent, this.subscribeInternal);\r\n        // todo\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * attached\r\n     *\r\n     */\r\n    public attached() {\r\n        // TODO: do I even need to do this, do I even wat to do this?\r\n        this.$element.removeAttribute(this.$attribute.name);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { customAttribute } from '../decorator/index';\r\nimport { IElement, IAttribute } from '../interface/index';\r\nimport { BindingEngine } from '../binding/index';\r\n\r\n\r\n\r\n/**\r\n * css replaces style in elements\r\n *\r\n */\r\n@customAttribute('css')\r\nexport class CssAttribute implements IAttribute {\r\n    public $element: Element;\r\n    public $attribute: Attr;\r\n    public $parent: IElement;\r\n    private subscribeInternal: any;\r\n    private value: string;\r\n\r\n\r\n\r\n    constructor() {\r\n\r\n        // todo?\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * created\r\n     *\r\n     */\r\n    public created() {\r\n\r\n\r\n\r\n        this.value = this.$attribute.value;\r\n        this.$element.removeAttribute(this.$attribute.name);\r\n\r\n        this.subscribeInternal = {\r\n            name: 'cssAttribute:',\r\n            value: this.value,\r\n            call: (newValue: any, oldValue: any) => {\r\n                if (oldValue !== newValue) {\r\n                    this.splitAndInsert(newValue);\r\n                }\r\n            }\r\n        };\r\n        BindingEngine.subscribeClassProperty(this.$parent, this.value, this.subscribeInternal);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * splits new value into array/maps it and sets it to style\r\n     * TODO: save state and remove old\r\n     *\r\n     */\r\n    public splitAndInsert(value: string) {\r\n        try {\r\n            const x = value\r\n                .split(';')\r\n                .map((statement: any) => {\r\n                    return statement.split(':');\r\n                }).map((result: any) => {\r\n                    return {\r\n                        attribute: result[0],\r\n                        value: result[1].replace(/ /g, '')\r\n                    };\r\n                });\r\n            x.forEach((val) => {\r\n                (<any>this.$element).style[val.attribute.trim()] = val.value.trim();\r\n            });\r\n        } catch (e) {\r\n            console.error('could not parse css values');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * detached, remove binding\r\n     *\r\n     */\r\n    public detached() {\r\n        BindingEngine.unSubscribeClassProperty(this.$parent, this.subscribeInternal);\r\n        // todo\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * attached\r\n     *\r\n     */\r\n    public attached() {\r\n        // nothing atm\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { customAttribute } from '../decorator/index';\r\nimport { IAttribute, IElement } from '../interface/index';\r\nimport { BindingEngine } from '../binding/index';\r\n/*import { IListener } from '../interface/i_Listener';\r\nimport { ContainerValueConverters, ContainerClasses } from '../container';\r\n */\r\n\r\n\r\n\r\n@customAttribute('model.bind')\r\nexport class ModelAttribute implements IAttribute {\r\n\r\n    // build in properties added by our template engine\r\n    public $element: HTMLInputElement;\r\n    public $attribute: Attr;\r\n    public $parent: IElement;\r\n    public value: any;\r\n\r\n    private subscribeInternal: any;\r\n    private expression: any;\r\n\r\n\r\n    /**\r\n     * created\r\n     *\r\n     */\r\n    public created() {\r\n\r\n        (this.$attribute as any).getContent = () => {\r\n            return this;\r\n        };\r\n        this.expression = this.$attribute.value;\r\n\r\n        this.subscribeInternal = {\r\n            name: 'modelAttribute:',\r\n            value: this.value,\r\n            call: (newValue: any, oldValue: any) => {\r\n                if (oldValue !== newValue) {\r\n                    this.value = newValue;\r\n                }\r\n            }\r\n        };\r\n        BindingEngine.subscribeClassProperty(this.$parent, this.expression, this.subscribeInternal);\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * detached\r\n     *\r\n     */\r\n    public detached() {\r\n\r\n        (this.$attribute as any).getContent = null;\r\n    }\r\n\r\n}\r\n","// cache maps\r\nconst templateMap = new Map();\r\nconst expressionMap = new Map();\r\nconst astMap = new Map();\r\nconst splitMap = new Map();\r\n\r\n\r\n/**\r\n * Cache for storing ast, templates etc o speed up misc\r\n *\r\n */\r\nexport class Cache {\r\n\r\n    public static clear() {\r\n        templateMap.clear();\r\n        expressionMap.clear();\r\n        astMap.clear();\r\n        splitMap.clear();\r\n    }\r\n\r\n\r\n\r\n    // template\r\n\r\n    public static templateMapHas(x: any) {\r\n        return templateMap.has(x);\r\n    }\r\n\r\n    public static templateMapSet(x: any, y: any) {\r\n        return templateMap.set(x, y);\r\n    }\r\n\r\n    public static templateMapGet(x: any) {\r\n        return templateMap.get(x);\r\n    }\r\n\r\n\r\n\r\n    // expressions\r\n\r\n    public static expressionMapHas(x: any) {\r\n        return expressionMap.has(x);\r\n    }\r\n\r\n    public static expressionMapSet(x: any, y: any) {\r\n        return expressionMap.set(x, y);\r\n    }\r\n\r\n    public static expressionMapGet(x: any) {\r\n        return expressionMap.get(x);\r\n    }\r\n\r\n\r\n\r\n    // ast\r\n\r\n    public static astMapHas(x: any) {\r\n        return astMap.has(x);\r\n    }\r\n\r\n    public static astMapSet(x: any, y: any) {\r\n        return astMap.set(x, y);\r\n    }\r\n\r\n    public static astMapGet(x: any) {\r\n        return astMap.get(x);\r\n    }\r\n\r\n\r\n\r\n    // string splits\r\n\r\n    public static splitMapHas(x: any) {\r\n        return splitMap.has(x);\r\n    }\r\n\r\n    public static splitMapSet(x: any, y: any) {\r\n        return splitMap.set(x, y);\r\n    }\r\n\r\n    public static splitMapGet(x: any) {\r\n        return splitMap.get(x);\r\n    }\r\n\r\n}\r\n","\r\nlet loggerActive = false;\r\nlet id = 10000;\r\nlet defaultLog: any;\r\n\r\nexport class Logger {\r\n    private name: string;\r\n    private category: string;\r\n    private id: number;\r\n\r\n    constructor(name: string, category?: string) {\r\n        this.id = id;\r\n        id++;\r\n        this.name = name;\r\n        this.category = category || 'unamed';\r\n    }\r\n\r\n    public static getLogger(name: string, category?: string): Logger {\r\n        if (loggerActive) {\r\n            return new Logger(name, category);\r\n        } else {\r\n            return defaultLog;\r\n        }\r\n    }\r\n\r\n    public static enable() {\r\n        loggerActive = true;\r\n    }\r\n\r\n    public static disable() {\r\n        loggerActive = false;\r\n    }\r\n\r\n    public log(...msg: any[]) {\r\n        if (loggerActive) {\r\n            console.log(`Log[${this.id}] - [${this.category}] - [${this.name}] `, msg.join(' - '));\r\n        }\r\n    }\r\n\r\n}\r\n\r\ndefaultLog = new Logger('na', 'na');\r\n\r\n"]}